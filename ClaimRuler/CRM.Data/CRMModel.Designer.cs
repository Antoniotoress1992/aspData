//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CRMModel", "FK_SecModule_SecModule", "SecModule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecModule), "SecModule1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecModule), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_SecRoleModule_SecModule", "SecModule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecModule), "SecRoleModule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecRoleModule), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CityMaster_StateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.StateMaster), "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CityMaster), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_TaskStatus", "TaskStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.TaskStatus), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Task), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Client_CityMaster", "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CityMaster), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Client), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Client_StateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Client), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadInvoice", "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadInvoice), "LeadInvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadContactType", "LeadContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadContactType), "LeadContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadContact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadContactInsuranceType", "InsuranceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.InsuranceType), "LeadContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadContact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_ReminderMaster_StatusMaster", "ReminderMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.ReminderMaster), "StatusMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.StatusMaster), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_AdjusterMaster_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Client), "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterMaster), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadDocumentList", "DocumentListMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.DocumentListMaster), "LeadDocumentList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadDocumentList), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_SecRoleModule_SecRole", "SecRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.SecRole), "SecRoleModule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecRoleModule), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Task_TaskPriority", "TaskPriority", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.TaskPriority), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Task), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Ledger_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "Ledger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Ledger), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Ledger_LeadInvoice", "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadInvoice), "Ledger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Ledger), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicyLienholder_Mortgagee", "Mortgagee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Mortgagee), "LeadPolicyLienholder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicyLienholder), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Mortgagee_CityMaster", "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CityMaster), "Mortgagee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Mortgagee), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Mortgagee_StateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "Mortgagee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Mortgagee), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Mortgagee_ZipCodeMaster", "ZipCodeMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.ZipCodeMaster), "Mortgagee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Mortgagee), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "AdjusterHandleClaimType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterHandleClaimType), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterHandleClaimType_LeadPolicyType", "LeadPolicyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadPolicyType), "AdjusterHandleClaimType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterHandleClaimType), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterServiceArea_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "AdjusterServiceArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterServiceArea), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterServiceArea_StateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "AdjusterServiceArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterServiceArea), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterReference_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "AdjusterReference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterReference), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterNote_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "AdjusterNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterNote), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_AdjusterMaster_StateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterMaster), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadPolicyDamageType_TypeOfDamageMaster", "TypeOfDamageMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.TypeOfDamageMaster), "LeadPolicyDamageType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicyDamageType), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicy_Adjuster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolictyCityMaster", "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CityMaster), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolictyState", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicy_LeadPolicyType", "LeadPolicyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadPolicyType), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicy_SubLimitOfLiabilityMaster", "SubLimitOfLiabilityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SubLimitOfLiabilityMaster), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.LeadPolicy), "LeadPolicyDamageType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicyDamageType), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicyStatus", "StatusMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StatusMaster), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicySubStatus", "SubStatusMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SubStatusMaster), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_AdjusterMaster_DeploymentState", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterMaster), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicy_Mortgagee", "Mortgagee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Mortgagee), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicy_TypeOfDamageMaster", "TypeOfDamageMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.TypeOfDamageMaster), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Carrier_CityMaster", "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CityMaster), "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Carrier), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Carrier_stateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Carrier), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Carrier_ZipCodeMaster", "ZipCodeMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.ZipCodeMaster), "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Carrier), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierLocation_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Carrier), "CarrierLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierLocation), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicy_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Carrier), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierLocation_CityMaster", "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CityMaster), "CarrierLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierLocation), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierLocation_StateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "CarrierLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierLocation), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadInvoice_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadInvoice_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Carrier), "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadInvoice_CarrierInvoiceType", "CarrierInvoiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CarrierInvoiceType), "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadInvoice_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Client), "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadInvoice_LeadPolicy", "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadPolicy), "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_SecRoleInvoiceApprovalRule_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Client), "SecRoleInvoiceApprovalPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecRoleInvoiceApprovalPermission), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_SecRoleInvoiceApprovalRule_SecRole", "SecRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.SecRole), "SecRoleInvoiceApprovalPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecRoleInvoiceApprovalPermission), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierComment_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Carrier), "CarrierComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierComment), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierDocument_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Carrier), "CarrierDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierDocument), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Contact_CityMaster", "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CityMaster), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Contact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Contact_LeadContactType", "LeadContactType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadContactType), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Contact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Contact_StateMaster", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Contact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierContact_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Carrier), "CarrierContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierContact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierContact_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Contact), "CarrierContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierContact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimContact_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Contact), "ClaimContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimContact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_PolicyPropertyLimit_LeadPolicy", "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.LeadPolicy), "PolicyLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.PolicyLimit), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_PolicyLimit_Limit", "Limit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Limit), "PolicyLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.PolicyLimit), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimLimit_Limit", "Limit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Limit), "ClaimLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimLimit), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_PolicySubLimit_LeadPolicy", "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.LeadPolicy), "PolicySubLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.PolicySubLimit), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimSubLimit_PolicySubLimit", "PolicySubLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.PolicySubLimit), "ClaimSubLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimSubLimit), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterLicenseAppointmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterLicenseAppointmentType), "AdjusterServiceArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterServiceArea), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Invoice_CarrierInvoiceType", "CarrierInvoiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CarrierInvoiceType), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_InvoiceDetail_Invoice", "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Invoice), "InvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.InvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceServiceUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.InvoiceServiceUnit), "InvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.InvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Lead_Appraiser", "AppraiserMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AppraiserMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadCityId", "CityMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CityMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Lead_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Client), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Lead_Contractor", "ContractorMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.ContractorMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadInspectorName", "InspectorMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.InspectorMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadComment", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "LeadComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadComment), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Invoice_Lead", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicty", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicy), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadPolicyLienholder_Lead", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "LeadPolicyLienholder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadPolicyLienholder), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Lead", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Task), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Lead_Umpire", "UmpireMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.UmpireMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadOtherSource", "OtherSourceMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.OtherSourceMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadOwnerSame", "OwnerSameMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.OwnerSameMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadReporterToInsurer", "ReportedToInsurerMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.ReportedToInsurerMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadsDocument", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "LeadsDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadsDocument), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadsImage", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Lead), "LeadsImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadsImage), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadSiteInspectionCompleted", "SiteInspectionCompleteMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SiteInspectionCompleteMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadSource", "LeadSourceMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.LeadSourceMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadStateId", "StateMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StateMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadTypeofProperty", "TypeOfPropertyMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.TypeOfPropertyMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Ledger_Leads", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "Ledger", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Ledger), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_PrimaryProducerId", "ProducerMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.ProducerMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_SecondaryProducerId", "SecondaryProducerMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecondaryProducerMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierInvoiceProfile_Carrier", "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Carrier), "CarrierInvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierInvoiceProfile), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.CarrierInvoiceProfile), "CarrierInvoiceProfileFeeItemized", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierInvoiceProfileFeeItemized), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.CarrierInvoiceProfile), "CarrierInvoiceProfileFeeProvision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierInvoiceProfileFeeProvision), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.CarrierInvoiceProfile), "CarrierInvoiceProfileFeeSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierInvoiceProfileFeeSchedule), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Invoice_CarrierInvoiceProfile", "CarrierInvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CarrierInvoiceProfile), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LeadInvoice_CarrierInvoiceProfile", "CarrierInvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CarrierInvoiceProfile), "LeadInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_AdjusterNote_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "AdjusterNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.AdjusterNote), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierComment_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.SecUser), "CarrierComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierComment), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimComment_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.SecUser), "ClaimComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimComment), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimImage_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "ClaimImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimImage), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Client_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Client), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_ClientSecUSer", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Client), "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecUser), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadCommentUserId", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "LeadComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadComment), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadUserId", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_LotteryUser_LotteryRole", "SecRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.SecRole), "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecUser), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_SecUSer", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Task), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_UserId", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "SecUserLock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.SecUserLock), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_PolicyLienholder_LeadPolicy", "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.LeadPolicy), "PolicyLienholder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.PolicyLienholder), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_PolicyLienholder_Mortgagee", "Mortgagee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Mortgagee), "PolicyLienholder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.PolicyLienholder), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadAdjuster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Lead_Status", "StatusMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StatusMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadSubStatus", "SubStatusMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SubStatusMaster), "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Lead), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Claim_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Claim), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Claim_LeadPolicy", "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.LeadPolicy), "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Claim), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Claim_StatusMaster", "StatusMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.StatusMaster), "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Claim), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Claim_SubStatusMaster", "SubStatusMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SubStatusMaster), "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Claim), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimComment_Claim", "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Claim), "ClaimComment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimComment), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimDocument_Claim", "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Claim), "ClaimDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimDocument), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimImage_Claim", "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Claim), "ClaimImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimImage), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimLimit_Claim", "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Claim), "ClaimLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimLimit), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimSubLimit_Claim", "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Claim), "ClaimSubLimit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimSubLimit), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Invoice_Claim", "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.Claim), "Invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Invoice), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Contact_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Contact), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimExpense_ClaimExpense", "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.ExpenseType), "ClaimExpense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimExpense), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimExpense_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "ClaimExpense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimExpense), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Claim_Contact_Supervisor", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Contact), "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Claim), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimExpense_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "ClaimExpense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimExpense), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_InvoiceDetail_InvoiceServiceType", "InvoiceServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.InvoiceServiceType), "InvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.InvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.InvoiceServiceUnit), "InvoiceServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.InvoiceServiceType), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_LeadInvoiceDetail_ServiceType", "InvoiceServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.InvoiceServiceType), "LeadInvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.LeadInvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_DataFormFields_DataForm", "DataForm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.DataForm), "DataFormField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.DataFormField), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "fk_Carrier_Country", "CountryMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CountryMaster), "Carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Carrier), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierLocation_CountryMaster", "CountryMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CountryMaster), "CarrierLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierLocation), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimService_AdjusterMaster", "AdjusterMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.AdjusterMaster), "ClaimService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimService), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimService_Claim", "Claim", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Claim), "ClaimService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimService), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimService_InvoiceServiceType", "InvoiceServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.InvoiceServiceType), "ClaimService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimService), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimService_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.SecUser), "ClaimService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimService), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_DataFormFieldTemplate_DataFormFields", "DataFormField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.DataFormField), "DataFormFieldTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.DataFormFieldTemplate), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_DataFormFieldTemplate_DataForm", "DataForm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.DataForm), "DataFormFieldTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.DataFormFieldTemplate), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Reminder_Task", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Task), "Reminder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Reminder), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Invitee_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Contact), "Invitee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Invitee), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Invitee_Leads", "Lead", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Lead), "Invitee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Invitee), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Invitee_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "Invitee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Invitee), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Invitee_Task", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Task), "Invitee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Invitee), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_Task_Recurrence", "Recurrence", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Recurrence), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.Task), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_PolicyNote_LeadPolicy", "LeadPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.LeadPolicy), "PolicyNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.PolicyNote), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_PolicyNote_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "PolicyNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.PolicyNote), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.CarrierInvoiceType), "CarrierInvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierInvoiceProfile), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "InvoiceServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.InvoiceServiceType), "CarrierInvoiceProfileFeeItemized", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierInvoiceProfileFeeItemized), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.ExpenseType), "CarrierInvoiceProfileFeeItemized", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.CarrierInvoiceProfileFeeItemized), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_BusinessRule_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Client), "BusinessRule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.BusinessRule), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_BusinessRule_Rule", "Rule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Rule), "BusinessRule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.BusinessRule), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_RuleException_BusinessRule", "BusinessRule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.BusinessRule), "RuleException", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.RuleException), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_RuleException_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.Client), "RuleException", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.RuleException), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_RuleException_SecUser", "SecUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.SecUser), "RuleException", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.RuleException), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_RuleException_RuleException", "RuleException", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CRM.Data.RuleException), "RuleException1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.RuleException), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_RuleException_RuleObject", "RuleObject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.RuleObject), "RuleException", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.RuleException), true)]
[assembly: EdmRelationshipAttribute("CRMModel", "FK_ClaimDocument_DocumentCategory", "DocumentCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CRM.Data.DocumentCategory), "ClaimDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CRM.Data.ClaimDocument), true)]

#endregion

namespace CRM.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CRMEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CRMEntities object using the connection string found in the 'CRMEntities' section of the application configuration file.
        /// </summary>
        public CRMEntities() : base("name=CRMEntities", "CRMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CRMEntities object.
        /// </summary>
        public CRMEntities(string connectionString) : base(connectionString, "CRMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CRMEntities object.
        /// </summary>
        public CRMEntities(EntityConnection connection) : base(connection, "CRMEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CityMaster> CityMasters
        {
            get
            {
                if ((_CityMasters == null))
                {
                    _CityMasters = base.CreateObjectSet<CityMaster>("CityMasters");
                }
                return _CityMasters;
            }
        }
        private ObjectSet<CityMaster> _CityMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadReportGenerateLog> LeadReportGenerateLogs
        {
            get
            {
                if ((_LeadReportGenerateLogs == null))
                {
                    _LeadReportGenerateLogs = base.CreateObjectSet<LeadReportGenerateLog>("LeadReportGenerateLogs");
                }
                return _LeadReportGenerateLogs;
            }
        }
        private ObjectSet<LeadReportGenerateLog> _LeadReportGenerateLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProducerMaster> ProducerMasters
        {
            get
            {
                if ((_ProducerMasters == null))
                {
                    _ProducerMasters = base.CreateObjectSet<ProducerMaster>("ProducerMasters");
                }
                return _ProducerMasters;
            }
        }
        private ObjectSet<ProducerMaster> _ProducerMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecLoginLog> SecLoginLogs
        {
            get
            {
                if ((_SecLoginLogs == null))
                {
                    _SecLoginLogs = base.CreateObjectSet<SecLoginLog>("SecLoginLogs");
                }
                return _SecLoginLogs;
            }
        }
        private ObjectSet<SecLoginLog> _SecLoginLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecUserLock> SecUserLocks
        {
            get
            {
                if ((_SecUserLocks == null))
                {
                    _SecUserLocks = base.CreateObjectSet<SecUserLock>("SecUserLocks");
                }
                return _SecUserLocks;
            }
        }
        private ObjectSet<SecUserLock> _SecUserLocks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecRoleModule> SecRoleModules
        {
            get
            {
                if ((_SecRoleModules == null))
                {
                    _SecRoleModules = base.CreateObjectSet<SecRoleModule>("SecRoleModules");
                }
                return _SecRoleModules;
            }
        }
        private ObjectSet<SecRoleModule> _SecRoleModules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecModule> SecModules
        {
            get
            {
                if ((_SecModules == null))
                {
                    _SecModules = base.CreateObjectSet<SecModule>("SecModules");
                }
                return _SecModules;
            }
        }
        private ObjectSet<SecModule> _SecModules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationConfiguration> ApplicationConfigurations
        {
            get
            {
                if ((_ApplicationConfigurations == null))
                {
                    _ApplicationConfigurations = base.CreateObjectSet<ApplicationConfiguration>("ApplicationConfigurations");
                }
                return _ApplicationConfigurations;
            }
        }
        private ObjectSet<ApplicationConfiguration> _ApplicationConfigurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadsImage> LeadsImages
        {
            get
            {
                if ((_LeadsImages == null))
                {
                    _LeadsImages = base.CreateObjectSet<LeadsImage>("LeadsImages");
                }
                return _LeadsImages;
            }
        }
        private ObjectSet<LeadsImage> _LeadsImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjusterMaster> AdjusterMasters
        {
            get
            {
                if ((_AdjusterMasters == null))
                {
                    _AdjusterMasters = base.CreateObjectSet<AdjusterMaster>("AdjusterMasters");
                }
                return _AdjusterMasters;
            }
        }
        private ObjectSet<AdjusterMaster> _AdjusterMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InspectorMaster> InspectorMasters
        {
            get
            {
                if ((_InspectorMasters == null))
                {
                    _InspectorMasters = base.CreateObjectSet<InspectorMaster>("InspectorMasters");
                }
                return _InspectorMasters;
            }
        }
        private ObjectSet<InspectorMaster> _InspectorMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadSourceMaster> LeadSourceMasters
        {
            get
            {
                if ((_LeadSourceMasters == null))
                {
                    _LeadSourceMasters = base.CreateObjectSet<LeadSourceMaster>("LeadSourceMasters");
                }
                return _LeadSourceMasters;
            }
        }
        private ObjectSet<LeadSourceMaster> _LeadSourceMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OtherSourceMaster> OtherSourceMasters
        {
            get
            {
                if ((_OtherSourceMasters == null))
                {
                    _OtherSourceMasters = base.CreateObjectSet<OtherSourceMaster>("OtherSourceMasters");
                }
                return _OtherSourceMasters;
            }
        }
        private ObjectSet<OtherSourceMaster> _OtherSourceMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OwnerSameMaster> OwnerSameMasters
        {
            get
            {
                if ((_OwnerSameMasters == null))
                {
                    _OwnerSameMasters = base.CreateObjectSet<OwnerSameMaster>("OwnerSameMasters");
                }
                return _OwnerSameMasters;
            }
        }
        private ObjectSet<OwnerSameMaster> _OwnerSameMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportedToInsurerMaster> ReportedToInsurerMasters
        {
            get
            {
                if ((_ReportedToInsurerMasters == null))
                {
                    _ReportedToInsurerMasters = base.CreateObjectSet<ReportedToInsurerMaster>("ReportedToInsurerMasters");
                }
                return _ReportedToInsurerMasters;
            }
        }
        private ObjectSet<ReportedToInsurerMaster> _ReportedToInsurerMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecondaryProducerMaster> SecondaryProducerMasters
        {
            get
            {
                if ((_SecondaryProducerMasters == null))
                {
                    _SecondaryProducerMasters = base.CreateObjectSet<SecondaryProducerMaster>("SecondaryProducerMasters");
                }
                return _SecondaryProducerMasters;
            }
        }
        private ObjectSet<SecondaryProducerMaster> _SecondaryProducerMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SiteInspectionCompleteMaster> SiteInspectionCompleteMasters
        {
            get
            {
                if ((_SiteInspectionCompleteMasters == null))
                {
                    _SiteInspectionCompleteMasters = base.CreateObjectSet<SiteInspectionCompleteMaster>("SiteInspectionCompleteMasters");
                }
                return _SiteInspectionCompleteMasters;
            }
        }
        private ObjectSet<SiteInspectionCompleteMaster> _SiteInspectionCompleteMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StatusMaster> StatusMasters
        {
            get
            {
                if ((_StatusMasters == null))
                {
                    _StatusMasters = base.CreateObjectSet<StatusMaster>("StatusMasters");
                }
                return _StatusMasters;
            }
        }
        private ObjectSet<StatusMaster> _StatusMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubStatusMaster> SubStatusMasters
        {
            get
            {
                if ((_SubStatusMasters == null))
                {
                    _SubStatusMasters = base.CreateObjectSet<SubStatusMaster>("SubStatusMasters");
                }
                return _SubStatusMasters;
            }
        }
        private ObjectSet<SubStatusMaster> _SubStatusMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeOfDamageMaster> TypeOfDamageMasters
        {
            get
            {
                if ((_TypeOfDamageMasters == null))
                {
                    _TypeOfDamageMasters = base.CreateObjectSet<TypeOfDamageMaster>("TypeOfDamageMasters");
                }
                return _TypeOfDamageMasters;
            }
        }
        private ObjectSet<TypeOfDamageMaster> _TypeOfDamageMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeOfPropertyMaster> TypeOfPropertyMasters
        {
            get
            {
                if ((_TypeOfPropertyMasters == null))
                {
                    _TypeOfPropertyMasters = base.CreateObjectSet<TypeOfPropertyMaster>("TypeOfPropertyMasters");
                }
                return _TypeOfPropertyMasters;
            }
        }
        private ObjectSet<TypeOfPropertyMaster> _TypeOfPropertyMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateMaster> StateMasters
        {
            get
            {
                if ((_StateMasters == null))
                {
                    _StateMasters = base.CreateObjectSet<StateMaster>("StateMasters");
                }
                return _StateMasters;
            }
        }
        private ObjectSet<StateMaster> _StateMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadComment> LeadComments
        {
            get
            {
                if ((_LeadComments == null))
                {
                    _LeadComments = base.CreateObjectSet<LeadComment>("LeadComments");
                }
                return _LeadComments;
            }
        }
        private ObjectSet<LeadComment> _LeadComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZipCodeMaster> ZipCodeMasters
        {
            get
            {
                if ((_ZipCodeMasters == null))
                {
                    _ZipCodeMasters = base.CreateObjectSet<ZipCodeMaster>("ZipCodeMasters");
                }
                return _ZipCodeMasters;
            }
        }
        private ObjectSet<ZipCodeMaster> _ZipCodeMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadContactType> LeadContactTypes
        {
            get
            {
                if ((_LeadContactTypes == null))
                {
                    _LeadContactTypes = base.CreateObjectSet<LeadContactType>("LeadContactTypes");
                }
                return _LeadContactTypes;
            }
        }
        private ObjectSet<LeadContactType> _LeadContactTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceType> InsuranceTypes
        {
            get
            {
                if ((_InsuranceTypes == null))
                {
                    _InsuranceTypes = base.CreateObjectSet<InsuranceType>("InsuranceTypes");
                }
                return _InsuranceTypes;
            }
        }
        private ObjectSet<InsuranceType> _InsuranceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskStatus> TaskStatuses
        {
            get
            {
                if ((_TaskStatuses == null))
                {
                    _TaskStatuses = base.CreateObjectSet<TaskStatus>("TaskStatuses");
                }
                return _TaskStatuses;
            }
        }
        private ObjectSet<TaskStatus> _TaskStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadDocumentList> LeadDocumentLists
        {
            get
            {
                if ((_LeadDocumentLists == null))
                {
                    _LeadDocumentLists = base.CreateObjectSet<LeadDocumentList>("LeadDocumentLists");
                }
                return _LeadDocumentLists;
            }
        }
        private ObjectSet<LeadDocumentList> _LeadDocumentLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadInvoice> LeadInvoices
        {
            get
            {
                if ((_LeadInvoices == null))
                {
                    _LeadInvoices = base.CreateObjectSet<LeadInvoice>("LeadInvoices");
                }
                return _LeadInvoices;
            }
        }
        private ObjectSet<LeadInvoice> _LeadInvoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadInvoiceDetail> LeadInvoiceDetails
        {
            get
            {
                if ((_LeadInvoiceDetails == null))
                {
                    _LeadInvoiceDetails = base.CreateObjectSet<LeadInvoiceDetail>("LeadInvoiceDetails");
                }
                return _LeadInvoiceDetails;
            }
        }
        private ObjectSet<LeadInvoiceDetail> _LeadInvoiceDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadsDocument> LeadsDocuments
        {
            get
            {
                if ((_LeadsDocuments == null))
                {
                    _LeadsDocuments = base.CreateObjectSet<LeadsDocument>("LeadsDocuments");
                }
                return _LeadsDocuments;
            }
        }
        private ObjectSet<LeadsDocument> _LeadsDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadContact> LeadContacts
        {
            get
            {
                if ((_LeadContacts == null))
                {
                    _LeadContacts = base.CreateObjectSet<LeadContact>("LeadContacts");
                }
                return _LeadContacts;
            }
        }
        private ObjectSet<LeadContact> _LeadContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorMaster> ContractorMasters
        {
            get
            {
                if ((_ContractorMasters == null))
                {
                    _ContractorMasters = base.CreateObjectSet<ContractorMaster>("ContractorMasters");
                }
                return _ContractorMasters;
            }
        }
        private ObjectSet<ContractorMaster> _ContractorMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppraiserMaster> AppraiserMasters
        {
            get
            {
                if ((_AppraiserMasters == null))
                {
                    _AppraiserMasters = base.CreateObjectSet<AppraiserMaster>("AppraiserMasters");
                }
                return _AppraiserMasters;
            }
        }
        private ObjectSet<AppraiserMaster> _AppraiserMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UmpireMaster> UmpireMasters
        {
            get
            {
                if ((_UmpireMasters == null))
                {
                    _UmpireMasters = base.CreateObjectSet<UmpireMaster>("UmpireMasters");
                }
                return _UmpireMasters;
            }
        }
        private ObjectSet<UmpireMaster> _UmpireMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReminderMaster> ReminderMasters
        {
            get
            {
                if ((_ReminderMasters == null))
                {
                    _ReminderMasters = base.CreateObjectSet<ReminderMaster>("ReminderMasters");
                }
                return _ReminderMasters;
            }
        }
        private ObjectSet<ReminderMaster> _ReminderMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientLetterTemplate> ClientLetterTemplates
        {
            get
            {
                if ((_ClientLetterTemplates == null))
                {
                    _ClientLetterTemplates = base.CreateObjectSet<ClientLetterTemplate>("ClientLetterTemplates");
                }
                return _ClientLetterTemplates;
            }
        }
        private ObjectSet<ClientLetterTemplate> _ClientLetterTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldColumn> FieldColumns
        {
            get
            {
                if ((_FieldColumns == null))
                {
                    _FieldColumns = base.CreateObjectSet<FieldColumn>("FieldColumns");
                }
                return _FieldColumns;
            }
        }
        private ObjectSet<FieldColumn> _FieldColumns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientFieldColumn> ClientFieldColumns
        {
            get
            {
                if ((_ClientFieldColumns == null))
                {
                    _ClientFieldColumns = base.CreateObjectSet<ClientFieldColumn>("ClientFieldColumns");
                }
                return _ClientFieldColumns;
            }
        }
        private ObjectSet<ClientFieldColumn> _ClientFieldColumns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_FieldColumn> vw_FieldColumn
        {
            get
            {
                if ((_vw_FieldColumn == null))
                {
                    _vw_FieldColumn = base.CreateObjectSet<vw_FieldColumn>("vw_FieldColumn");
                }
                return _vw_FieldColumn;
            }
        }
        private ObjectSet<vw_FieldColumn> _vw_FieldColumn;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_closeLeadClaim> vw_closeLeadClaims
        {
            get
            {
                if ((_vw_closeLeadClaims == null))
                {
                    _vw_closeLeadClaims = base.CreateObjectSet<vw_closeLeadClaim>("vw_closeLeadClaims");
                }
                return _vw_closeLeadClaims;
            }
        }
        private ObjectSet<vw_closeLeadClaim> _vw_closeLeadClaims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_openLeadClaim> vw_openLeadClaims
        {
            get
            {
                if ((_vw_openLeadClaims == null))
                {
                    _vw_openLeadClaims = base.CreateObjectSet<vw_openLeadClaim>("vw_openLeadClaims");
                }
                return _vw_openLeadClaims;
            }
        }
        private ObjectSet<vw_openLeadClaim> _vw_openLeadClaims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentListMaster> DocumentListMasters
        {
            get
            {
                if ((_DocumentListMasters == null))
                {
                    _DocumentListMasters = base.CreateObjectSet<DocumentListMaster>("DocumentListMasters");
                }
                return _DocumentListMasters;
            }
        }
        private ObjectSet<DocumentListMaster> _DocumentListMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecRole> SecRoles
        {
            get
            {
                if ((_SecRoles == null))
                {
                    _SecRoles = base.CreateObjectSet<SecRole>("SecRoles");
                }
                return _SecRoles;
            }
        }
        private ObjectSet<SecRole> _SecRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceServiceUnit> InvoiceServiceUnits
        {
            get
            {
                if ((_InvoiceServiceUnits == null))
                {
                    _InvoiceServiceUnits = base.CreateObjectSet<InvoiceServiceUnit>("InvoiceServiceUnits");
                }
                return _InvoiceServiceUnits;
            }
        }
        private ObjectSet<InvoiceServiceUnit> _InvoiceServiceUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadPolicyType> LeadPolicyTypes
        {
            get
            {
                if ((_LeadPolicyTypes == null))
                {
                    _LeadPolicyTypes = base.CreateObjectSet<LeadPolicyType>("LeadPolicyTypes");
                }
                return _LeadPolicyTypes;
            }
        }
        private ObjectSet<LeadPolicyType> _LeadPolicyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskPriority> TaskPriorities
        {
            get
            {
                if ((_TaskPriorities == null))
                {
                    _TaskPriorities = base.CreateObjectSet<TaskPriority>("TaskPriorities");
                }
                return _TaskPriorities;
            }
        }
        private ObjectSet<TaskPriority> _TaskPriorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskReminderMaster> TaskReminderMasters
        {
            get
            {
                if ((_TaskReminderMasters == null))
                {
                    _TaskReminderMasters = base.CreateObjectSet<TaskReminderMaster>("TaskReminderMasters");
                }
                return _TaskReminderMasters;
            }
        }
        private ObjectSet<TaskReminderMaster> _TaskReminderMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ledger> Ledgers
        {
            get
            {
                if ((_Ledgers == null))
                {
                    _Ledgers = base.CreateObjectSet<Ledger>("Ledgers");
                }
                return _Ledgers;
            }
        }
        private ObjectSet<Ledger> _Ledgers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mortgagee> Mortgagees
        {
            get
            {
                if ((_Mortgagees == null))
                {
                    _Mortgagees = base.CreateObjectSet<Mortgagee>("Mortgagees");
                }
                return _Mortgagees;
            }
        }
        private ObjectSet<Mortgagee> _Mortgagees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadPolicyLienholder> LeadPolicyLienholders
        {
            get
            {
                if ((_LeadPolicyLienholders == null))
                {
                    _LeadPolicyLienholders = base.CreateObjectSet<LeadPolicyLienholder>("LeadPolicyLienholders");
                }
                return _LeadPolicyLienholders;
            }
        }
        private ObjectSet<LeadPolicyLienholder> _LeadPolicyLienholders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjusterHandleClaimType> AdjusterHandleClaimTypes
        {
            get
            {
                if ((_AdjusterHandleClaimTypes == null))
                {
                    _AdjusterHandleClaimTypes = base.CreateObjectSet<AdjusterHandleClaimType>("AdjusterHandleClaimTypes");
                }
                return _AdjusterHandleClaimTypes;
            }
        }
        private ObjectSet<AdjusterHandleClaimType> _AdjusterHandleClaimTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjusterServiceArea> AdjusterServiceAreas
        {
            get
            {
                if ((_AdjusterServiceAreas == null))
                {
                    _AdjusterServiceAreas = base.CreateObjectSet<AdjusterServiceArea>("AdjusterServiceAreas");
                }
                return _AdjusterServiceAreas;
            }
        }
        private ObjectSet<AdjusterServiceArea> _AdjusterServiceAreas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjusterReference> AdjusterReferences
        {
            get
            {
                if ((_AdjusterReferences == null))
                {
                    _AdjusterReferences = base.CreateObjectSet<AdjusterReference>("AdjusterReferences");
                }
                return _AdjusterReferences;
            }
        }
        private ObjectSet<AdjusterReference> _AdjusterReferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjusterNote> AdjusterNotes
        {
            get
            {
                if ((_AdjusterNotes == null))
                {
                    _AdjusterNotes = base.CreateObjectSet<AdjusterNote>("AdjusterNotes");
                }
                return _AdjusterNotes;
            }
        }
        private ObjectSet<AdjusterNote> _AdjusterNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadPolicyDamageType> LeadPolicyDamageTypes
        {
            get
            {
                if ((_LeadPolicyDamageTypes == null))
                {
                    _LeadPolicyDamageTypes = base.CreateObjectSet<LeadPolicyDamageType>("LeadPolicyDamageTypes");
                }
                return _LeadPolicyDamageTypes;
            }
        }
        private ObjectSet<LeadPolicyDamageType> _LeadPolicyDamageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubLimitOfLiabilityMaster> SubLimitOfLiabilityMasters
        {
            get
            {
                if ((_SubLimitOfLiabilityMasters == null))
                {
                    _SubLimitOfLiabilityMasters = base.CreateObjectSet<SubLimitOfLiabilityMaster>("SubLimitOfLiabilityMasters");
                }
                return _SubLimitOfLiabilityMasters;
            }
        }
        private ObjectSet<SubLimitOfLiabilityMaster> _SubLimitOfLiabilityMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeadPolicy> LeadPolicies
        {
            get
            {
                if ((_LeadPolicies == null))
                {
                    _LeadPolicies = base.CreateObjectSet<LeadPolicy>("LeadPolicies");
                }
                return _LeadPolicies;
            }
        }
        private ObjectSet<LeadPolicy> _LeadPolicies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierLocation> CarrierLocations
        {
            get
            {
                if ((_CarrierLocations == null))
                {
                    _CarrierLocations = base.CreateObjectSet<CarrierLocation>("CarrierLocations");
                }
                return _CarrierLocations;
            }
        }
        private ObjectSet<CarrierLocation> _CarrierLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carrier> Carriers
        {
            get
            {
                if ((_Carriers == null))
                {
                    _Carriers = base.CreateObjectSet<Carrier>("Carriers");
                }
                return _Carriers;
            }
        }
        private ObjectSet<Carrier> _Carriers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierInvoiceProfileFeeSchedule> CarrierInvoiceProfileFeeSchedules
        {
            get
            {
                if ((_CarrierInvoiceProfileFeeSchedules == null))
                {
                    _CarrierInvoiceProfileFeeSchedules = base.CreateObjectSet<CarrierInvoiceProfileFeeSchedule>("CarrierInvoiceProfileFeeSchedules");
                }
                return _CarrierInvoiceProfileFeeSchedules;
            }
        }
        private ObjectSet<CarrierInvoiceProfileFeeSchedule> _CarrierInvoiceProfileFeeSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierInvoiceProfileFeeProvision> CarrierInvoiceProfileFeeProvisions
        {
            get
            {
                if ((_CarrierInvoiceProfileFeeProvisions == null))
                {
                    _CarrierInvoiceProfileFeeProvisions = base.CreateObjectSet<CarrierInvoiceProfileFeeProvision>("CarrierInvoiceProfileFeeProvisions");
                }
                return _CarrierInvoiceProfileFeeProvisions;
            }
        }
        private ObjectSet<CarrierInvoiceProfileFeeProvision> _CarrierInvoiceProfileFeeProvisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierInvoiceProfileFeeItemized> CarrierInvoiceProfileFeeItemizeds
        {
            get
            {
                if ((_CarrierInvoiceProfileFeeItemizeds == null))
                {
                    _CarrierInvoiceProfileFeeItemizeds = base.CreateObjectSet<CarrierInvoiceProfileFeeItemized>("CarrierInvoiceProfileFeeItemizeds");
                }
                return _CarrierInvoiceProfileFeeItemizeds;
            }
        }
        private ObjectSet<CarrierInvoiceProfileFeeItemized> _CarrierInvoiceProfileFeeItemizeds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierInvoiceType> CarrierInvoiceTypes
        {
            get
            {
                if ((_CarrierInvoiceTypes == null))
                {
                    _CarrierInvoiceTypes = base.CreateObjectSet<CarrierInvoiceType>("CarrierInvoiceTypes");
                }
                return _CarrierInvoiceTypes;
            }
        }
        private ObjectSet<CarrierInvoiceType> _CarrierInvoiceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecRoleInvoiceApprovalPermission> SecRoleInvoiceApprovalPermissions
        {
            get
            {
                if ((_SecRoleInvoiceApprovalPermissions == null))
                {
                    _SecRoleInvoiceApprovalPermissions = base.CreateObjectSet<SecRoleInvoiceApprovalPermission>("SecRoleInvoiceApprovalPermissions");
                }
                return _SecRoleInvoiceApprovalPermissions;
            }
        }
        private ObjectSet<SecRoleInvoiceApprovalPermission> _SecRoleInvoiceApprovalPermissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierComment> CarrierComments
        {
            get
            {
                if ((_CarrierComments == null))
                {
                    _CarrierComments = base.CreateObjectSet<CarrierComment>("CarrierComments");
                }
                return _CarrierComments;
            }
        }
        private ObjectSet<CarrierComment> _CarrierComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierDocument> CarrierDocuments
        {
            get
            {
                if ((_CarrierDocuments == null))
                {
                    _CarrierDocuments = base.CreateObjectSet<CarrierDocument>("CarrierDocuments");
                }
                return _CarrierDocuments;
            }
        }
        private ObjectSet<CarrierDocument> _CarrierDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierContact> CarrierContacts
        {
            get
            {
                if ((_CarrierContacts == null))
                {
                    _CarrierContacts = base.CreateObjectSet<CarrierContact>("CarrierContacts");
                }
                return _CarrierContacts;
            }
        }
        private ObjectSet<CarrierContact> _CarrierContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimComment> ClaimComments
        {
            get
            {
                if ((_ClaimComments == null))
                {
                    _ClaimComments = base.CreateObjectSet<ClaimComment>("ClaimComments");
                }
                return _ClaimComments;
            }
        }
        private ObjectSet<ClaimComment> _ClaimComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimContact> ClaimContacts
        {
            get
            {
                if ((_ClaimContacts == null))
                {
                    _ClaimContacts = base.CreateObjectSet<ClaimContact>("ClaimContacts");
                }
                return _ClaimContacts;
            }
        }
        private ObjectSet<ClaimContact> _ClaimContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimDocument> ClaimDocuments
        {
            get
            {
                if ((_ClaimDocuments == null))
                {
                    _ClaimDocuments = base.CreateObjectSet<ClaimDocument>("ClaimDocuments");
                }
                return _ClaimDocuments;
            }
        }
        private ObjectSet<ClaimDocument> _ClaimDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Limit> Limits
        {
            get
            {
                if ((_Limits == null))
                {
                    _Limits = base.CreateObjectSet<Limit>("Limits");
                }
                return _Limits;
            }
        }
        private ObjectSet<Limit> _Limits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyLimit> PolicyLimits
        {
            get
            {
                if ((_PolicyLimits == null))
                {
                    _PolicyLimits = base.CreateObjectSet<PolicyLimit>("PolicyLimits");
                }
                return _PolicyLimits;
            }
        }
        private ObjectSet<PolicyLimit> _PolicyLimits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimLimit> ClaimLimits
        {
            get
            {
                if ((_ClaimLimits == null))
                {
                    _ClaimLimits = base.CreateObjectSet<ClaimLimit>("ClaimLimits");
                }
                return _ClaimLimits;
            }
        }
        private ObjectSet<ClaimLimit> _ClaimLimits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_ClaimLimit> vw_ClaimLimit
        {
            get
            {
                if ((_vw_ClaimLimit == null))
                {
                    _vw_ClaimLimit = base.CreateObjectSet<vw_ClaimLimit>("vw_ClaimLimit");
                }
                return _vw_ClaimLimit;
            }
        }
        private ObjectSet<vw_ClaimLimit> _vw_ClaimLimit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicySubLimit> PolicySubLimits
        {
            get
            {
                if ((_PolicySubLimits == null))
                {
                    _PolicySubLimits = base.CreateObjectSet<PolicySubLimit>("PolicySubLimits");
                }
                return _PolicySubLimits;
            }
        }
        private ObjectSet<PolicySubLimit> _PolicySubLimits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimSubLimit> ClaimSubLimits
        {
            get
            {
                if ((_ClaimSubLimits == null))
                {
                    _ClaimSubLimits = base.CreateObjectSet<ClaimSubLimit>("ClaimSubLimits");
                }
                return _ClaimSubLimits;
            }
        }
        private ObjectSet<ClaimSubLimit> _ClaimSubLimits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Adjuster> vw_Adjusters
        {
            get
            {
                if ((_vw_Adjusters == null))
                {
                    _vw_Adjusters = base.CreateObjectSet<vw_Adjuster>("vw_Adjusters");
                }
                return _vw_Adjusters;
            }
        }
        private ObjectSet<vw_Adjuster> _vw_Adjusters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdjusterLicenseAppointmentType> AdjusterLicenseAppointmentTypes
        {
            get
            {
                if ((_AdjusterLicenseAppointmentTypes == null))
                {
                    _AdjusterLicenseAppointmentTypes = base.CreateObjectSet<AdjusterLicenseAppointmentType>("AdjusterLicenseAppointmentTypes");
                }
                return _AdjusterLicenseAppointmentTypes;
            }
        }
        private ObjectSet<AdjusterLicenseAppointmentType> _AdjusterLicenseAppointmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimImage> ClaimImages
        {
            get
            {
                if ((_ClaimImages == null))
                {
                    _ClaimImages = base.CreateObjectSet<ClaimImage>("ClaimImages");
                }
                return _ClaimImages;
            }
        }
        private ObjectSet<ClaimImage> _ClaimImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invoice> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Invoice>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Invoice> _Invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceDetail> InvoiceDetails
        {
            get
            {
                if ((_InvoiceDetails == null))
                {
                    _InvoiceDetails = base.CreateObjectSet<InvoiceDetail>("InvoiceDetails");
                }
                return _InvoiceDetails;
            }
        }
        private ObjectSet<InvoiceDetail> _InvoiceDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lead> Leads
        {
            get
            {
                if ((_Leads == null))
                {
                    _Leads = base.CreateObjectSet<Lead>("Leads");
                }
                return _Leads;
            }
        }
        private ObjectSet<Lead> _Leads;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CarrierInvoiceProfile> CarrierInvoiceProfiles
        {
            get
            {
                if ((_CarrierInvoiceProfiles == null))
                {
                    _CarrierInvoiceProfiles = base.CreateObjectSet<CarrierInvoiceProfile>("CarrierInvoiceProfiles");
                }
                return _CarrierInvoiceProfiles;
            }
        }
        private ObjectSet<CarrierInvoiceProfile> _CarrierInvoiceProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecUser> SecUsers
        {
            get
            {
                if ((_SecUsers == null))
                {
                    _SecUsers = base.CreateObjectSet<SecUser>("SecUsers");
                }
                return _SecUsers;
            }
        }
        private ObjectSet<SecUser> _SecUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyLienholder> PolicyLienholders
        {
            get
            {
                if ((_PolicyLienholders == null))
                {
                    _PolicyLienholders = base.CreateObjectSet<PolicyLienholder>("PolicyLienholders");
                }
                return _PolicyLienholders;
            }
        }
        private ObjectSet<PolicyLienholder> _PolicyLienholders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportField> ImportFields
        {
            get
            {
                if ((_ImportFields == null))
                {
                    _ImportFields = base.CreateObjectSet<ImportField>("ImportFields");
                }
                return _ImportFields;
            }
        }
        private ObjectSet<ImportField> _ImportFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Claim> Claims
        {
            get
            {
                if ((_Claims == null))
                {
                    _Claims = base.CreateObjectSet<Claim>("Claims");
                }
                return _Claims;
            }
        }
        private ObjectSet<Claim> _Claims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseType> ExpenseTypes
        {
            get
            {
                if ((_ExpenseTypes == null))
                {
                    _ExpenseTypes = base.CreateObjectSet<ExpenseType>("ExpenseTypes");
                }
                return _ExpenseTypes;
            }
        }
        private ObjectSet<ExpenseType> _ExpenseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimExpense> ClaimExpenses
        {
            get
            {
                if ((_ClaimExpenses == null))
                {
                    _ClaimExpenses = base.CreateObjectSet<ClaimExpense>("ClaimExpenses");
                }
                return _ClaimExpenses;
            }
        }
        private ObjectSet<ClaimExpense> _ClaimExpenses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceServiceType> InvoiceServiceTypes
        {
            get
            {
                if ((_InvoiceServiceTypes == null))
                {
                    _InvoiceServiceTypes = base.CreateObjectSet<InvoiceServiceType>("InvoiceServiceTypes");
                }
                return _InvoiceServiceTypes;
            }
        }
        private ObjectSet<InvoiceServiceType> _InvoiceServiceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Task> vw_Tasks
        {
            get
            {
                if ((_vw_Tasks == null))
                {
                    _vw_Tasks = base.CreateObjectSet<vw_Task>("vw_Tasks");
                }
                return _vw_Tasks;
            }
        }
        private ObjectSet<vw_Task> _vw_Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_FormField> vw_FormFields
        {
            get
            {
                if ((_vw_FormFields == null))
                {
                    _vw_FormFields = base.CreateObjectSet<vw_FormField>("vw_FormFields");
                }
                return _vw_FormFields;
            }
        }
        private ObjectSet<vw_FormField> _vw_FormFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataForm> DataForms
        {
            get
            {
                if ((_DataForms == null))
                {
                    _DataForms = base.CreateObjectSet<DataForm>("DataForms");
                }
                return _DataForms;
            }
        }
        private ObjectSet<DataForm> _DataForms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataFormField> DataFormFields
        {
            get
            {
                if ((_DataFormFields == null))
                {
                    _DataFormFields = base.CreateObjectSet<DataFormField>("DataFormFields");
                }
                return _DataFormFields;
            }
        }
        private ObjectSet<DataFormField> _DataFormFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryMaster> CountryMasters
        {
            get
            {
                if ((_CountryMasters == null))
                {
                    _CountryMasters = base.CreateObjectSet<CountryMaster>("CountryMasters");
                }
                return _CountryMasters;
            }
        }
        private ObjectSet<CountryMaster> _CountryMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Contact> vw_Contacts
        {
            get
            {
                if ((_vw_Contacts == null))
                {
                    _vw_Contacts = base.CreateObjectSet<vw_Contact>("vw_Contacts");
                }
                return _vw_Contacts;
            }
        }
        private ObjectSet<vw_Contact> _vw_Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClaimService> ClaimServices
        {
            get
            {
                if ((_ClaimServices == null))
                {
                    _ClaimServices = base.CreateObjectSet<ClaimService>("ClaimServices");
                }
                return _ClaimServices;
            }
        }
        private ObjectSet<ClaimService> _ClaimServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataFormFieldTemplate> DataFormFieldTemplates
        {
            get
            {
                if ((_DataFormFieldTemplates == null))
                {
                    _DataFormFieldTemplates = base.CreateObjectSet<DataFormFieldTemplate>("DataFormFieldTemplates");
                }
                return _DataFormFieldTemplates;
            }
        }
        private ObjectSet<DataFormFieldTemplate> _DataFormFieldTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reminder> Reminders
        {
            get
            {
                if ((_Reminders == null))
                {
                    _Reminders = base.CreateObjectSet<Reminder>("Reminders");
                }
                return _Reminders;
            }
        }
        private ObjectSet<Reminder> _Reminders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitee> Invitees
        {
            get
            {
                if ((_Invitees == null))
                {
                    _Invitees = base.CreateObjectSet<Invitee>("Invitees");
                }
                return _Invitees;
            }
        }
        private ObjectSet<Invitee> _Invitees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Action> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Action>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Action> _Actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleAction> RoleActions
        {
            get
            {
                if ((_RoleActions == null))
                {
                    _RoleActions = base.CreateObjectSet<RoleAction>("RoleActions");
                }
                return _RoleActions;
            }
        }
        private ObjectSet<RoleAction> _RoleActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Reminder> vw_Reminders
        {
            get
            {
                if ((_vw_Reminders == null))
                {
                    _vw_Reminders = base.CreateObjectSet<vw_Reminder>("vw_Reminders");
                }
                return _vw_Reminders;
            }
        }
        private ObjectSet<vw_Reminder> _vw_Reminders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Recurrence> Recurrences
        {
            get
            {
                if ((_Recurrences == null))
                {
                    _Recurrences = base.CreateObjectSet<Recurrence>("Recurrences");
                }
                return _Recurrences;
            }
        }
        private ObjectSet<Recurrence> _Recurrences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PolicyNote> PolicyNotes
        {
            get
            {
                if ((_PolicyNotes == null))
                {
                    _PolicyNotes = base.CreateObjectSet<PolicyNote>("PolicyNotes");
                }
                return _PolicyNotes;
            }
        }
        private ObjectSet<PolicyNote> _PolicyNotes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_InvoiceApprovalQueue> vw_InvoiceApprovalQueues
        {
            get
            {
                if ((_vw_InvoiceApprovalQueues == null))
                {
                    _vw_InvoiceApprovalQueues = base.CreateObjectSet<vw_InvoiceApprovalQueue>("vw_InvoiceApprovalQueues");
                }
                return _vw_InvoiceApprovalQueues;
            }
        }
        private ObjectSet<vw_InvoiceApprovalQueue> _vw_InvoiceApprovalQueues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_ClaimsClosedListing> vw_ClaimsClosedListings
        {
            get
            {
                if ((_vw_ClaimsClosedListings == null))
                {
                    _vw_ClaimsClosedListings = base.CreateObjectSet<vw_ClaimsClosedListing>("vw_ClaimsClosedListings");
                }
                return _vw_ClaimsClosedListings;
            }
        }
        private ObjectSet<vw_ClaimsClosedListing> _vw_ClaimsClosedListings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_OpenClaimsListing> vw_OpenClaimsListings
        {
            get
            {
                if ((_vw_OpenClaimsListings == null))
                {
                    _vw_OpenClaimsListings = base.CreateObjectSet<vw_OpenClaimsListing>("vw_OpenClaimsListings");
                }
                return _vw_OpenClaimsListings;
            }
        }
        private ObjectSet<vw_OpenClaimsListing> _vw_OpenClaimsListings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusinessRule> BusinessRules
        {
            get
            {
                if ((_BusinessRules == null))
                {
                    _BusinessRules = base.CreateObjectSet<BusinessRule>("BusinessRules");
                }
                return _BusinessRules;
            }
        }
        private ObjectSet<BusinessRule> _BusinessRules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rule> Rules
        {
            get
            {
                if ((_Rules == null))
                {
                    _Rules = base.CreateObjectSet<Rule>("Rules");
                }
                return _Rules;
            }
        }
        private ObjectSet<Rule> _Rules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProgressStatus> ProgressStatuses
        {
            get
            {
                if ((_ProgressStatuses == null))
                {
                    _ProgressStatuses = base.CreateObjectSet<ProgressStatus>("ProgressStatuses");
                }
                return _ProgressStatuses;
            }
        }
        private ObjectSet<ProgressStatus> _ProgressStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RuleException> RuleExceptions
        {
            get
            {
                if ((_RuleExceptions == null))
                {
                    _RuleExceptions = base.CreateObjectSet<RuleException>("RuleExceptions");
                }
                return _RuleExceptions;
            }
        }
        private ObjectSet<RuleException> _RuleExceptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RuleObject> RuleObjects
        {
            get
            {
                if ((_RuleObjects == null))
                {
                    _RuleObjects = base.CreateObjectSet<RuleObject>("RuleObjects");
                }
                return _RuleObjects;
            }
        }
        private ObjectSet<RuleObject> _RuleObjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentCategory> DocumentCategories
        {
            get
            {
                if ((_DocumentCategories == null))
                {
                    _DocumentCategories = base.CreateObjectSet<DocumentCategory>("DocumentCategories");
                }
                return _DocumentCategories;
            }
        }
        private ObjectSet<DocumentCategory> _DocumentCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_AdjusterPayout> vw_AdjusterPayout
        {
            get
            {
                if ((_vw_AdjusterPayout == null))
                {
                    _vw_AdjusterPayout = base.CreateObjectSet<vw_AdjusterPayout>("vw_AdjusterPayout");
                }
                return _vw_AdjusterPayout;
            }
        }
        private ObjectSet<vw_AdjusterPayout> _vw_AdjusterPayout;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_Lead_Search> vw_Lead_Searchs
        {
            get
            {
                if ((_vw_Lead_Searchs == null))
                {
                    _vw_Lead_Searchs = base.CreateObjectSet<vw_Lead_Search>("vw_Lead_Searchs");
                }
                return _vw_Lead_Searchs;
            }
        }
        private ObjectSet<vw_Lead_Search> _vw_Lead_Searchs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_AdjusterPayoutSubReport> vw_AdjusterPayoutSubReport
        {
            get
            {
                if ((_vw_AdjusterPayoutSubReport == null))
                {
                    _vw_AdjusterPayoutSubReport = base.CreateObjectSet<vw_AdjusterPayoutSubReport>("vw_AdjusterPayoutSubReport");
                }
                return _vw_AdjusterPayoutSubReport;
            }
        }
        private ObjectSet<vw_AdjusterPayoutSubReport> _vw_AdjusterPayoutSubReport;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CityMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCityMasters(CityMaster cityMaster)
        {
            base.AddObject("CityMasters", cityMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadReportGenerateLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadReportGenerateLogs(LeadReportGenerateLog leadReportGenerateLog)
        {
            base.AddObject("LeadReportGenerateLogs", leadReportGenerateLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProducerMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducerMasters(ProducerMaster producerMaster)
        {
            base.AddObject("ProducerMasters", producerMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecLoginLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecLoginLogs(SecLoginLog secLoginLog)
        {
            base.AddObject("SecLoginLogs", secLoginLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecUserLocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecUserLocks(SecUserLock secUserLock)
        {
            base.AddObject("SecUserLocks", secUserLock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecRoleModules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecRoleModules(SecRoleModule secRoleModule)
        {
            base.AddObject("SecRoleModules", secRoleModule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecModules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecModules(SecModule secModule)
        {
            base.AddObject("SecModules", secModule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationConfigurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationConfigurations(ApplicationConfiguration applicationConfiguration)
        {
            base.AddObject("ApplicationConfigurations", applicationConfiguration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadsImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadsImages(LeadsImage leadsImage)
        {
            base.AddObject("LeadsImages", leadsImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjusterMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjusterMasters(AdjusterMaster adjusterMaster)
        {
            base.AddObject("AdjusterMasters", adjusterMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InspectorMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInspectorMasters(InspectorMaster inspectorMaster)
        {
            base.AddObject("InspectorMasters", inspectorMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadSourceMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadSourceMasters(LeadSourceMaster leadSourceMaster)
        {
            base.AddObject("LeadSourceMasters", leadSourceMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OtherSourceMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOtherSourceMasters(OtherSourceMaster otherSourceMaster)
        {
            base.AddObject("OtherSourceMasters", otherSourceMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OwnerSameMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOwnerSameMasters(OwnerSameMaster ownerSameMaster)
        {
            base.AddObject("OwnerSameMasters", ownerSameMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportedToInsurerMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportedToInsurerMasters(ReportedToInsurerMaster reportedToInsurerMaster)
        {
            base.AddObject("ReportedToInsurerMasters", reportedToInsurerMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecondaryProducerMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecondaryProducerMasters(SecondaryProducerMaster secondaryProducerMaster)
        {
            base.AddObject("SecondaryProducerMasters", secondaryProducerMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SiteInspectionCompleteMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSiteInspectionCompleteMasters(SiteInspectionCompleteMaster siteInspectionCompleteMaster)
        {
            base.AddObject("SiteInspectionCompleteMasters", siteInspectionCompleteMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StatusMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatusMasters(StatusMaster statusMaster)
        {
            base.AddObject("StatusMasters", statusMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubStatusMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubStatusMasters(SubStatusMaster subStatusMaster)
        {
            base.AddObject("SubStatusMasters", subStatusMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeOfDamageMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeOfDamageMasters(TypeOfDamageMaster typeOfDamageMaster)
        {
            base.AddObject("TypeOfDamageMasters", typeOfDamageMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeOfPropertyMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeOfPropertyMasters(TypeOfPropertyMaster typeOfPropertyMaster)
        {
            base.AddObject("TypeOfPropertyMasters", typeOfPropertyMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateMasters(StateMaster stateMaster)
        {
            base.AddObject("StateMasters", stateMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadComments(LeadComment leadComment)
        {
            base.AddObject("LeadComments", leadComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZipCodeMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZipCodeMasters(ZipCodeMaster zipCodeMaster)
        {
            base.AddObject("ZipCodeMasters", zipCodeMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadContactTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadContactTypes(LeadContactType leadContactType)
        {
            base.AddObject("LeadContactTypes", leadContactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceTypes(InsuranceType insuranceType)
        {
            base.AddObject("InsuranceTypes", insuranceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskStatuses(TaskStatus taskStatus)
        {
            base.AddObject("TaskStatuses", taskStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadDocumentLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadDocumentLists(LeadDocumentList leadDocumentList)
        {
            base.AddObject("LeadDocumentLists", leadDocumentList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadInvoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadInvoices(LeadInvoice leadInvoice)
        {
            base.AddObject("LeadInvoices", leadInvoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadInvoiceDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadInvoiceDetails(LeadInvoiceDetail leadInvoiceDetail)
        {
            base.AddObject("LeadInvoiceDetails", leadInvoiceDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadsDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadsDocuments(LeadsDocument leadsDocument)
        {
            base.AddObject("LeadsDocuments", leadsDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadContacts(LeadContact leadContact)
        {
            base.AddObject("LeadContacts", leadContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorMasters(ContractorMaster contractorMaster)
        {
            base.AddObject("ContractorMasters", contractorMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppraiserMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppraiserMasters(AppraiserMaster appraiserMaster)
        {
            base.AddObject("AppraiserMasters", appraiserMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UmpireMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUmpireMasters(UmpireMaster umpireMaster)
        {
            base.AddObject("UmpireMasters", umpireMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReminderMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReminderMasters(ReminderMaster reminderMaster)
        {
            base.AddObject("ReminderMasters", reminderMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientLetterTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientLetterTemplates(ClientLetterTemplate clientLetterTemplate)
        {
            base.AddObject("ClientLetterTemplates", clientLetterTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldColumns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldColumns(FieldColumn fieldColumn)
        {
            base.AddObject("FieldColumns", fieldColumn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientFieldColumns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientFieldColumns(ClientFieldColumn clientFieldColumn)
        {
            base.AddObject("ClientFieldColumns", clientFieldColumn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_FieldColumn EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_FieldColumn(vw_FieldColumn vw_FieldColumn)
        {
            base.AddObject("vw_FieldColumn", vw_FieldColumn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_closeLeadClaims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_closeLeadClaims(vw_closeLeadClaim vw_closeLeadClaim)
        {
            base.AddObject("vw_closeLeadClaims", vw_closeLeadClaim);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_openLeadClaims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_openLeadClaims(vw_openLeadClaim vw_openLeadClaim)
        {
            base.AddObject("vw_openLeadClaims", vw_openLeadClaim);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentListMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentListMasters(DocumentListMaster documentListMaster)
        {
            base.AddObject("DocumentListMasters", documentListMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecRoles(SecRole secRole)
        {
            base.AddObject("SecRoles", secRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceServiceUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceServiceUnits(InvoiceServiceUnit invoiceServiceUnit)
        {
            base.AddObject("InvoiceServiceUnits", invoiceServiceUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadPolicyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadPolicyTypes(LeadPolicyType leadPolicyType)
        {
            base.AddObject("LeadPolicyTypes", leadPolicyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskPriorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskPriorities(TaskPriority taskPriority)
        {
            base.AddObject("TaskPriorities", taskPriority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskReminderMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskReminderMasters(TaskReminderMaster taskReminderMaster)
        {
            base.AddObject("TaskReminderMasters", taskReminderMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ledgers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLedgers(Ledger ledger)
        {
            base.AddObject("Ledgers", ledger);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Mortgagees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMortgagees(Mortgagee mortgagee)
        {
            base.AddObject("Mortgagees", mortgagee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadPolicyLienholders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadPolicyLienholders(LeadPolicyLienholder leadPolicyLienholder)
        {
            base.AddObject("LeadPolicyLienholders", leadPolicyLienholder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjusterHandleClaimTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjusterHandleClaimTypes(AdjusterHandleClaimType adjusterHandleClaimType)
        {
            base.AddObject("AdjusterHandleClaimTypes", adjusterHandleClaimType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjusterServiceAreas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjusterServiceAreas(AdjusterServiceArea adjusterServiceArea)
        {
            base.AddObject("AdjusterServiceAreas", adjusterServiceArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjusterReferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjusterReferences(AdjusterReference adjusterReference)
        {
            base.AddObject("AdjusterReferences", adjusterReference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjusterNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjusterNotes(AdjusterNote adjusterNote)
        {
            base.AddObject("AdjusterNotes", adjusterNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadPolicyDamageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadPolicyDamageTypes(LeadPolicyDamageType leadPolicyDamageType)
        {
            base.AddObject("LeadPolicyDamageTypes", leadPolicyDamageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubLimitOfLiabilityMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubLimitOfLiabilityMasters(SubLimitOfLiabilityMaster subLimitOfLiabilityMaster)
        {
            base.AddObject("SubLimitOfLiabilityMasters", subLimitOfLiabilityMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeadPolicies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeadPolicies(LeadPolicy leadPolicy)
        {
            base.AddObject("LeadPolicies", leadPolicy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierLocations(CarrierLocation carrierLocation)
        {
            base.AddObject("CarrierLocations", carrierLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Carriers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarriers(Carrier carrier)
        {
            base.AddObject("Carriers", carrier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierInvoiceProfileFeeSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierInvoiceProfileFeeSchedules(CarrierInvoiceProfileFeeSchedule carrierInvoiceProfileFeeSchedule)
        {
            base.AddObject("CarrierInvoiceProfileFeeSchedules", carrierInvoiceProfileFeeSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierInvoiceProfileFeeProvisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierInvoiceProfileFeeProvisions(CarrierInvoiceProfileFeeProvision carrierInvoiceProfileFeeProvision)
        {
            base.AddObject("CarrierInvoiceProfileFeeProvisions", carrierInvoiceProfileFeeProvision);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierInvoiceProfileFeeItemizeds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierInvoiceProfileFeeItemizeds(CarrierInvoiceProfileFeeItemized carrierInvoiceProfileFeeItemized)
        {
            base.AddObject("CarrierInvoiceProfileFeeItemizeds", carrierInvoiceProfileFeeItemized);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierInvoiceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierInvoiceTypes(CarrierInvoiceType carrierInvoiceType)
        {
            base.AddObject("CarrierInvoiceTypes", carrierInvoiceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecRoleInvoiceApprovalPermissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecRoleInvoiceApprovalPermissions(SecRoleInvoiceApprovalPermission secRoleInvoiceApprovalPermission)
        {
            base.AddObject("SecRoleInvoiceApprovalPermissions", secRoleInvoiceApprovalPermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierComments(CarrierComment carrierComment)
        {
            base.AddObject("CarrierComments", carrierComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierDocuments(CarrierDocument carrierDocument)
        {
            base.AddObject("CarrierDocuments", carrierDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierContacts(CarrierContact carrierContact)
        {
            base.AddObject("CarrierContacts", carrierContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimComments(ClaimComment claimComment)
        {
            base.AddObject("ClaimComments", claimComment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimContacts(ClaimContact claimContact)
        {
            base.AddObject("ClaimContacts", claimContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimDocuments(ClaimDocument claimDocument)
        {
            base.AddObject("ClaimDocuments", claimDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Limits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLimits(Limit limit)
        {
            base.AddObject("Limits", limit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyLimits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyLimits(PolicyLimit policyLimit)
        {
            base.AddObject("PolicyLimits", policyLimit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimLimits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimLimits(ClaimLimit claimLimit)
        {
            base.AddObject("ClaimLimits", claimLimit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_ClaimLimit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_ClaimLimit(vw_ClaimLimit vw_ClaimLimit)
        {
            base.AddObject("vw_ClaimLimit", vw_ClaimLimit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicySubLimits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicySubLimits(PolicySubLimit policySubLimit)
        {
            base.AddObject("PolicySubLimits", policySubLimit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimSubLimits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimSubLimits(ClaimSubLimit claimSubLimit)
        {
            base.AddObject("ClaimSubLimits", claimSubLimit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Adjusters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Adjusters(vw_Adjuster vw_Adjuster)
        {
            base.AddObject("vw_Adjusters", vw_Adjuster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdjusterLicenseAppointmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdjusterLicenseAppointmentTypes(AdjusterLicenseAppointmentType adjusterLicenseAppointmentType)
        {
            base.AddObject("AdjusterLicenseAppointmentTypes", adjusterLicenseAppointmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimImages(ClaimImage claimImage)
        {
            base.AddObject("ClaimImages", claimImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoices(Invoice invoice)
        {
            base.AddObject("Invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceDetails(InvoiceDetail invoiceDetail)
        {
            base.AddObject("InvoiceDetails", invoiceDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leads EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeads(Lead lead)
        {
            base.AddObject("Leads", lead);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarrierInvoiceProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarrierInvoiceProfiles(CarrierInvoiceProfile carrierInvoiceProfile)
        {
            base.AddObject("CarrierInvoiceProfiles", carrierInvoiceProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecUsers(SecUser secUser)
        {
            base.AddObject("SecUsers", secUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyLienholders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyLienholders(PolicyLienholder policyLienholder)
        {
            base.AddObject("PolicyLienholders", policyLienholder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportFields(ImportField importField)
        {
            base.AddObject("ImportFields", importField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Claims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaims(Claim claim)
        {
            base.AddObject("Claims", claim);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseTypes(ExpenseType expenseType)
        {
            base.AddObject("ExpenseTypes", expenseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimExpenses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimExpenses(ClaimExpense claimExpense)
        {
            base.AddObject("ClaimExpenses", claimExpense);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceServiceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceServiceTypes(InvoiceServiceType invoiceServiceType)
        {
            base.AddObject("InvoiceServiceTypes", invoiceServiceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Tasks(vw_Task vw_Task)
        {
            base.AddObject("vw_Tasks", vw_Task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_FormFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_FormFields(vw_FormField vw_FormField)
        {
            base.AddObject("vw_FormFields", vw_FormField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataForms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataForms(DataForm dataForm)
        {
            base.AddObject("DataForms", dataForm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataFormFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataFormFields(DataFormField dataFormField)
        {
            base.AddObject("DataFormFields", dataFormField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryMasters(CountryMaster countryMaster)
        {
            base.AddObject("CountryMasters", countryMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Contacts(vw_Contact vw_Contact)
        {
            base.AddObject("vw_Contacts", vw_Contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClaimServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClaimServices(ClaimService claimService)
        {
            base.AddObject("ClaimServices", claimService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataFormFieldTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataFormFieldTemplates(DataFormFieldTemplate dataFormFieldTemplate)
        {
            base.AddObject("DataFormFieldTemplates", dataFormFieldTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reminders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReminders(Reminder reminder)
        {
            base.AddObject("Reminders", reminder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitees(Invitee invitee)
        {
            base.AddObject("Invitees", invitee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActions(Action action)
        {
            base.AddObject("Actions", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleActions(RoleAction roleAction)
        {
            base.AddObject("RoleActions", roleAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Reminders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Reminders(vw_Reminder vw_Reminder)
        {
            base.AddObject("vw_Reminders", vw_Reminder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Recurrences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecurrences(Recurrence recurrence)
        {
            base.AddObject("Recurrences", recurrence);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PolicyNotes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPolicyNotes(PolicyNote policyNote)
        {
            base.AddObject("PolicyNotes", policyNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_InvoiceApprovalQueues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_InvoiceApprovalQueues(vw_InvoiceApprovalQueue vw_InvoiceApprovalQueue)
        {
            base.AddObject("vw_InvoiceApprovalQueues", vw_InvoiceApprovalQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_ClaimsClosedListings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_ClaimsClosedListings(vw_ClaimsClosedListing vw_ClaimsClosedListing)
        {
            base.AddObject("vw_ClaimsClosedListings", vw_ClaimsClosedListing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_OpenClaimsListings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_OpenClaimsListings(vw_OpenClaimsListing vw_OpenClaimsListing)
        {
            base.AddObject("vw_OpenClaimsListings", vw_OpenClaimsListing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusinessRules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusinessRules(BusinessRule businessRule)
        {
            base.AddObject("BusinessRules", businessRule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Rules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRules(Rule rule)
        {
            base.AddObject("Rules", rule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProgressStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProgressStatuses(ProgressStatus progressStatus)
        {
            base.AddObject("ProgressStatuses", progressStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RuleExceptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuleExceptions(RuleException ruleException)
        {
            base.AddObject("RuleExceptions", ruleException);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RuleObjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRuleObjects(RuleObject ruleObject)
        {
            base.AddObject("RuleObjects", ruleObject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentCategories(DocumentCategory documentCategory)
        {
            base.AddObject("DocumentCategories", documentCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_AdjusterPayout EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_AdjusterPayout(vw_AdjusterPayout vw_AdjusterPayout)
        {
            base.AddObject("vw_AdjusterPayout", vw_AdjusterPayout);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_Lead_Searchs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_Lead_Searchs(vw_Lead_Search vw_Lead_Search)
        {
            base.AddObject("vw_Lead_Searchs", vw_Lead_Search);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_AdjusterPayoutSubReport EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_AdjusterPayoutSubReport(vw_AdjusterPayoutSubReport vw_AdjusterPayoutSubReport)
        {
            base.AddObject("vw_AdjusterPayoutSubReport", vw_AdjusterPayoutSubReport);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Action object.
        /// </summary>
        /// <param name="actionID">Initial value of the ActionID property.</param>
        /// <param name="actionName">Initial value of the ActionName property.</param>
        public static Action CreateAction(global::System.Int32 actionID, global::System.String actionName)
        {
            Action action = new Action();
            action.ActionID = actionID;
            action.ActionName = actionName;
            return action;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionID
        {
            get
            {
                return _ActionID;
            }
            set
            {
                if (_ActionID != value)
                {
                    OnActionIDChanging(value);
                    ReportPropertyChanging("ActionID");
                    _ActionID = StructuralObject.SetValidValue(value, "ActionID");
                    ReportPropertyChanged("ActionID");
                    OnActionIDChanged();
                }
            }
        }
        private global::System.Int32 _ActionID;
        partial void OnActionIDChanging(global::System.Int32 value);
        partial void OnActionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionName
        {
            get
            {
                return _ActionName;
            }
            set
            {
                OnActionNameChanging(value);
                ReportPropertyChanging("ActionName");
                _ActionName = StructuralObject.SetValidValue(value, false, "ActionName");
                ReportPropertyChanged("ActionName");
                OnActionNameChanged();
            }
        }
        private global::System.String _ActionName;
        partial void OnActionNameChanging(global::System.String value);
        partial void OnActionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="AdjusterHandleClaimType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjusterHandleClaimType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjusterHandleClaimType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static AdjusterHandleClaimType CreateAdjusterHandleClaimType(global::System.Int32 id)
        {
            AdjusterHandleClaimType adjusterHandleClaimType = new AdjusterHandleClaimType();
            adjusterHandleClaimType.ID = id;
            return adjusterHandleClaimType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyTypeID
        {
            get
            {
                return _PolicyTypeID;
            }
            set
            {
                OnPolicyTypeIDChanging(value);
                ReportPropertyChanging("PolicyTypeID");
                _PolicyTypeID = StructuralObject.SetValidValue(value, "PolicyTypeID");
                ReportPropertyChanged("PolicyTypeID");
                OnPolicyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyTypeID;
        partial void OnPolicyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterHandleClaimType_LeadPolicyType", "LeadPolicyType")]
        public LeadPolicyType LeadPolicyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicyType>("CRMModel.FK_AdjusterHandleClaimType_LeadPolicyType", "LeadPolicyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicyType>("CRMModel.FK_AdjusterHandleClaimType_LeadPolicyType", "LeadPolicyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicyType> LeadPolicyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicyType>("CRMModel.FK_AdjusterHandleClaimType_LeadPolicyType", "LeadPolicyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicyType>("CRMModel.FK_AdjusterHandleClaimType_LeadPolicyType", "LeadPolicyType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="AdjusterLicenseAppointmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjusterLicenseAppointmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjusterLicenseAppointmentType object.
        /// </summary>
        /// <param name="licenseAppointmentTypeID">Initial value of the LicenseAppointmentTypeID property.</param>
        /// <param name="licenseAppointmentType">Initial value of the LicenseAppointmentType property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static AdjusterLicenseAppointmentType CreateAdjusterLicenseAppointmentType(global::System.Int32 licenseAppointmentTypeID, global::System.String licenseAppointmentType, global::System.Boolean isActive)
        {
            AdjusterLicenseAppointmentType adjusterLicenseAppointmentType = new AdjusterLicenseAppointmentType();
            adjusterLicenseAppointmentType.LicenseAppointmentTypeID = licenseAppointmentTypeID;
            adjusterLicenseAppointmentType.LicenseAppointmentType = licenseAppointmentType;
            adjusterLicenseAppointmentType.IsActive = isActive;
            return adjusterLicenseAppointmentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LicenseAppointmentTypeID
        {
            get
            {
                return _LicenseAppointmentTypeID;
            }
            set
            {
                if (_LicenseAppointmentTypeID != value)
                {
                    OnLicenseAppointmentTypeIDChanging(value);
                    ReportPropertyChanging("LicenseAppointmentTypeID");
                    _LicenseAppointmentTypeID = StructuralObject.SetValidValue(value, "LicenseAppointmentTypeID");
                    ReportPropertyChanged("LicenseAppointmentTypeID");
                    OnLicenseAppointmentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _LicenseAppointmentTypeID;
        partial void OnLicenseAppointmentTypeIDChanging(global::System.Int32 value);
        partial void OnLicenseAppointmentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseAppointmentType
        {
            get
            {
                return _LicenseAppointmentType;
            }
            set
            {
                OnLicenseAppointmentTypeChanging(value);
                ReportPropertyChanging("LicenseAppointmentType");
                _LicenseAppointmentType = StructuralObject.SetValidValue(value, false, "LicenseAppointmentType");
                ReportPropertyChanged("LicenseAppointmentType");
                OnLicenseAppointmentTypeChanged();
            }
        }
        private global::System.String _LicenseAppointmentType;
        partial void OnLicenseAppointmentTypeChanging(global::System.String value);
        partial void OnLicenseAppointmentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterServiceArea")]
        public EntityCollection<AdjusterServiceArea> AdjusterServiceAreas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterServiceArea>("CRMModel.FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterServiceArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterServiceArea>("CRMModel.FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterServiceArea", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="AdjusterMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjusterMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjusterMaster object.
        /// </summary>
        /// <param name="adjusterId">Initial value of the AdjusterId property.</param>
        public static AdjusterMaster CreateAdjusterMaster(global::System.Int32 adjusterId)
        {
            AdjusterMaster adjusterMaster = new AdjusterMaster();
            adjusterMaster.AdjusterId = adjusterId;
            return adjusterMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjusterId
        {
            get
            {
                return _AdjusterId;
            }
            set
            {
                if (_AdjusterId != value)
                {
                    OnAdjusterIdChanging(value);
                    ReportPropertyChanging("AdjusterId");
                    _AdjusterId = StructuralObject.SetValidValue(value, "AdjusterId");
                    ReportPropertyChanged("AdjusterId");
                    OnAdjusterIdChanged();
                }
            }
        }
        private global::System.Int32 _AdjusterId;
        partial void OnAdjusterIdChanging(global::System.Int32 value);
        partial void OnAdjusterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterName
        {
            get
            {
                return _AdjusterName;
            }
            set
            {
                OnAdjusterNameChanging(value);
                ReportPropertyChanging("AdjusterName");
                _AdjusterName = StructuralObject.SetValidValue(value, true, "AdjusterName");
                ReportPropertyChanged("AdjusterName");
                OnAdjusterNameChanged();
            }
        }
        private global::System.String _AdjusterName;
        partial void OnAdjusterNameChanging(global::System.String value);
        partial void OnAdjusterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FederalTaxID
        {
            get
            {
                return _FederalTaxID;
            }
            set
            {
                OnFederalTaxIDChanging(value);
                ReportPropertyChanging("FederalTaxID");
                _FederalTaxID = StructuralObject.SetValidValue(value, true, "FederalTaxID");
                ReportPropertyChanged("FederalTaxID");
                OnFederalTaxIDChanged();
            }
        }
        private global::System.String _FederalTaxID;
        partial void OnFederalTaxIDChanging(global::System.String value);
        partial void OnFederalTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true, "Address1");
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FeePerContract
        {
            get
            {
                return _FeePerContract;
            }
            set
            {
                OnFeePerContractChanging(value);
                ReportPropertyChanging("FeePerContract");
                _FeePerContract = StructuralObject.SetValidValue(value, "FeePerContract");
                ReportPropertyChanged("FeePerContract");
                OnFeePerContractChanged();
            }
        }
        private Nullable<global::System.Decimal> _FeePerContract;
        partial void OnFeePerContractChanging(Nullable<global::System.Decimal> value);
        partial void OnFeePerContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true, "email");
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isEmailNotification
        {
            get
            {
                return _isEmailNotification;
            }
            set
            {
                OnisEmailNotificationChanging(value);
                ReportPropertyChanging("isEmailNotification");
                _isEmailNotification = StructuralObject.SetValidValue(value, "isEmailNotification");
                ReportPropertyChanged("isEmailNotification");
                OnisEmailNotificationChanged();
            }
        }
        private Nullable<global::System.Boolean> _isEmailNotification;
        partial void OnisEmailNotificationChanging(Nullable<global::System.Boolean> value);
        partial void OnisEmailNotificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> userID
        {
            get
            {
                return _userID;
            }
            set
            {
                OnuserIDChanging(value);
                ReportPropertyChanging("userID");
                _userID = StructuralObject.SetValidValue(value, "userID");
                ReportPropertyChanged("userID");
                OnuserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _userID;
        partial void OnuserIDChanging(Nullable<global::System.Int32> value);
        partial void OnuserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = StructuralObject.SetValidValue(value, true, "FaxNumber");
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private global::System.String _FaxNumber;
        partial void OnFaxNumberChanging(global::System.String value);
        partial void OnFaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isW9
        {
            get
            {
                return _isW9;
            }
            set
            {
                OnisW9Changing(value);
                ReportPropertyChanging("isW9");
                _isW9 = StructuralObject.SetValidValue(value, "isW9");
                ReportPropertyChanged("isW9");
                OnisW9Changed();
            }
        }
        private Nullable<global::System.Boolean> _isW9;
        partial void OnisW9Changing(Nullable<global::System.Boolean> value);
        partial void OnisW9Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GeographicalSeriveArea
        {
            get
            {
                return _GeographicalSeriveArea;
            }
            set
            {
                OnGeographicalSeriveAreaChanging(value);
                ReportPropertyChanging("GeographicalSeriveArea");
                _GeographicalSeriveArea = StructuralObject.SetValidValue(value, true, "GeographicalSeriveArea");
                ReportPropertyChanged("GeographicalSeriveArea");
                OnGeographicalSeriveAreaChanged();
            }
        }
        private global::System.String _GeographicalSeriveArea;
        partial void OnGeographicalSeriveAreaChanging(global::System.String value);
        partial void OnGeographicalSeriveAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearsExperiece
        {
            get
            {
                return _YearsExperiece;
            }
            set
            {
                OnYearsExperieceChanging(value);
                ReportPropertyChanging("YearsExperiece");
                _YearsExperiece = StructuralObject.SetValidValue(value, "YearsExperiece");
                ReportPropertyChanged("YearsExperiece");
                OnYearsExperieceChanged();
            }
        }
        private Nullable<global::System.Int32> _YearsExperiece;
        partial void OnYearsExperieceChanging(Nullable<global::System.Int32> value);
        partial void OnYearsExperieceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Certifications
        {
            get
            {
                return _Certifications;
            }
            set
            {
                OnCertificationsChanging(value);
                ReportPropertyChanging("Certifications");
                _Certifications = StructuralObject.SetValidValue(value, true, "Certifications");
                ReportPropertyChanged("Certifications");
                OnCertificationsChanged();
            }
        }
        private global::System.String _Certifications;
        partial void OnCertificationsChanging(global::System.String value);
        partial void OnCertificationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeploymentAddress
        {
            get
            {
                return _DeploymentAddress;
            }
            set
            {
                OnDeploymentAddressChanging(value);
                ReportPropertyChanging("DeploymentAddress");
                _DeploymentAddress = StructuralObject.SetValidValue(value, true, "DeploymentAddress");
                ReportPropertyChanged("DeploymentAddress");
                OnDeploymentAddressChanged();
            }
        }
        private global::System.String _DeploymentAddress;
        partial void OnDeploymentAddressChanging(global::System.String value);
        partial void OnDeploymentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeploymentStateID
        {
            get
            {
                return _DeploymentStateID;
            }
            set
            {
                OnDeploymentStateIDChanging(value);
                ReportPropertyChanging("DeploymentStateID");
                _DeploymentStateID = StructuralObject.SetValidValue(value, "DeploymentStateID");
                ReportPropertyChanged("DeploymentStateID");
                OnDeploymentStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DeploymentStateID;
        partial void OnDeploymentStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnDeploymentStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeploymentCity
        {
            get
            {
                return _DeploymentCity;
            }
            set
            {
                OnDeploymentCityChanging(value);
                ReportPropertyChanging("DeploymentCity");
                _DeploymentCity = StructuralObject.SetValidValue(value, true, "DeploymentCity");
                ReportPropertyChanged("DeploymentCity");
                OnDeploymentCityChanged();
            }
        }
        private global::System.String _DeploymentCity;
        partial void OnDeploymentCityChanging(global::System.String value);
        partial void OnDeploymentCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeploymentZipCode
        {
            get
            {
                return _DeploymentZipCode;
            }
            set
            {
                OnDeploymentZipCodeChanging(value);
                ReportPropertyChanging("DeploymentZipCode");
                _DeploymentZipCode = StructuralObject.SetValidValue(value, true, "DeploymentZipCode");
                ReportPropertyChanged("DeploymentZipCode");
                OnDeploymentZipCodeChanged();
            }
        }
        private global::System.String _DeploymentZipCode;
        partial void OnDeploymentZipCodeChanging(global::System.String value);
        partial void OnDeploymentZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> UseDeploymentAddress
        {
            get
            {
                return _UseDeploymentAddress;
            }
            set
            {
                OnUseDeploymentAddressChanging(value);
                ReportPropertyChanging("UseDeploymentAddress");
                _UseDeploymentAddress = StructuralObject.SetValidValue(value, "UseDeploymentAddress");
                ReportPropertyChanged("UseDeploymentAddress");
                OnUseDeploymentAddressChanged();
            }
        }
        private Nullable<global::System.Boolean> _UseDeploymentAddress;
        partial void OnUseDeploymentAddressChanging(Nullable<global::System.Boolean> value);
        partial void OnUseDeploymentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoFileName
        {
            get
            {
                return _PhotoFileName;
            }
            set
            {
                OnPhotoFileNameChanging(value);
                ReportPropertyChanging("PhotoFileName");
                _PhotoFileName = StructuralObject.SetValidValue(value, true, "PhotoFileName");
                ReportPropertyChanged("PhotoFileName");
                OnPhotoFileNameChanged();
            }
        }
        private global::System.String _PhotoFileName;
        partial void OnPhotoFileNameChanging(global::System.String value);
        partial void OnPhotoFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxClaimNumber
        {
            get
            {
                return _MaxClaimNumber;
            }
            set
            {
                OnMaxClaimNumberChanging(value);
                ReportPropertyChanging("MaxClaimNumber");
                _MaxClaimNumber = StructuralObject.SetValidValue(value, "MaxClaimNumber");
                ReportPropertyChanged("MaxClaimNumber");
                OnMaxClaimNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxClaimNumber;
        partial void OnMaxClaimNumberChanging(Nullable<global::System.Int32> value);
        partial void OnMaxClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZipCodeID
        {
            get
            {
                return _ZipCodeID;
            }
            set
            {
                OnZipCodeIDChanging(value);
                ReportPropertyChanging("ZipCodeID");
                _ZipCodeID = StructuralObject.SetValidValue(value, "ZipCodeID");
                ReportPropertyChanged("ZipCodeID");
                OnZipCodeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ZipCodeID;
        partial void OnZipCodeIDChanging(Nullable<global::System.Int32> value);
        partial void OnZipCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, true, "Suffix");
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleInitial
        {
            get
            {
                return _MiddleInitial;
            }
            set
            {
                OnMiddleInitialChanging(value);
                ReportPropertyChanging("MiddleInitial");
                _MiddleInitial = StructuralObject.SetValidValue(value, true, "MiddleInitial");
                ReportPropertyChanged("MiddleInitial");
                OnMiddleInitialChanged();
            }
        }
        private global::System.String _MiddleInitial;
        partial void OnMiddleInitialChanging(global::System.String value);
        partial void OnMiddleInitialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isNotifyUserUploadDocument
        {
            get
            {
                return _isNotifyUserUploadDocument;
            }
            set
            {
                OnisNotifyUserUploadDocumentChanging(value);
                ReportPropertyChanging("isNotifyUserUploadDocument");
                _isNotifyUserUploadDocument = StructuralObject.SetValidValue(value, "isNotifyUserUploadDocument");
                ReportPropertyChanged("isNotifyUserUploadDocument");
                OnisNotifyUserUploadDocumentChanged();
            }
        }
        private Nullable<global::System.Boolean> _isNotifyUserUploadDocument;
        partial void OnisNotifyUserUploadDocumentChanging(Nullable<global::System.Boolean> value);
        partial void OnisNotifyUserUploadDocumentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HourlyRate
        {
            get
            {
                return _HourlyRate;
            }
            set
            {
                OnHourlyRateChanging(value);
                ReportPropertyChanging("HourlyRate");
                _HourlyRate = StructuralObject.SetValidValue(value, "HourlyRate");
                ReportPropertyChanged("HourlyRate");
                OnHourlyRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _HourlyRate;
        partial void OnHourlyRateChanging(Nullable<global::System.Decimal> value);
        partial void OnHourlyRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionRate
        {
            get
            {
                return _CommissionRate;
            }
            set
            {
                OnCommissionRateChanging(value);
                ReportPropertyChanging("CommissionRate");
                _CommissionRate = StructuralObject.SetValidValue(value, "CommissionRate");
                ReportPropertyChanged("CommissionRate");
                OnCommissionRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionRate;
        partial void OnCommissionRateChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XactNetAddress
        {
            get
            {
                return _XactNetAddress;
            }
            set
            {
                OnXactNetAddressChanging(value);
                ReportPropertyChanging("XactNetAddress");
                _XactNetAddress = StructuralObject.SetValidValue(value, true, "XactNetAddress");
                ReportPropertyChanged("XactNetAddress");
                OnXactNetAddressChanged();
            }
        }
        private global::System.String _XactNetAddress;
        partial void OnXactNetAddressChanging(global::System.String value);
        partial void OnXactNetAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupervisorID
        {
            get
            {
                return _SupervisorID;
            }
            set
            {
                OnSupervisorIDChanging(value);
                ReportPropertyChanging("SupervisorID");
                _SupervisorID = StructuralObject.SetValidValue(value, "SupervisorID");
                ReportPropertyChanged("SupervisorID");
                OnSupervisorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupervisorID;
        partial void OnSupervisorIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupervisorIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_AdjusterMaster_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_AdjusterMaster_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_AdjusterMaster_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_AdjusterMaster_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.fk_AdjusterMaster_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Ledger_AdjusterMaster", "Ledger")]
        public EntityCollection<Ledger> Ledgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ledger>("CRMModel.FK_Ledger_AdjusterMaster", "Ledger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ledger>("CRMModel.FK_Ledger_AdjusterMaster", "Ledger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterHandleClaimType")]
        public EntityCollection<AdjusterHandleClaimType> AdjusterHandleClaimTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterHandleClaimType>("CRMModel.FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterHandleClaimType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterHandleClaimType>("CRMModel.FK_AdjusterHandleClaimType_AdjusterMaster", "AdjusterHandleClaimType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterServiceArea_AdjusterMaster", "AdjusterServiceArea")]
        public EntityCollection<AdjusterServiceArea> AdjusterServiceAreas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterServiceArea>("CRMModel.FK_AdjusterServiceArea_AdjusterMaster", "AdjusterServiceArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterServiceArea>("CRMModel.FK_AdjusterServiceArea_AdjusterMaster", "AdjusterServiceArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterReference_AdjusterMaster", "AdjusterReference")]
        public EntityCollection<AdjusterReference> AdjusterReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterReference>("CRMModel.FK_AdjusterReference_AdjusterMaster", "AdjusterReference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterReference>("CRMModel.FK_AdjusterReference_AdjusterMaster", "AdjusterReference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterNote_AdjusterMaster", "AdjusterNote")]
        public EntityCollection<AdjusterNote> AdjusterNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterNote>("CRMModel.FK_AdjusterNote_AdjusterMaster", "AdjusterNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterNote>("CRMModel.FK_AdjusterNote_AdjusterMaster", "AdjusterNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_AdjusterMaster_StateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_StateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_StateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_StateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_StateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_Adjuster", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_Adjuster", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_Adjuster", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_AdjusterMaster_DeploymentState", "StateMaster")]
        public StateMaster DeploymentStateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_DeploymentState", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_DeploymentState", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> DeploymentStateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_DeploymentState", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.fk_AdjusterMaster_DeploymentState", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_AdjusterMaster", "LeadInvoice")]
        public EntityCollection<LeadInvoice> LeadInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_AdjusterMaster", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_AdjusterMaster", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadAdjuster", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadAdjuster", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadAdjuster", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_AdjusterMaster", "Claim")]
        public EntityCollection<Claim> Claims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Claim>("CRMModel.FK_Claim_AdjusterMaster", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Claim>("CRMModel.FK_Claim_AdjusterMaster", "Claim", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimExpense_AdjusterMaster", "ClaimExpense")]
        public EntityCollection<ClaimExpense> ClaimExpenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimExpense>("CRMModel.FK_ClaimExpense_AdjusterMaster", "ClaimExpense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimExpense>("CRMModel.FK_ClaimExpense_AdjusterMaster", "ClaimExpense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_AdjusterMaster", "ClaimService")]
        public EntityCollection<ClaimService> ClaimServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_AdjusterMaster", "ClaimService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_AdjusterMaster", "ClaimService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="AdjusterNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjusterNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjusterNote object.
        /// </summary>
        /// <param name="noteID">Initial value of the NoteID property.</param>
        public static AdjusterNote CreateAdjusterNote(global::System.Int32 noteID)
        {
            AdjusterNote adjusterNote = new AdjusterNote();
            adjusterNote.NoteID = noteID;
            return adjusterNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoteID
        {
            get
            {
                return _NoteID;
            }
            set
            {
                if (_NoteID != value)
                {
                    OnNoteIDChanging(value);
                    ReportPropertyChanging("NoteID");
                    _NoteID = StructuralObject.SetValidValue(value, "NoteID");
                    ReportPropertyChanged("NoteID");
                    OnNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _NoteID;
        partial void OnNoteIDChanging(global::System.Int32 value);
        partial void OnNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NoteDate
        {
            get
            {
                return _NoteDate;
            }
            set
            {
                OnNoteDateChanging(value);
                ReportPropertyChanging("NoteDate");
                _NoteDate = StructuralObject.SetValidValue(value, "NoteDate");
                ReportPropertyChanged("NoteDate");
                OnNoteDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NoteDate;
        partial void OnNoteDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNoteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterNote_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterNote_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterNote_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterNote_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterNote_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterNote_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_AdjusterNote_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_AdjusterNote_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_AdjusterNote_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_AdjusterNote_SecUser", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="AdjusterReference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjusterReference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjusterReference object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static AdjusterReference CreateAdjusterReference(global::System.Int32 id)
        {
            AdjusterReference adjusterReference = new AdjusterReference();
            adjusterReference.ID = id;
            return adjusterReference;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RereferenceName
        {
            get
            {
                return _RereferenceName;
            }
            set
            {
                OnRereferenceNameChanging(value);
                ReportPropertyChanging("RereferenceName");
                _RereferenceName = StructuralObject.SetValidValue(value, true, "RereferenceName");
                ReportPropertyChanged("RereferenceName");
                OnRereferenceNameChanged();
            }
        }
        private global::System.String _RereferenceName;
        partial void OnRereferenceNameChanging(global::System.String value);
        partial void OnRereferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true, "Position");
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterReference_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterReference_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterReference_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterReference_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterReference_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="AdjusterServiceArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdjusterServiceArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdjusterServiceArea object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static AdjusterServiceArea CreateAdjusterServiceArea(global::System.Int32 id)
        {
            AdjusterServiceArea adjusterServiceArea = new AdjusterServiceArea();
            adjusterServiceArea.ID = id;
            return adjusterServiceArea;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LicenseEffectiveDate
        {
            get
            {
                return _LicenseEffectiveDate;
            }
            set
            {
                OnLicenseEffectiveDateChanging(value);
                ReportPropertyChanging("LicenseEffectiveDate");
                _LicenseEffectiveDate = StructuralObject.SetValidValue(value, "LicenseEffectiveDate");
                ReportPropertyChanged("LicenseEffectiveDate");
                OnLicenseEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LicenseEffectiveDate;
        partial void OnLicenseEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLicenseEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LicenseExpirationDate
        {
            get
            {
                return _LicenseExpirationDate;
            }
            set
            {
                OnLicenseExpirationDateChanging(value);
                ReportPropertyChanging("LicenseExpirationDate");
                _LicenseExpirationDate = StructuralObject.SetValidValue(value, "LicenseExpirationDate");
                ReportPropertyChanged("LicenseExpirationDate");
                OnLicenseExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LicenseExpirationDate;
        partial void OnLicenseExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLicenseExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                OnLicenseNumberChanging(value);
                ReportPropertyChanging("LicenseNumber");
                _LicenseNumber = StructuralObject.SetValidValue(value, true, "LicenseNumber");
                ReportPropertyChanged("LicenseNumber");
                OnLicenseNumberChanged();
            }
        }
        private global::System.String _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.String value);
        partial void OnLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseType
        {
            get
            {
                return _LicenseType;
            }
            set
            {
                OnLicenseTypeChanging(value);
                ReportPropertyChanging("LicenseType");
                _LicenseType = StructuralObject.SetValidValue(value, true, "LicenseType");
                ReportPropertyChanged("LicenseType");
                OnLicenseTypeChanged();
            }
        }
        private global::System.String _LicenseType;
        partial void OnLicenseTypeChanging(global::System.String value);
        partial void OnLicenseTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AppointmentTypeID
        {
            get
            {
                return _AppointmentTypeID;
            }
            set
            {
                OnAppointmentTypeIDChanging(value);
                ReportPropertyChanging("AppointmentTypeID");
                _AppointmentTypeID = StructuralObject.SetValidValue(value, "AppointmentTypeID");
                ReportPropertyChanged("AppointmentTypeID");
                OnAppointmentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AppointmentTypeID;
        partial void OnAppointmentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAppointmentTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterServiceArea_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterServiceArea_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterServiceArea_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterServiceArea_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_AdjusterServiceArea_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterServiceArea_StateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_AdjusterServiceArea_StateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_AdjusterServiceArea_StateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_AdjusterServiceArea_StateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.FK_AdjusterServiceArea_StateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterLicenseAppointmentType")]
        public AdjusterLicenseAppointmentType AdjusterLicenseAppointmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterLicenseAppointmentType>("CRMModel.FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterLicenseAppointmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterLicenseAppointmentType>("CRMModel.FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterLicenseAppointmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterLicenseAppointmentType> AdjusterLicenseAppointmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterLicenseAppointmentType>("CRMModel.FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterLicenseAppointmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterLicenseAppointmentType>("CRMModel.FK_AdjusterServiceArea_AdjusterLicenseAppointmentType", "AdjusterLicenseAppointmentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ApplicationConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationConfiguration object.
        /// </summary>
        /// <param name="applicationConfigurationId">Initial value of the ApplicationConfigurationId property.</param>
        public static ApplicationConfiguration CreateApplicationConfiguration(global::System.Int32 applicationConfigurationId)
        {
            ApplicationConfiguration applicationConfiguration = new ApplicationConfiguration();
            applicationConfiguration.ApplicationConfigurationId = applicationConfigurationId;
            return applicationConfiguration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationConfigurationId
        {
            get
            {
                return _ApplicationConfigurationId;
            }
            set
            {
                if (_ApplicationConfigurationId != value)
                {
                    OnApplicationConfigurationIdChanging(value);
                    ReportPropertyChanging("ApplicationConfigurationId");
                    _ApplicationConfigurationId = StructuralObject.SetValidValue(value, "ApplicationConfigurationId");
                    ReportPropertyChanged("ApplicationConfigurationId");
                    OnApplicationConfigurationIdChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationConfigurationId;
        partial void OnApplicationConfigurationIdChanging(global::System.Int32 value);
        partial void OnApplicationConfigurationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PrimaryProducerCommissionPercent
        {
            get
            {
                return _PrimaryProducerCommissionPercent;
            }
            set
            {
                OnPrimaryProducerCommissionPercentChanging(value);
                ReportPropertyChanging("PrimaryProducerCommissionPercent");
                _PrimaryProducerCommissionPercent = StructuralObject.SetValidValue(value, "PrimaryProducerCommissionPercent");
                ReportPropertyChanged("PrimaryProducerCommissionPercent");
                OnPrimaryProducerCommissionPercentChanged();
            }
        }
        private Nullable<global::System.Decimal> _PrimaryProducerCommissionPercent;
        partial void OnPrimaryProducerCommissionPercentChanging(Nullable<global::System.Decimal> value);
        partial void OnPrimaryProducerCommissionPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SecondaryProducerCommissionPercent
        {
            get
            {
                return _SecondaryProducerCommissionPercent;
            }
            set
            {
                OnSecondaryProducerCommissionPercentChanging(value);
                ReportPropertyChanging("SecondaryProducerCommissionPercent");
                _SecondaryProducerCommissionPercent = StructuralObject.SetValidValue(value, "SecondaryProducerCommissionPercent");
                ReportPropertyChanged("SecondaryProducerCommissionPercent");
                OnSecondaryProducerCommissionPercentChanged();
            }
        }
        private Nullable<global::System.Decimal> _SecondaryProducerCommissionPercent;
        partial void OnSecondaryProducerCommissionPercentChanging(Nullable<global::System.Decimal> value);
        partial void OnSecondaryProducerCommissionPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailNotificationSite1
        {
            get
            {
                return _EmailNotificationSite1;
            }
            set
            {
                OnEmailNotificationSite1Changing(value);
                ReportPropertyChanging("EmailNotificationSite1");
                _EmailNotificationSite1 = StructuralObject.SetValidValue(value, true, "EmailNotificationSite1");
                ReportPropertyChanged("EmailNotificationSite1");
                OnEmailNotificationSite1Changed();
            }
        }
        private global::System.String _EmailNotificationSite1;
        partial void OnEmailNotificationSite1Changing(global::System.String value);
        partial void OnEmailNotificationSite1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailNotificationSite2
        {
            get
            {
                return _EmailNotificationSite2;
            }
            set
            {
                OnEmailNotificationSite2Changing(value);
                ReportPropertyChanging("EmailNotificationSite2");
                _EmailNotificationSite2 = StructuralObject.SetValidValue(value, true, "EmailNotificationSite2");
                ReportPropertyChanged("EmailNotificationSite2");
                OnEmailNotificationSite2Changed();
            }
        }
        private global::System.String _EmailNotificationSite2;
        partial void OnEmailNotificationSite2Changing(global::System.String value);
        partial void OnEmailNotificationSite2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailNotificationSite3
        {
            get
            {
                return _EmailNotificationSite3;
            }
            set
            {
                OnEmailNotificationSite3Changing(value);
                ReportPropertyChanging("EmailNotificationSite3");
                _EmailNotificationSite3 = StructuralObject.SetValidValue(value, true, "EmailNotificationSite3");
                ReportPropertyChanged("EmailNotificationSite3");
                OnEmailNotificationSite3Changed();
            }
        }
        private global::System.String _EmailNotificationSite3;
        partial void OnEmailNotificationSite3Changing(global::System.String value);
        partial void OnEmailNotificationSite3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="AppraiserMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppraiserMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppraiserMaster object.
        /// </summary>
        /// <param name="appraiserId">Initial value of the AppraiserId property.</param>
        public static AppraiserMaster CreateAppraiserMaster(global::System.Int32 appraiserId)
        {
            AppraiserMaster appraiserMaster = new AppraiserMaster();
            appraiserMaster.AppraiserId = appraiserId;
            return appraiserMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppraiserId
        {
            get
            {
                return _AppraiserId;
            }
            set
            {
                if (_AppraiserId != value)
                {
                    OnAppraiserIdChanging(value);
                    ReportPropertyChanging("AppraiserId");
                    _AppraiserId = StructuralObject.SetValidValue(value, "AppraiserId");
                    ReportPropertyChanged("AppraiserId");
                    OnAppraiserIdChanged();
                }
            }
        }
        private global::System.Int32 _AppraiserId;
        partial void OnAppraiserIdChanging(global::System.Int32 value);
        partial void OnAppraiserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AppraiserName
        {
            get
            {
                return _AppraiserName;
            }
            set
            {
                OnAppraiserNameChanging(value);
                ReportPropertyChanging("AppraiserName");
                _AppraiserName = StructuralObject.SetValidValue(value, true, "AppraiserName");
                ReportPropertyChanged("AppraiserName");
                OnAppraiserNameChanged();
            }
        }
        private global::System.String _AppraiserName;
        partial void OnAppraiserNameChanging(global::System.String value);
        partial void OnAppraiserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FederalTaxID
        {
            get
            {
                return _FederalTaxID;
            }
            set
            {
                OnFederalTaxIDChanging(value);
                ReportPropertyChanging("FederalTaxID");
                _FederalTaxID = StructuralObject.SetValidValue(value, true, "FederalTaxID");
                ReportPropertyChanged("FederalTaxID");
                OnFederalTaxIDChanged();
            }
        }
        private global::System.String _FederalTaxID;
        partial void OnFederalTaxIDChanging(global::System.String value);
        partial void OnFederalTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true, "Address1");
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, true, "BusinessName");
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Appraiser", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_Lead_Appraiser", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_Lead_Appraiser", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="BusinessRule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessRule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusinessRule object.
        /// </summary>
        /// <param name="businessRuleID">Initial value of the BusinessRuleID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static BusinessRule CreateBusinessRule(global::System.Int32 businessRuleID, global::System.Boolean isActive)
        {
            BusinessRule businessRule = new BusinessRule();
            businessRule.BusinessRuleID = businessRuleID;
            businessRule.IsActive = isActive;
            return businessRule;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BusinessRuleID
        {
            get
            {
                return _BusinessRuleID;
            }
            set
            {
                if (_BusinessRuleID != value)
                {
                    OnBusinessRuleIDChanging(value);
                    ReportPropertyChanging("BusinessRuleID");
                    _BusinessRuleID = StructuralObject.SetValidValue(value, "BusinessRuleID");
                    ReportPropertyChanged("BusinessRuleID");
                    OnBusinessRuleIDChanged();
                }
            }
        }
        private global::System.Int32 _BusinessRuleID;
        partial void OnBusinessRuleIDChanging(global::System.Int32 value);
        partial void OnBusinessRuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                OnRuleIDChanging(value);
                ReportPropertyChanging("RuleID");
                _RuleID = StructuralObject.SetValidValue(value, "RuleID");
                ReportPropertyChanged("RuleID");
                OnRuleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RuleID;
        partial void OnRuleIDChanging(Nullable<global::System.Int32> value);
        partial void OnRuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuleXML
        {
            get
            {
                return _RuleXML;
            }
            set
            {
                OnRuleXMLChanging(value);
                ReportPropertyChanging("RuleXML");
                _RuleXML = StructuralObject.SetValidValue(value, true, "RuleXML");
                ReportPropertyChanged("RuleXML");
                OnRuleXMLChanged();
            }
        }
        private global::System.String _RuleXML;
        partial void OnRuleXMLChanging(global::System.String value);
        partial void OnRuleXMLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_BusinessRule_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_BusinessRule_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_BusinessRule_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_BusinessRule_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.FK_BusinessRule_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_BusinessRule_Rule", "Rule")]
        public Rule Rule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("CRMModel.FK_BusinessRule_Rule", "Rule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("CRMModel.FK_BusinessRule_Rule", "Rule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rule> RuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rule>("CRMModel.FK_BusinessRule_Rule", "Rule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rule>("CRMModel.FK_BusinessRule_Rule", "Rule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_BusinessRule", "RuleException")]
        public EntityCollection<RuleException> RuleExceptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleException>("CRMModel.FK_RuleException_BusinessRule", "RuleException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleException>("CRMModel.FK_RuleException_BusinessRule", "RuleException", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Carrier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carrier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carrier object.
        /// </summary>
        /// <param name="carrierID">Initial value of the CarrierID property.</param>
        /// <param name="carrierName">Initial value of the CarrierName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Carrier CreateCarrier(global::System.Int32 carrierID, global::System.String carrierName, global::System.Boolean isActive)
        {
            Carrier carrier = new Carrier();
            carrier.CarrierID = carrierID;
            carrier.CarrierName = carrierName;
            carrier.IsActive = isActive;
            return carrier;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                if (_CarrierID != value)
                {
                    OnCarrierIDChanging(value);
                    ReportPropertyChanging("CarrierID");
                    _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                    ReportPropertyChanged("CarrierID");
                    OnCarrierIDChanged();
                }
            }
        }
        private global::System.Int32 _CarrierID;
        partial void OnCarrierIDChanging(global::System.Int32 value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CarrierName
        {
            get
            {
                return _CarrierName;
            }
            set
            {
                OnCarrierNameChanging(value);
                ReportPropertyChanging("CarrierName");
                _CarrierName = StructuralObject.SetValidValue(value, false, "CarrierName");
                ReportPropertyChanged("CarrierName");
                OnCarrierNameChanged();
            }
        }
        private global::System.String _CarrierName;
        partial void OnCarrierNameChanging(global::System.String value);
        partial void OnCarrierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true, "AddressLine1");
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true, "AddressLine2");
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZipCodeID
        {
            get
            {
                return _ZipCodeID;
            }
            set
            {
                OnZipCodeIDChanging(value);
                ReportPropertyChanging("ZipCodeID");
                _ZipCodeID = StructuralObject.SetValidValue(value, "ZipCodeID");
                ReportPropertyChanged("ZipCodeID");
                OnZipCodeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ZipCodeID;
        partial void OnZipCodeIDChanging(Nullable<global::System.Int32> value);
        partial void OnZipCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, true, "StateName");
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_CityMaster", "CityMaster")]
        public CityMaster CityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Carrier_CityMaster", "CityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Carrier_CityMaster", "CityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityMaster> CityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Carrier_CityMaster", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityMaster>("CRMModel.fk_Carrier_CityMaster", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_stateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Carrier_stateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Carrier_stateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Carrier_stateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.fk_Carrier_stateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_ZipCodeMaster", "ZipCodeMaster")]
        public ZipCodeMaster ZipCodeMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZipCodeMaster>("CRMModel.fk_Carrier_ZipCodeMaster", "ZipCodeMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZipCodeMaster>("CRMModel.fk_Carrier_ZipCodeMaster", "ZipCodeMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZipCodeMaster> ZipCodeMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZipCodeMaster>("CRMModel.fk_Carrier_ZipCodeMaster", "ZipCodeMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZipCodeMaster>("CRMModel.fk_Carrier_ZipCodeMaster", "ZipCodeMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_Carrier", "CarrierLocation")]
        public EntityCollection<CarrierLocation> CarrierLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_Carrier", "CarrierLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_Carrier", "CarrierLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_Carrier", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_Carrier", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_Carrier", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_Carrier", "LeadInvoice")]
        public EntityCollection<LeadInvoice> LeadInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_Carrier", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_Carrier", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierComment_Carrier", "CarrierComment")]
        public EntityCollection<CarrierComment> CarrierComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierComment>("CRMModel.FK_CarrierComment_Carrier", "CarrierComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierComment>("CRMModel.FK_CarrierComment_Carrier", "CarrierComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierDocument_Carrier", "CarrierDocument")]
        public EntityCollection<CarrierDocument> CarrierDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierDocument>("CRMModel.FK_CarrierDocument_Carrier", "CarrierDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierDocument>("CRMModel.FK_CarrierDocument_Carrier", "CarrierDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierContact_Carrier", "CarrierContact")]
        public EntityCollection<CarrierContact> CarrierContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierContact>("CRMModel.FK_CarrierContact_Carrier", "CarrierContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierContact>("CRMModel.FK_CarrierContact_Carrier", "CarrierContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfile_Carrier", "CarrierInvoiceProfile")]
        public EntityCollection<CarrierInvoiceProfile> CarrierInvoiceProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfile_Carrier", "CarrierInvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfile_Carrier", "CarrierInvoiceProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_Country", "CountryMaster")]
        public CountryMaster CountryMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("CRMModel.fk_Carrier_Country", "CountryMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("CRMModel.fk_Carrier_Country", "CountryMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryMaster> CountryMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("CRMModel.fk_Carrier_Country", "CountryMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryMaster>("CRMModel.fk_Carrier_Country", "CountryMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierComment object.
        /// </summary>
        /// <param name="commentId">Initial value of the CommentId property.</param>
        /// <param name="carrierID">Initial value of the CarrierID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="commentText">Initial value of the CommentText property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="commentDate">Initial value of the CommentDate property.</param>
        public static CarrierComment CreateCarrierComment(global::System.Int32 commentId, global::System.Int32 carrierID, global::System.Int32 userId, global::System.String commentText, global::System.Boolean status, global::System.DateTime commentDate)
        {
            CarrierComment carrierComment = new CarrierComment();
            carrierComment.CommentId = commentId;
            carrierComment.CarrierID = carrierID;
            carrierComment.UserId = userId;
            carrierComment.CommentText = commentText;
            carrierComment.Status = status;
            carrierComment.CommentDate = commentDate;
            return carrierComment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value, "CommentId");
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _CommentId;
        partial void OnCommentIdChanging(global::System.Int32 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private global::System.Int32 _CarrierID;
        partial void OnCarrierIDChanging(global::System.Int32 value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentText
        {
            get
            {
                return _CommentText;
            }
            set
            {
                OnCommentTextChanging(value);
                ReportPropertyChanging("CommentText");
                _CommentText = StructuralObject.SetValidValue(value, false, "CommentText");
                ReportPropertyChanged("CommentText");
                OnCommentTextChanged();
            }
        }
        private global::System.String _CommentText;
        partial void OnCommentTextChanging(global::System.String value);
        partial void OnCommentTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CommentDate
        {
            get
            {
                return _CommentDate;
            }
            set
            {
                OnCommentDateChanging(value);
                ReportPropertyChanging("CommentDate");
                _CommentDate = StructuralObject.SetValidValue(value, "CommentDate");
                ReportPropertyChanged("CommentDate");
                OnCommentDateChanged();
            }
        }
        private global::System.DateTime _CommentDate;
        partial void OnCommentDateChanging(global::System.DateTime value);
        partial void OnCommentDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierComment_Carrier", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierComment_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierComment_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierComment_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("CRMModel.FK_CarrierComment_Carrier", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierComment_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_CarrierComment_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_CarrierComment_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_CarrierComment_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_CarrierComment_SecUser", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierContact object.
        /// </summary>
        /// <param name="carrierContactID">Initial value of the CarrierContactID property.</param>
        /// <param name="carrierID">Initial value of the CarrierID property.</param>
        public static CarrierContact CreateCarrierContact(global::System.Int32 carrierContactID, global::System.Int32 carrierID)
        {
            CarrierContact carrierContact = new CarrierContact();
            carrierContact.CarrierContactID = carrierContactID;
            carrierContact.CarrierID = carrierID;
            return carrierContact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierContactID
        {
            get
            {
                return _CarrierContactID;
            }
            set
            {
                if (_CarrierContactID != value)
                {
                    OnCarrierContactIDChanging(value);
                    ReportPropertyChanging("CarrierContactID");
                    _CarrierContactID = StructuralObject.SetValidValue(value, "CarrierContactID");
                    ReportPropertyChanged("CarrierContactID");
                    OnCarrierContactIDChanged();
                }
            }
        }
        private global::System.Int32 _CarrierContactID;
        partial void OnCarrierContactIDChanging(global::System.Int32 value);
        partial void OnCarrierContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private global::System.Int32 _CarrierID;
        partial void OnCarrierIDChanging(global::System.Int32 value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierContact_Carrier", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierContact_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierContact_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierContact_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("CRMModel.FK_CarrierContact_Carrier", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierContact_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_CarrierContact_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_CarrierContact_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_CarrierContact_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CRMModel.FK_CarrierContact_Contact", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierDocument object.
        /// </summary>
        /// <param name="carrierID">Initial value of the CarrierID property.</param>
        /// <param name="documentDate">Initial value of the DocumentDate property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="documentDescription">Initial value of the DocumentDescription property.</param>
        /// <param name="carrierDocumentID">Initial value of the CarrierDocumentID property.</param>
        public static CarrierDocument CreateCarrierDocument(global::System.Int32 carrierID, global::System.DateTime documentDate, global::System.String documentName, global::System.String documentDescription, global::System.Int32 carrierDocumentID)
        {
            CarrierDocument carrierDocument = new CarrierDocument();
            carrierDocument.CarrierID = carrierID;
            carrierDocument.DocumentDate = documentDate;
            carrierDocument.DocumentName = documentName;
            carrierDocument.DocumentDescription = documentDescription;
            carrierDocument.CarrierDocumentID = carrierDocumentID;
            return carrierDocument;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private global::System.Int32 _CarrierID;
        partial void OnCarrierIDChanging(global::System.Int32 value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value, "DocumentDate");
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private global::System.DateTime _DocumentDate;
        partial void OnDocumentDateChanging(global::System.DateTime value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentDescription
        {
            get
            {
                return _DocumentDescription;
            }
            set
            {
                OnDocumentDescriptionChanging(value);
                ReportPropertyChanging("DocumentDescription");
                _DocumentDescription = StructuralObject.SetValidValue(value, false, "DocumentDescription");
                ReportPropertyChanged("DocumentDescription");
                OnDocumentDescriptionChanged();
            }
        }
        private global::System.String _DocumentDescription;
        partial void OnDocumentDescriptionChanging(global::System.String value);
        partial void OnDocumentDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierDocumentID
        {
            get
            {
                return _CarrierDocumentID;
            }
            set
            {
                if (_CarrierDocumentID != value)
                {
                    OnCarrierDocumentIDChanging(value);
                    ReportPropertyChanging("CarrierDocumentID");
                    _CarrierDocumentID = StructuralObject.SetValidValue(value, "CarrierDocumentID");
                    ReportPropertyChanged("CarrierDocumentID");
                    OnCarrierDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _CarrierDocumentID;
        partial void OnCarrierDocumentIDChanging(global::System.Int32 value);
        partial void OnCarrierDocumentIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierDocument_Carrier", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierDocument_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierDocument_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierDocument_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("CRMModel.FK_CarrierDocument_Carrier", "Carrier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierInvoiceProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierInvoiceProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierInvoiceProfile object.
        /// </summary>
        /// <param name="carrierInvoiceProfileID">Initial value of the CarrierInvoiceProfileID property.</param>
        /// <param name="carrierID">Initial value of the CarrierID property.</param>
        /// <param name="profileName">Initial value of the ProfileName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CarrierInvoiceProfile CreateCarrierInvoiceProfile(global::System.Int32 carrierInvoiceProfileID, global::System.Int32 carrierID, global::System.String profileName, global::System.Boolean isActive)
        {
            CarrierInvoiceProfile carrierInvoiceProfile = new CarrierInvoiceProfile();
            carrierInvoiceProfile.CarrierInvoiceProfileID = carrierInvoiceProfileID;
            carrierInvoiceProfile.CarrierID = carrierID;
            carrierInvoiceProfile.ProfileName = profileName;
            carrierInvoiceProfile.IsActive = isActive;
            return carrierInvoiceProfile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                if (_CarrierInvoiceProfileID != value)
                {
                    OnCarrierInvoiceProfileIDChanging(value);
                    ReportPropertyChanging("CarrierInvoiceProfileID");
                    _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                    ReportPropertyChanged("CarrierInvoiceProfileID");
                    OnCarrierInvoiceProfileIDChanged();
                }
            }
        }
        private global::System.Int32 _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(global::System.Int32 value);
        partial void OnCarrierInvoiceProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private global::System.Int32 _CarrierID;
        partial void OnCarrierIDChanging(global::System.Int32 value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierInvoiceProfileTypeID
        {
            get
            {
                return _CarrierInvoiceProfileTypeID;
            }
            set
            {
                OnCarrierInvoiceProfileTypeIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileTypeID");
                _CarrierInvoiceProfileTypeID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileTypeID");
                ReportPropertyChanged("CarrierInvoiceProfileTypeID");
                OnCarrierInvoiceProfileTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierInvoiceProfileTypeID;
        partial void OnCarrierInvoiceProfileTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierInvoiceProfileTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProfileName
        {
            get
            {
                return _ProfileName;
            }
            set
            {
                OnProfileNameChanging(value);
                ReportPropertyChanging("ProfileName");
                _ProfileName = StructuralObject.SetValidValue(value, false, "ProfileName");
                ReportPropertyChanged("ProfileName");
                OnProfileNameChanged();
            }
        }
        private global::System.String _ProfileName;
        partial void OnProfileNameChanging(global::System.String value);
        partial void OnProfileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffiectiveDate
        {
            get
            {
                return _EffiectiveDate;
            }
            set
            {
                OnEffiectiveDateChanging(value);
                ReportPropertyChanging("EffiectiveDate");
                _EffiectiveDate = StructuralObject.SetValidValue(value, "EffiectiveDate");
                ReportPropertyChanged("EffiectiveDate");
                OnEffiectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffiectiveDate;
        partial void OnEffiectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffiectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value, "ExpirationDate");
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverageArea
        {
            get
            {
                return _CoverageArea;
            }
            set
            {
                OnCoverageAreaChanging(value);
                ReportPropertyChanging("CoverageArea");
                _CoverageArea = StructuralObject.SetValidValue(value, true, "CoverageArea");
                ReportPropertyChanged("CoverageArea");
                OnCoverageAreaChanged();
            }
        }
        private global::System.String _CoverageArea;
        partial void OnCoverageAreaChanging(global::System.String value);
        partial void OnCoverageAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceType
        {
            get
            {
                return _InvoiceType;
            }
            set
            {
                OnInvoiceTypeChanging(value);
                ReportPropertyChanging("InvoiceType");
                _InvoiceType = StructuralObject.SetValidValue(value, "InvoiceType");
                ReportPropertyChanged("InvoiceType");
                OnInvoiceTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceType;
        partial void OnInvoiceTypeChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountingContact
        {
            get
            {
                return _AccountingContact;
            }
            set
            {
                OnAccountingContactChanging(value);
                ReportPropertyChanging("AccountingContact");
                _AccountingContact = StructuralObject.SetValidValue(value, true, "AccountingContact");
                ReportPropertyChanged("AccountingContact");
                OnAccountingContactChanged();
            }
        }
        private global::System.String _AccountingContact;
        partial void OnAccountingContactChanging(global::System.String value);
        partial void OnAccountingContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountingContactEmail
        {
            get
            {
                return _AccountingContactEmail;
            }
            set
            {
                OnAccountingContactEmailChanging(value);
                ReportPropertyChanging("AccountingContactEmail");
                _AccountingContactEmail = StructuralObject.SetValidValue(value, true, "AccountingContactEmail");
                ReportPropertyChanged("AccountingContactEmail");
                OnAccountingContactEmailChanged();
            }
        }
        private global::System.String _AccountingContactEmail;
        partial void OnAccountingContactEmailChanging(global::System.String value);
        partial void OnAccountingContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FirmDiscountPercentage
        {
            get
            {
                return _FirmDiscountPercentage;
            }
            set
            {
                OnFirmDiscountPercentageChanging(value);
                ReportPropertyChanging("FirmDiscountPercentage");
                _FirmDiscountPercentage = StructuralObject.SetValidValue(value, "FirmDiscountPercentage");
                ReportPropertyChanged("FirmDiscountPercentage");
                OnFirmDiscountPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _FirmDiscountPercentage;
        partial void OnFirmDiscountPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnFirmDiscountPercentageChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfile_Carrier", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierInvoiceProfile_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierInvoiceProfile_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierInvoiceProfile_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("CRMModel.FK_CarrierInvoiceProfile_Carrier", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeItemized")]
        public EntityCollection<CarrierInvoiceProfileFeeItemized> CarrierInvoiceProfileFeeItemizeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierInvoiceProfileFeeItemized>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeItemized");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierInvoiceProfileFeeItemized>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeItemized", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeProvision")]
        public EntityCollection<CarrierInvoiceProfileFeeProvision> CarrierInvoiceProfileFeeProvisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierInvoiceProfileFeeProvision>("CRMModel.FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeProvision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierInvoiceProfileFeeProvision>("CRMModel.FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeProvision", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeSchedule")]
        public EntityCollection<CarrierInvoiceProfileFeeSchedule> CarrierInvoiceProfileFeeSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierInvoiceProfileFeeSchedule>("CRMModel.FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierInvoiceProfileFeeSchedule>("CRMModel.FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfileFeeSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invoice_CarrierInvoiceProfile", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CRMModel.FK_Invoice_CarrierInvoiceProfile", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CRMModel.FK_Invoice_CarrierInvoiceProfile", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_CarrierInvoiceProfile", "LeadInvoice")]
        public EntityCollection<LeadInvoice> LeadInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_CarrierInvoiceProfile", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_CarrierInvoiceProfile", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceType")]
        public CarrierInvoiceType CarrierInvoiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceType> CarrierInvoiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceType>("CRMModel.FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierInvoiceProfileFeeItemized")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierInvoiceProfileFeeItemized : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierInvoiceProfileFeeItemized object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="carrierInvoiceProfileID">Initial value of the CarrierInvoiceProfileID property.</param>
        /// <param name="itemDescription">Initial value of the ItemDescription property.</param>
        /// <param name="itemRate">Initial value of the ItemRate property.</param>
        /// <param name="itemPercentage">Initial value of the ItemPercentage property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CarrierInvoiceProfileFeeItemized CreateCarrierInvoiceProfileFeeItemized(global::System.Int32 id, global::System.Int32 carrierInvoiceProfileID, global::System.String itemDescription, global::System.Decimal itemRate, global::System.Decimal itemPercentage, global::System.Boolean isActive)
        {
            CarrierInvoiceProfileFeeItemized carrierInvoiceProfileFeeItemized = new CarrierInvoiceProfileFeeItemized();
            carrierInvoiceProfileFeeItemized.ID = id;
            carrierInvoiceProfileFeeItemized.CarrierInvoiceProfileID = carrierInvoiceProfileID;
            carrierInvoiceProfileFeeItemized.ItemDescription = itemDescription;
            carrierInvoiceProfileFeeItemized.ItemRate = itemRate;
            carrierInvoiceProfileFeeItemized.ItemPercentage = itemPercentage;
            carrierInvoiceProfileFeeItemized.IsActive = isActive;
            return carrierInvoiceProfileFeeItemized;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                OnCarrierInvoiceProfileIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileID");
                _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                ReportPropertyChanged("CarrierInvoiceProfileID");
                OnCarrierInvoiceProfileIDChanged();
            }
        }
        private global::System.Int32 _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(global::System.Int32 value);
        partial void OnCarrierInvoiceProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemDescription
        {
            get
            {
                return _ItemDescription;
            }
            set
            {
                OnItemDescriptionChanging(value);
                ReportPropertyChanging("ItemDescription");
                _ItemDescription = StructuralObject.SetValidValue(value, false, "ItemDescription");
                ReportPropertyChanged("ItemDescription");
                OnItemDescriptionChanged();
            }
        }
        private global::System.String _ItemDescription;
        partial void OnItemDescriptionChanging(global::System.String value);
        partial void OnItemDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ItemRate
        {
            get
            {
                return _ItemRate;
            }
            set
            {
                OnItemRateChanging(value);
                ReportPropertyChanging("ItemRate");
                _ItemRate = StructuralObject.SetValidValue(value, "ItemRate");
                ReportPropertyChanged("ItemRate");
                OnItemRateChanged();
            }
        }
        private global::System.Decimal _ItemRate;
        partial void OnItemRateChanging(global::System.Decimal value);
        partial void OnItemRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ItemPercentage
        {
            get
            {
                return _ItemPercentage;
            }
            set
            {
                OnItemPercentageChanging(value);
                ReportPropertyChanging("ItemPercentage");
                _ItemPercentage = StructuralObject.SetValidValue(value, "ItemPercentage");
                ReportPropertyChanged("ItemPercentage");
                OnItemPercentageChanged();
            }
        }
        private global::System.Decimal _ItemPercentage;
        partial void OnItemPercentageChanging(global::System.Decimal value);
        partial void OnItemPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                OnServiceTypeIDChanging(value);
                ReportPropertyChanging("ServiceTypeID");
                _ServiceTypeID = StructuralObject.SetValidValue(value, "ServiceTypeID");
                ReportPropertyChanged("ServiceTypeID");
                OnServiceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceTypeID;
        partial void OnServiceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpenseTypeID
        {
            get
            {
                return _ExpenseTypeID;
            }
            set
            {
                OnExpenseTypeIDChanging(value);
                ReportPropertyChanging("ExpenseTypeID");
                _ExpenseTypeID = StructuralObject.SetValidValue(value, "ExpenseTypeID");
                ReportPropertyChanged("ExpenseTypeID");
                OnExpenseTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpenseTypeID;
        partial void OnExpenseTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnExpenseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LogicalOperator
        {
            get
            {
                return _LogicalOperator;
            }
            set
            {
                OnLogicalOperatorChanging(value);
                ReportPropertyChanging("LogicalOperator");
                _LogicalOperator = StructuralObject.SetValidValue(value, "LogicalOperator");
                ReportPropertyChanged("LogicalOperator");
                OnLogicalOperatorChanged();
            }
        }
        private Nullable<global::System.Int32> _LogicalOperator;
        partial void OnLogicalOperatorChanging(Nullable<global::System.Int32> value);
        partial void OnLogicalOperatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LogicalOperatorOperand
        {
            get
            {
                return _LogicalOperatorOperand;
            }
            set
            {
                OnLogicalOperatorOperandChanging(value);
                ReportPropertyChanging("LogicalOperatorOperand");
                _LogicalOperatorOperand = StructuralObject.SetValidValue(value, "LogicalOperatorOperand");
                ReportPropertyChanged("LogicalOperatorOperand");
                OnLogicalOperatorOperandChanged();
            }
        }
        private Nullable<global::System.Decimal> _LogicalOperatorOperand;
        partial void OnLogicalOperatorOperandChanging(Nullable<global::System.Decimal> value);
        partial void OnLogicalOperatorOperandChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfile")]
        public CarrierInvoiceProfile CarrierInvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceProfile> CarrierInvoiceProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_CarrierInvoiceProfile", "CarrierInvoiceProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "InvoiceServiceType")]
        public InvoiceServiceType InvoiceServiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "InvoiceServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "InvoiceServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceServiceType> InvoiceServiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "InvoiceServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceServiceType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "InvoiceServiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "ExpenseType")]
        public ExpenseType ExpenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "ExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "ExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseType> ExpenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseType>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "ExpenseType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierInvoiceProfileFeeProvision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierInvoiceProfileFeeProvision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierInvoiceProfileFeeProvision object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="carrierInvoiceProfileID">Initial value of the CarrierInvoiceProfileID property.</param>
        /// <param name="provisionText">Initial value of the ProvisionText property.</param>
        /// <param name="provisionAmount">Initial value of the ProvisionAmount property.</param>
        public static CarrierInvoiceProfileFeeProvision CreateCarrierInvoiceProfileFeeProvision(global::System.Int32 id, global::System.Int32 carrierInvoiceProfileID, global::System.String provisionText, global::System.Decimal provisionAmount)
        {
            CarrierInvoiceProfileFeeProvision carrierInvoiceProfileFeeProvision = new CarrierInvoiceProfileFeeProvision();
            carrierInvoiceProfileFeeProvision.ID = id;
            carrierInvoiceProfileFeeProvision.CarrierInvoiceProfileID = carrierInvoiceProfileID;
            carrierInvoiceProfileFeeProvision.ProvisionText = provisionText;
            carrierInvoiceProfileFeeProvision.ProvisionAmount = provisionAmount;
            return carrierInvoiceProfileFeeProvision;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                OnCarrierInvoiceProfileIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileID");
                _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                ReportPropertyChanged("CarrierInvoiceProfileID");
                OnCarrierInvoiceProfileIDChanged();
            }
        }
        private global::System.Int32 _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(global::System.Int32 value);
        partial void OnCarrierInvoiceProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProvisionText
        {
            get
            {
                return _ProvisionText;
            }
            set
            {
                OnProvisionTextChanging(value);
                ReportPropertyChanging("ProvisionText");
                _ProvisionText = StructuralObject.SetValidValue(value, false, "ProvisionText");
                ReportPropertyChanged("ProvisionText");
                OnProvisionTextChanged();
            }
        }
        private global::System.String _ProvisionText;
        partial void OnProvisionTextChanging(global::System.String value);
        partial void OnProvisionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ProvisionAmount
        {
            get
            {
                return _ProvisionAmount;
            }
            set
            {
                OnProvisionAmountChanging(value);
                ReportPropertyChanging("ProvisionAmount");
                _ProvisionAmount = StructuralObject.SetValidValue(value, "ProvisionAmount");
                ReportPropertyChanged("ProvisionAmount");
                OnProvisionAmountChanged();
            }
        }
        private global::System.Decimal _ProvisionAmount;
        partial void OnProvisionAmountChanging(global::System.Decimal value);
        partial void OnProvisionAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfile")]
        public CarrierInvoiceProfile CarrierInvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceProfile> CarrierInvoiceProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeProvision_CarrierInvoiceProfile", "CarrierInvoiceProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierInvoiceProfileFeeSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierInvoiceProfileFeeSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierInvoiceProfileFeeSchedule object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="carrierInvoiceProfileID">Initial value of the CarrierInvoiceProfileID property.</param>
        /// <param name="rangeAmountFrom">Initial value of the RangeAmountFrom property.</param>
        /// <param name="rangeAmountTo">Initial value of the RangeAmountTo property.</param>
        /// <param name="flatFee">Initial value of the FlatFee property.</param>
        /// <param name="percentFee">Initial value of the PercentFee property.</param>
        /// <param name="minimumFee">Initial value of the MinimumFee property.</param>
        public static CarrierInvoiceProfileFeeSchedule CreateCarrierInvoiceProfileFeeSchedule(global::System.Int32 id, global::System.Int32 carrierInvoiceProfileID, global::System.Decimal rangeAmountFrom, global::System.Decimal rangeAmountTo, global::System.Decimal flatFee, global::System.Decimal percentFee, global::System.Decimal minimumFee)
        {
            CarrierInvoiceProfileFeeSchedule carrierInvoiceProfileFeeSchedule = new CarrierInvoiceProfileFeeSchedule();
            carrierInvoiceProfileFeeSchedule.ID = id;
            carrierInvoiceProfileFeeSchedule.CarrierInvoiceProfileID = carrierInvoiceProfileID;
            carrierInvoiceProfileFeeSchedule.RangeAmountFrom = rangeAmountFrom;
            carrierInvoiceProfileFeeSchedule.RangeAmountTo = rangeAmountTo;
            carrierInvoiceProfileFeeSchedule.FlatFee = flatFee;
            carrierInvoiceProfileFeeSchedule.PercentFee = percentFee;
            carrierInvoiceProfileFeeSchedule.MinimumFee = minimumFee;
            return carrierInvoiceProfileFeeSchedule;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                OnCarrierInvoiceProfileIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileID");
                _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                ReportPropertyChanged("CarrierInvoiceProfileID");
                OnCarrierInvoiceProfileIDChanged();
            }
        }
        private global::System.Int32 _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(global::System.Int32 value);
        partial void OnCarrierInvoiceProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RangeAmountFrom
        {
            get
            {
                return _RangeAmountFrom;
            }
            set
            {
                OnRangeAmountFromChanging(value);
                ReportPropertyChanging("RangeAmountFrom");
                _RangeAmountFrom = StructuralObject.SetValidValue(value, "RangeAmountFrom");
                ReportPropertyChanged("RangeAmountFrom");
                OnRangeAmountFromChanged();
            }
        }
        private global::System.Decimal _RangeAmountFrom;
        partial void OnRangeAmountFromChanging(global::System.Decimal value);
        partial void OnRangeAmountFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RangeAmountTo
        {
            get
            {
                return _RangeAmountTo;
            }
            set
            {
                OnRangeAmountToChanging(value);
                ReportPropertyChanging("RangeAmountTo");
                _RangeAmountTo = StructuralObject.SetValidValue(value, "RangeAmountTo");
                ReportPropertyChanged("RangeAmountTo");
                OnRangeAmountToChanged();
            }
        }
        private global::System.Decimal _RangeAmountTo;
        partial void OnRangeAmountToChanging(global::System.Decimal value);
        partial void OnRangeAmountToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FlatFee
        {
            get
            {
                return _FlatFee;
            }
            set
            {
                OnFlatFeeChanging(value);
                ReportPropertyChanging("FlatFee");
                _FlatFee = StructuralObject.SetValidValue(value, "FlatFee");
                ReportPropertyChanged("FlatFee");
                OnFlatFeeChanged();
            }
        }
        private global::System.Decimal _FlatFee;
        partial void OnFlatFeeChanging(global::System.Decimal value);
        partial void OnFlatFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PercentFee
        {
            get
            {
                return _PercentFee;
            }
            set
            {
                OnPercentFeeChanging(value);
                ReportPropertyChanging("PercentFee");
                _PercentFee = StructuralObject.SetValidValue(value, "PercentFee");
                ReportPropertyChanged("PercentFee");
                OnPercentFeeChanged();
            }
        }
        private global::System.Decimal _PercentFee;
        partial void OnPercentFeeChanging(global::System.Decimal value);
        partial void OnPercentFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MinimumFee
        {
            get
            {
                return _MinimumFee;
            }
            set
            {
                OnMinimumFeeChanging(value);
                ReportPropertyChanging("MinimumFee");
                _MinimumFee = StructuralObject.SetValidValue(value, "MinimumFee");
                ReportPropertyChanged("MinimumFee");
                OnMinimumFeeChanged();
            }
        }
        private global::System.Decimal _MinimumFee;
        partial void OnMinimumFeeChanging(global::System.Decimal value);
        partial void OnMinimumFeeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfile")]
        public CarrierInvoiceProfile CarrierInvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceProfile> CarrierInvoiceProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfileFeeSchedule_CarrierInvoiceProfile", "CarrierInvoiceProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierInvoiceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierInvoiceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierInvoiceType object.
        /// </summary>
        /// <param name="invoiceTypeID">Initial value of the InvoiceTypeID property.</param>
        /// <param name="invoiceType">Initial value of the InvoiceType property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CarrierInvoiceType CreateCarrierInvoiceType(global::System.Int32 invoiceTypeID, global::System.String invoiceType, global::System.Boolean isActive)
        {
            CarrierInvoiceType carrierInvoiceType = new CarrierInvoiceType();
            carrierInvoiceType.InvoiceTypeID = invoiceTypeID;
            carrierInvoiceType.InvoiceType = invoiceType;
            carrierInvoiceType.IsActive = isActive;
            return carrierInvoiceType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceTypeID
        {
            get
            {
                return _InvoiceTypeID;
            }
            set
            {
                if (_InvoiceTypeID != value)
                {
                    OnInvoiceTypeIDChanging(value);
                    ReportPropertyChanging("InvoiceTypeID");
                    _InvoiceTypeID = StructuralObject.SetValidValue(value, "InvoiceTypeID");
                    ReportPropertyChanged("InvoiceTypeID");
                    OnInvoiceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceTypeID;
        partial void OnInvoiceTypeIDChanging(global::System.Int32 value);
        partial void OnInvoiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvoiceType
        {
            get
            {
                return _InvoiceType;
            }
            set
            {
                OnInvoiceTypeChanging(value);
                ReportPropertyChanging("InvoiceType");
                _InvoiceType = StructuralObject.SetValidValue(value, false, "InvoiceType");
                ReportPropertyChanged("InvoiceType");
                OnInvoiceTypeChanged();
            }
        }
        private global::System.String _InvoiceType;
        partial void OnInvoiceTypeChanging(global::System.String value);
        partial void OnInvoiceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_CarrierInvoiceType", "LeadInvoice")]
        public EntityCollection<LeadInvoice> LeadInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_CarrierInvoiceType", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_CarrierInvoiceType", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invoice_CarrierInvoiceType", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CRMModel.FK_Invoice_CarrierInvoiceType", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CRMModel.FK_Invoice_CarrierInvoiceType", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceProfile")]
        public EntityCollection<CarrierInvoiceProfile> CarrierInvoiceProfiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierInvoiceProfile>("CRMModel.FK_CarrierInvoiceProfile_CarrierInvoiceType", "CarrierInvoiceProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CarrierLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CarrierLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CarrierLocation object.
        /// </summary>
        /// <param name="carrierLocationID">Initial value of the CarrierLocationID property.</param>
        /// <param name="carrierID">Initial value of the CarrierID property.</param>
        public static CarrierLocation CreateCarrierLocation(global::System.Int32 carrierLocationID, global::System.Int32 carrierID)
        {
            CarrierLocation carrierLocation = new CarrierLocation();
            carrierLocation.CarrierLocationID = carrierLocationID;
            carrierLocation.CarrierID = carrierID;
            return carrierLocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierLocationID
        {
            get
            {
                return _CarrierLocationID;
            }
            set
            {
                if (_CarrierLocationID != value)
                {
                    OnCarrierLocationIDChanging(value);
                    ReportPropertyChanging("CarrierLocationID");
                    _CarrierLocationID = StructuralObject.SetValidValue(value, "CarrierLocationID");
                    ReportPropertyChanged("CarrierLocationID");
                    OnCarrierLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _CarrierLocationID;
        partial void OnCarrierLocationIDChanging(global::System.Int32 value);
        partial void OnCarrierLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private global::System.Int32 _CarrierID;
        partial void OnCarrierIDChanging(global::System.Int32 value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true, "LocationName");
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, true, "DepartmentName");
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true, "AddressLine1");
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true, "AddressLine2");
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, true, "StateName");
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StateId;
        partial void OnStateIdChanging(Nullable<global::System.Int32> value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value, "CityId");
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZipCodeId
        {
            get
            {
                return _ZipCodeId;
            }
            set
            {
                OnZipCodeIdChanging(value);
                ReportPropertyChanging("ZipCodeId");
                _ZipCodeId = StructuralObject.SetValidValue(value, "ZipCodeId");
                ReportPropertyChanged("ZipCodeId");
                OnZipCodeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ZipCodeId;
        partial void OnZipCodeIdChanging(Nullable<global::System.Int32> value);
        partial void OnZipCodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_Carrier", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierLocation_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierLocation_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_CarrierLocation_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("CRMModel.FK_CarrierLocation_Carrier", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_CityMaster", "CityMaster")]
        public CityMaster CityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.FK_CarrierLocation_CityMaster", "CityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.FK_CarrierLocation_CityMaster", "CityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityMaster> CityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.FK_CarrierLocation_CityMaster", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityMaster>("CRMModel.FK_CarrierLocation_CityMaster", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_StateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_CarrierLocation_StateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_CarrierLocation_StateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_CarrierLocation_StateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.FK_CarrierLocation_StateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_CountryMaster", "CountryMaster")]
        public CountryMaster CountryMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("CRMModel.FK_CarrierLocation_CountryMaster", "CountryMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("CRMModel.FK_CarrierLocation_CountryMaster", "CountryMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryMaster> CountryMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryMaster>("CRMModel.FK_CarrierLocation_CountryMaster", "CountryMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryMaster>("CRMModel.FK_CarrierLocation_CountryMaster", "CountryMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CityMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CityMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CityMaster object.
        /// </summary>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        public static CityMaster CreateCityMaster(global::System.Int32 cityId, global::System.String cityName, global::System.Int32 stateId)
        {
            CityMaster cityMaster = new CityMaster();
            cityMaster.CityId = cityId;
            cityMaster.CityName = cityName;
            cityMaster.StateId = stateId;
            return cityMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value, "CityId");
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineInfo
        {
            get
            {
                return _UpdateMachineInfo;
            }
            set
            {
                OnUpdateMachineInfoChanging(value);
                ReportPropertyChanging("UpdateMachineInfo");
                _UpdateMachineInfo = StructuralObject.SetValidValue(value, true, "UpdateMachineInfo");
                ReportPropertyChanged("UpdateMachineInfo");
                OnUpdateMachineInfoChanged();
            }
        }
        private global::System.String _UpdateMachineInfo;
        partial void OnUpdateMachineInfoChanging(global::System.String value);
        partial void OnUpdateMachineInfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CityMaster_StateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_CityMaster_StateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_CityMaster_StateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_CityMaster_StateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.FK_CityMaster_StateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Client_CityMaster", "Client")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("CRMModel.FK_Client_CityMaster", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("CRMModel.FK_Client_CityMaster", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Mortgagee_CityMaster", "Mortgagee")]
        public EntityCollection<Mortgagee> Mortgagees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Mortgagee>("CRMModel.fk_Mortgagee_CityMaster", "Mortgagee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Mortgagee>("CRMModel.fk_Mortgagee_CityMaster", "Mortgagee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolictyCityMaster", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolictyCityMaster", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolictyCityMaster", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_CityMaster", "Carrier")]
        public EntityCollection<Carrier> Carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carrier>("CRMModel.fk_Carrier_CityMaster", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carrier>("CRMModel.fk_Carrier_CityMaster", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_CityMaster", "CarrierLocation")]
        public EntityCollection<CarrierLocation> CarrierLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_CityMaster", "CarrierLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_CityMaster", "CarrierLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Contact_CityMaster", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("CRMModel.fk_Contact_CityMaster", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("CRMModel.fk_Contact_CityMaster", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadCityId", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadCityId", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadCityId", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Claim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Claim : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Claim object.
        /// </summary>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        public static Claim CreateClaim(global::System.Int32 claimID, global::System.Int32 policyID)
        {
            Claim claim = new Claim();
            claim.ClaimID = claimID;
            claim.PolicyID = policyID;
            return claim;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                if (_ClaimID != value)
                {
                    OnClaimIDChanging(value);
                    ReportPropertyChanging("ClaimID");
                    _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                    ReportPropertyChanged("ClaimID");
                    OnClaimIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubStatusID
        {
            get
            {
                return _SubStatusID;
            }
            set
            {
                OnSubStatusIDChanging(value);
                ReportPropertyChanging("SubStatusID");
                _SubStatusID = StructuralObject.SetValidValue(value, "SubStatusID");
                ReportPropertyChanged("SubStatusID");
                OnSubStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubStatusID;
        partial void OnSubStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterClaimNumber
        {
            get
            {
                return _AdjusterClaimNumber;
            }
            set
            {
                OnAdjusterClaimNumberChanging(value);
                ReportPropertyChanging("AdjusterClaimNumber");
                _AdjusterClaimNumber = StructuralObject.SetValidValue(value, true, "AdjusterClaimNumber");
                ReportPropertyChanged("AdjusterClaimNumber");
                OnAdjusterClaimNumberChanged();
            }
        }
        private global::System.String _AdjusterClaimNumber;
        partial void OnAdjusterClaimNumberChanging(global::System.String value);
        partial void OnAdjusterClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupervisorID
        {
            get
            {
                return _SupervisorID;
            }
            set
            {
                OnSupervisorIDChanging(value);
                ReportPropertyChanging("SupervisorID");
                _SupervisorID = StructuralObject.SetValidValue(value, "SupervisorID");
                ReportPropertyChanged("SupervisorID");
                OnSupervisorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupervisorID;
        partial void OnSupervisorIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupervisorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TeamLeadID
        {
            get
            {
                return _TeamLeadID;
            }
            set
            {
                OnTeamLeadIDChanging(value);
                ReportPropertyChanging("TeamLeadID");
                _TeamLeadID = StructuralObject.SetValidValue(value, "TeamLeadID");
                ReportPropertyChanged("TeamLeadID");
                OnTeamLeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TeamLeadID;
        partial void OnTeamLeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnTeamLeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = StructuralObject.SetValidValue(value, "ManagerID");
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerID;
        partial void OnManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerEntityID
        {
            get
            {
                return _ManagerEntityID;
            }
            set
            {
                OnManagerEntityIDChanging(value);
                ReportPropertyChanging("ManagerEntityID");
                _ManagerEntityID = StructuralObject.SetValidValue(value, "ManagerEntityID");
                ReportPropertyChanged("ManagerEntityID");
                OnManagerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerEntityID;
        partial void OnManagerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeverityNumber
        {
            get
            {
                return _SeverityNumber;
            }
            set
            {
                OnSeverityNumberChanging(value);
                ReportPropertyChanging("SeverityNumber");
                _SeverityNumber = StructuralObject.SetValidValue(value, "SeverityNumber");
                ReportPropertyChanged("SeverityNumber");
                OnSeverityNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _SeverityNumber;
        partial void OnSeverityNumberChanging(Nullable<global::System.Int32> value);
        partial void OnSeverityNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, true, "EventType");
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventName
        {
            get
            {
                return _EventName;
            }
            set
            {
                OnEventNameChanging(value);
                ReportPropertyChanging("EventName");
                _EventName = StructuralObject.SetValidValue(value, true, "EventName");
                ReportPropertyChanged("EventName");
                OnEventNameChanged();
            }
        }
        private global::System.String _EventName;
        partial void OnEventNameChanging(global::System.String value);
        partial void OnEventNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimWorkflowType
        {
            get
            {
                return _ClaimWorkflowType;
            }
            set
            {
                OnClaimWorkflowTypeChanging(value);
                ReportPropertyChanging("ClaimWorkflowType");
                _ClaimWorkflowType = StructuralObject.SetValidValue(value, true, "ClaimWorkflowType");
                ReportPropertyChanged("ClaimWorkflowType");
                OnClaimWorkflowTypeChanged();
            }
        }
        private global::System.String _ClaimWorkflowType;
        partial void OnClaimWorkflowTypeChanging(global::System.String value);
        partial void OnClaimWorkflowTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CauseOfLoss
        {
            get
            {
                return _CauseOfLoss;
            }
            set
            {
                OnCauseOfLossChanging(value);
                ReportPropertyChanging("CauseOfLoss");
                _CauseOfLoss = StructuralObject.SetValidValue(value, true, "CauseOfLoss");
                ReportPropertyChanged("CauseOfLoss");
                OnCauseOfLossChanged();
            }
        }
        private global::System.String _CauseOfLoss;
        partial void OnCauseOfLossChanging(global::System.String value);
        partial void OnCauseOfLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LossDate
        {
            get
            {
                return _LossDate;
            }
            set
            {
                OnLossDateChanging(value);
                ReportPropertyChanging("LossDate");
                _LossDate = StructuralObject.SetValidValue(value, "LossDate");
                ReportPropertyChanged("LossDate");
                OnLossDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LossDate;
        partial void OnLossDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLossDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOpenedReported
        {
            get
            {
                return _DateOpenedReported;
            }
            set
            {
                OnDateOpenedReportedChanging(value);
                ReportPropertyChanging("DateOpenedReported");
                _DateOpenedReported = StructuralObject.SetValidValue(value, "DateOpenedReported");
                ReportPropertyChanged("DateOpenedReported");
                OnDateOpenedReportedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOpenedReported;
        partial void OnDateOpenedReportedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOpenedReportedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInitialReserveChange
        {
            get
            {
                return _DateInitialReserveChange;
            }
            set
            {
                OnDateInitialReserveChangeChanging(value);
                ReportPropertyChanging("DateInitialReserveChange");
                _DateInitialReserveChange = StructuralObject.SetValidValue(value, "DateInitialReserveChange");
                ReportPropertyChanged("DateInitialReserveChange");
                OnDateInitialReserveChangeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInitialReserveChange;
        partial void OnDateInitialReserveChangeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInitialReserveChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAssigned
        {
            get
            {
                return _DateAssigned;
            }
            set
            {
                OnDateAssignedChanging(value);
                ReportPropertyChanging("DateAssigned");
                _DateAssigned = StructuralObject.SetValidValue(value, "DateAssigned");
                ReportPropertyChanged("DateAssigned");
                OnDateAssignedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAssigned;
        partial void OnDateAssignedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAssignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAcknowledged
        {
            get
            {
                return _DateAcknowledged;
            }
            set
            {
                OnDateAcknowledgedChanging(value);
                ReportPropertyChanging("DateAcknowledged");
                _DateAcknowledged = StructuralObject.SetValidValue(value, "DateAcknowledged");
                ReportPropertyChanged("DateAcknowledged");
                OnDateAcknowledgedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAcknowledged;
        partial void OnDateAcknowledgedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAcknowledgedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFirstContactAttempt
        {
            get
            {
                return _DateFirstContactAttempt;
            }
            set
            {
                OnDateFirstContactAttemptChanging(value);
                ReportPropertyChanging("DateFirstContactAttempt");
                _DateFirstContactAttempt = StructuralObject.SetValidValue(value, "DateFirstContactAttempt");
                ReportPropertyChanged("DateFirstContactAttempt");
                OnDateFirstContactAttemptChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFirstContactAttempt;
        partial void OnDateFirstContactAttemptChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFirstContactAttemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateContacted
        {
            get
            {
                return _DateContacted;
            }
            set
            {
                OnDateContactedChanging(value);
                ReportPropertyChanging("DateContacted");
                _DateContacted = StructuralObject.SetValidValue(value, "DateContacted");
                ReportPropertyChanged("DateContacted");
                OnDateContactedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateContacted;
        partial void OnDateContactedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateContactedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInspectionScheduled
        {
            get
            {
                return _DateInspectionScheduled;
            }
            set
            {
                OnDateInspectionScheduledChanging(value);
                ReportPropertyChanging("DateInspectionScheduled");
                _DateInspectionScheduled = StructuralObject.SetValidValue(value, "DateInspectionScheduled");
                ReportPropertyChanged("DateInspectionScheduled");
                OnDateInspectionScheduledChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInspectionScheduled;
        partial void OnDateInspectionScheduledChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInspectionScheduledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInspectionCompleted
        {
            get
            {
                return _DateInspectionCompleted;
            }
            set
            {
                OnDateInspectionCompletedChanging(value);
                ReportPropertyChanging("DateInspectionCompleted");
                _DateInspectionCompleted = StructuralObject.SetValidValue(value, "DateInspectionCompleted");
                ReportPropertyChanged("DateInspectionCompleted");
                OnDateInspectionCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInspectionCompleted;
        partial void OnDateInspectionCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInspectionCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSubmitted
        {
            get
            {
                return _DateSubmitted;
            }
            set
            {
                OnDateSubmittedChanging(value);
                ReportPropertyChanging("DateSubmitted");
                _DateSubmitted = StructuralObject.SetValidValue(value, "DateSubmitted");
                ReportPropertyChanged("DateSubmitted");
                OnDateSubmittedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSubmitted;
        partial void OnDateSubmittedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSubmittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateIndemnityPaymentRequested
        {
            get
            {
                return _DateIndemnityPaymentRequested;
            }
            set
            {
                OnDateIndemnityPaymentRequestedChanging(value);
                ReportPropertyChanging("DateIndemnityPaymentRequested");
                _DateIndemnityPaymentRequested = StructuralObject.SetValidValue(value, "DateIndemnityPaymentRequested");
                ReportPropertyChanged("DateIndemnityPaymentRequested");
                OnDateIndemnityPaymentRequestedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateIndemnityPaymentRequested;
        partial void OnDateIndemnityPaymentRequestedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateIndemnityPaymentRequestedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateIndemnityPaymentApproved
        {
            get
            {
                return _DateIndemnityPaymentApproved;
            }
            set
            {
                OnDateIndemnityPaymentApprovedChanging(value);
                ReportPropertyChanging("DateIndemnityPaymentApproved");
                _DateIndemnityPaymentApproved = StructuralObject.SetValidValue(value, "DateIndemnityPaymentApproved");
                ReportPropertyChanged("DateIndemnityPaymentApproved");
                OnDateIndemnityPaymentApprovedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateIndemnityPaymentApproved;
        partial void OnDateIndemnityPaymentApprovedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateIndemnityPaymentApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateIndemnityPaymentIssued
        {
            get
            {
                return _DateIndemnityPaymentIssued;
            }
            set
            {
                OnDateIndemnityPaymentIssuedChanging(value);
                ReportPropertyChanging("DateIndemnityPaymentIssued");
                _DateIndemnityPaymentIssued = StructuralObject.SetValidValue(value, "DateIndemnityPaymentIssued");
                ReportPropertyChanged("DateIndemnityPaymentIssued");
                OnDateIndemnityPaymentIssuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateIndemnityPaymentIssued;
        partial void OnDateIndemnityPaymentIssuedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateIndemnityPaymentIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClosed
        {
            get
            {
                return _DateClosed;
            }
            set
            {
                OnDateClosedChanging(value);
                ReportPropertyChanging("DateClosed");
                _DateClosed = StructuralObject.SetValidValue(value, "DateClosed");
                ReportPropertyChanged("DateClosed");
                OnDateClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClosed;
        partial void OnDateClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFirstReOpened
        {
            get
            {
                return _DateFirstReOpened;
            }
            set
            {
                OnDateFirstReOpenedChanging(value);
                ReportPropertyChanging("DateFirstReOpened");
                _DateFirstReOpened = StructuralObject.SetValidValue(value, "DateFirstReOpened");
                ReportPropertyChanged("DateFirstReOpened");
                OnDateFirstReOpenedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFirstReOpened;
        partial void OnDateFirstReOpenedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFirstReOpenedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReopenCompleted
        {
            get
            {
                return _DateReopenCompleted;
            }
            set
            {
                OnDateReopenCompletedChanging(value);
                ReportPropertyChanging("DateReopenCompleted");
                _DateReopenCompleted = StructuralObject.SetValidValue(value, "DateReopenCompleted");
                ReportPropertyChanged("DateReopenCompleted");
                OnDateReopenCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReopenCompleted;
        partial void OnDateReopenCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReopenCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFinalClosed
        {
            get
            {
                return _DateFinalClosed;
            }
            set
            {
                OnDateFinalClosedChanging(value);
                ReportPropertyChanging("DateFinalClosed");
                _DateFinalClosed = StructuralObject.SetValidValue(value, "DateFinalClosed");
                ReportPropertyChanged("DateFinalClosed");
                OnDateFinalClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFinalClosed;
        partial void OnDateFinalClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFinalClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyFormType
        {
            get
            {
                return _PolicyFormType;
            }
            set
            {
                OnPolicyFormTypeChanging(value);
                ReportPropertyChanging("PolicyFormType");
                _PolicyFormType = StructuralObject.SetValidValue(value, true, "PolicyFormType");
                ReportPropertyChanged("PolicyFormType");
                OnPolicyFormTypeChanged();
            }
        }
        private global::System.String _PolicyFormType;
        partial void OnPolicyFormTypeChanging(global::System.String value);
        partial void OnPolicyFormTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsInvoiced
        {
            get
            {
                return _IsInvoiced;
            }
            set
            {
                OnIsInvoicedChanging(value);
                ReportPropertyChanging("IsInvoiced");
                _IsInvoiced = StructuralObject.SetValidValue(value, "IsInvoiced");
                ReportPropertyChanged("IsInvoiced");
                OnIsInvoicedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsInvoiced;
        partial void OnIsInvoicedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsInvoicedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeeInvoiceDesignation
        {
            get
            {
                return _FeeInvoiceDesignation;
            }
            set
            {
                OnFeeInvoiceDesignationChanging(value);
                ReportPropertyChanging("FeeInvoiceDesignation");
                _FeeInvoiceDesignation = StructuralObject.SetValidValue(value, "FeeInvoiceDesignation");
                ReportPropertyChanged("FeeInvoiceDesignation");
                OnFeeInvoiceDesignationChanged();
            }
        }
        private Nullable<global::System.Int32> _FeeInvoiceDesignation;
        partial void OnFeeInvoiceDesignationChanging(Nullable<global::System.Int32> value);
        partial void OnFeeInvoiceDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossLossPayable
        {
            get
            {
                return _GrossLossPayable;
            }
            set
            {
                OnGrossLossPayableChanging(value);
                ReportPropertyChanging("GrossLossPayable");
                _GrossLossPayable = StructuralObject.SetValidValue(value, "GrossLossPayable");
                ReportPropertyChanged("GrossLossPayable");
                OnGrossLossPayableChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossLossPayable;
        partial void OnGrossLossPayableChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossLossPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Depreciation
        {
            get
            {
                return _Depreciation;
            }
            set
            {
                OnDepreciationChanging(value);
                ReportPropertyChanging("Depreciation");
                _Depreciation = StructuralObject.SetValidValue(value, "Depreciation");
                ReportPropertyChanged("Depreciation");
                OnDepreciationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Depreciation;
        partial void OnDepreciationChanging(Nullable<global::System.Decimal> value);
        partial void OnDepreciationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Deductible
        {
            get
            {
                return _Deductible;
            }
            set
            {
                OnDeductibleChanging(value);
                ReportPropertyChanging("Deductible");
                _Deductible = StructuralObject.SetValidValue(value, "Deductible");
                ReportPropertyChanged("Deductible");
                OnDeductibleChanged();
            }
        }
        private Nullable<global::System.Decimal> _Deductible;
        partial void OnDeductibleChanging(Nullable<global::System.Decimal> value);
        partial void OnDeductibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OutstandingIndemnityReserve
        {
            get
            {
                return _OutstandingIndemnityReserve;
            }
            set
            {
                OnOutstandingIndemnityReserveChanging(value);
                ReportPropertyChanging("OutstandingIndemnityReserve");
                _OutstandingIndemnityReserve = StructuralObject.SetValidValue(value, "OutstandingIndemnityReserve");
                ReportPropertyChanged("OutstandingIndemnityReserve");
                OnOutstandingIndemnityReserveChanged();
            }
        }
        private Nullable<global::System.Decimal> _OutstandingIndemnityReserve;
        partial void OnOutstandingIndemnityReserveChanging(Nullable<global::System.Decimal> value);
        partial void OnOutstandingIndemnityReserveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OutstandingLAEReserves
        {
            get
            {
                return _OutstandingLAEReserves;
            }
            set
            {
                OnOutstandingLAEReservesChanging(value);
                ReportPropertyChanging("OutstandingLAEReserves");
                _OutstandingLAEReserves = StructuralObject.SetValidValue(value, "OutstandingLAEReserves");
                ReportPropertyChanged("OutstandingLAEReserves");
                OnOutstandingLAEReservesChanged();
            }
        }
        private Nullable<global::System.Decimal> _OutstandingLAEReserves;
        partial void OnOutstandingLAEReservesChanging(Nullable<global::System.Decimal> value);
        partial void OnOutstandingLAEReservesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalIndemnityPaid
        {
            get
            {
                return _TotalIndemnityPaid;
            }
            set
            {
                OnTotalIndemnityPaidChanging(value);
                ReportPropertyChanging("TotalIndemnityPaid");
                _TotalIndemnityPaid = StructuralObject.SetValidValue(value, "TotalIndemnityPaid");
                ReportPropertyChanged("TotalIndemnityPaid");
                OnTotalIndemnityPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalIndemnityPaid;
        partial void OnTotalIndemnityPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalIndemnityPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CoverageAPaid
        {
            get
            {
                return _CoverageAPaid;
            }
            set
            {
                OnCoverageAPaidChanging(value);
                ReportPropertyChanging("CoverageAPaid");
                _CoverageAPaid = StructuralObject.SetValidValue(value, "CoverageAPaid");
                ReportPropertyChanged("CoverageAPaid");
                OnCoverageAPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _CoverageAPaid;
        partial void OnCoverageAPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnCoverageAPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CoverageBPaid
        {
            get
            {
                return _CoverageBPaid;
            }
            set
            {
                OnCoverageBPaidChanging(value);
                ReportPropertyChanging("CoverageBPaid");
                _CoverageBPaid = StructuralObject.SetValidValue(value, "CoverageBPaid");
                ReportPropertyChanged("CoverageBPaid");
                OnCoverageBPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _CoverageBPaid;
        partial void OnCoverageBPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnCoverageBPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CoverageCPaid
        {
            get
            {
                return _CoverageCPaid;
            }
            set
            {
                OnCoverageCPaidChanging(value);
                ReportPropertyChanging("CoverageCPaid");
                _CoverageCPaid = StructuralObject.SetValidValue(value, "CoverageCPaid");
                ReportPropertyChanged("CoverageCPaid");
                OnCoverageCPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _CoverageCPaid;
        partial void OnCoverageCPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnCoverageCPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CoverageDPaid
        {
            get
            {
                return _CoverageDPaid;
            }
            set
            {
                OnCoverageDPaidChanging(value);
                ReportPropertyChanging("CoverageDPaid");
                _CoverageDPaid = StructuralObject.SetValidValue(value, "CoverageDPaid");
                ReportPropertyChanged("CoverageDPaid");
                OnCoverageDPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _CoverageDPaid;
        partial void OnCoverageDPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnCoverageDPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalExpensesPaid
        {
            get
            {
                return _TotalExpensesPaid;
            }
            set
            {
                OnTotalExpensesPaidChanging(value);
                ReportPropertyChanging("TotalExpensesPaid");
                _TotalExpensesPaid = StructuralObject.SetValidValue(value, "TotalExpensesPaid");
                ReportPropertyChanged("TotalExpensesPaid");
                OnTotalExpensesPaidChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalExpensesPaid;
        partial void OnTotalExpensesPaidChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalExpensesPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetClaimPayable
        {
            get
            {
                return _NetClaimPayable;
            }
            set
            {
                OnNetClaimPayableChanging(value);
                ReportPropertyChanging("NetClaimPayable");
                _NetClaimPayable = StructuralObject.SetValidValue(value, "NetClaimPayable");
                ReportPropertyChanged("NetClaimPayable");
                OnNetClaimPayableChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetClaimPayable;
        partial void OnNetClaimPayableChanging(Nullable<global::System.Decimal> value);
        partial void OnNetClaimPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCompleted
        {
            get
            {
                return _DateCompleted;
            }
            set
            {
                OnDateCompletedChanging(value);
                ReportPropertyChanging("DateCompleted");
                _DateCompleted = StructuralObject.SetValidValue(value, "DateCompleted");
                ReportPropertyChanged("DateCompleted");
                OnDateCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCompleted;
        partial void OnDateCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFirstClosed
        {
            get
            {
                return _DateFirstClosed;
            }
            set
            {
                OnDateFirstClosedChanging(value);
                ReportPropertyChanging("DateFirstClosed");
                _DateFirstClosed = StructuralObject.SetValidValue(value, "DateFirstClosed");
                ReportPropertyChanged("DateFirstClosed");
                OnDateFirstClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFirstClosed;
        partial void OnDateFirstClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFirstClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsInvoiceReady
        {
            get
            {
                return _IsInvoiceReady;
            }
            set
            {
                OnIsInvoiceReadyChanging(value);
                ReportPropertyChanging("IsInvoiceReady");
                _IsInvoiceReady = StructuralObject.SetValidValue(value, "IsInvoiceReady");
                ReportPropertyChanged("IsInvoiceReady");
                OnIsInvoiceReadyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsInvoiceReady;
        partial void OnIsInvoiceReadyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsInvoiceReadyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DamageType
        {
            get
            {
                return _DamageType;
            }
            set
            {
                OnDamageTypeChanging(value);
                ReportPropertyChanging("DamageType");
                _DamageType = StructuralObject.SetValidValue(value, true, "DamageType");
                ReportPropertyChanged("DamageType");
                OnDamageTypeChanged();
            }
        }
        private global::System.String _DamageType;
        partial void OnDamageTypeChanging(global::System.String value);
        partial void OnDamageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CasualtyFeeInvoiceDesignation
        {
            get
            {
                return _CasualtyFeeInvoiceDesignation;
            }
            set
            {
                OnCasualtyFeeInvoiceDesignationChanging(value);
                ReportPropertyChanging("CasualtyFeeInvoiceDesignation");
                _CasualtyFeeInvoiceDesignation = StructuralObject.SetValidValue(value, "CasualtyFeeInvoiceDesignation");
                ReportPropertyChanged("CasualtyFeeInvoiceDesignation");
                OnCasualtyFeeInvoiceDesignationChanged();
            }
        }
        private Nullable<global::System.Int32> _CasualtyFeeInvoiceDesignation;
        partial void OnCasualtyFeeInvoiceDesignationChanging(Nullable<global::System.Int32> value);
        partial void OnCasualtyFeeInvoiceDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CasualtyGrossClaimPayable
        {
            get
            {
                return _CasualtyGrossClaimPayable;
            }
            set
            {
                OnCasualtyGrossClaimPayableChanging(value);
                ReportPropertyChanging("CasualtyGrossClaimPayable");
                _CasualtyGrossClaimPayable = StructuralObject.SetValidValue(value, "CasualtyGrossClaimPayable");
                ReportPropertyChanged("CasualtyGrossClaimPayable");
                OnCasualtyGrossClaimPayableChanged();
            }
        }
        private Nullable<global::System.Decimal> _CasualtyGrossClaimPayable;
        partial void OnCasualtyGrossClaimPayableChanging(Nullable<global::System.Decimal> value);
        partial void OnCasualtyGrossClaimPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsurerClaimNumber
        {
            get
            {
                return _InsurerClaimNumber;
            }
            set
            {
                OnInsurerClaimNumberChanging(value);
                ReportPropertyChanging("InsurerClaimNumber");
                _InsurerClaimNumber = StructuralObject.SetValidValue(value, true, "InsurerClaimNumber");
                ReportPropertyChanged("InsurerClaimNumber");
                OnInsurerClaimNumberChanged();
            }
        }
        private global::System.String _InsurerClaimNumber;
        partial void OnInsurerClaimNumberChanging(global::System.String value);
        partial void OnInsurerClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastStatusUpdate
        {
            get
            {
                return _LastStatusUpdate;
            }
            set
            {
                OnLastStatusUpdateChanging(value);
                ReportPropertyChanging("LastStatusUpdate");
                _LastStatusUpdate = StructuralObject.SetValidValue(value, "LastStatusUpdate");
                ReportPropertyChanged("LastStatusUpdate");
                OnLastStatusUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastStatusUpdate;
        partial void OnLastStatusUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastStatusUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEstimateUploaded
        {
            get
            {
                return _DateEstimateUploaded;
            }
            set
            {
                OnDateEstimateUploadedChanging(value);
                ReportPropertyChanging("DateEstimateUploaded");
                _DateEstimateUploaded = StructuralObject.SetValidValue(value, "DateEstimateUploaded");
                ReportPropertyChanged("DateEstimateUploaded");
                OnDateEstimateUploadedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEstimateUploaded;
        partial void OnDateEstimateUploadedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEstimateUploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CycleTime
        {
            get
            {
                return _CycleTime;
            }
            set
            {
                OnCycleTimeChanging(value);
                ReportPropertyChanging("CycleTime");
                _CycleTime = StructuralObject.SetValidValue(value, "CycleTime");
                ReportPropertyChanged("CycleTime");
                OnCycleTimeChanged();
            }
        }
        private Nullable<global::System.Decimal> _CycleTime;
        partial void OnCycleTimeChanging(Nullable<global::System.Decimal> value);
        partial void OnCycleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReopenCycleTime
        {
            get
            {
                return _ReopenCycleTime;
            }
            set
            {
                OnReopenCycleTimeChanging(value);
                ReportPropertyChanging("ReopenCycleTime");
                _ReopenCycleTime = StructuralObject.SetValidValue(value, "ReopenCycleTime");
                ReportPropertyChanged("ReopenCycleTime");
                OnReopenCycleTimeChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReopenCycleTime;
        partial void OnReopenCycleTimeChanging(Nullable<global::System.Decimal> value);
        partial void OnReopenCycleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutsideAdjusterID
        {
            get
            {
                return _OutsideAdjusterID;
            }
            set
            {
                OnOutsideAdjusterIDChanging(value);
                ReportPropertyChanging("OutsideAdjusterID");
                _OutsideAdjusterID = StructuralObject.SetValidValue(value, "OutsideAdjusterID");
                ReportPropertyChanged("OutsideAdjusterID");
                OnOutsideAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OutsideAdjusterID;
        partial void OnOutsideAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnOutsideAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContentAdjusterID
        {
            get
            {
                return _ContentAdjusterID;
            }
            set
            {
                OnContentAdjusterIDChanging(value);
                ReportPropertyChanging("ContentAdjusterID");
                _ContentAdjusterID = StructuralObject.SetValidValue(value, "ContentAdjusterID");
                ReportPropertyChanged("ContentAdjusterID");
                OnContentAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContentAdjusterID;
        partial void OnContentAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnContentAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExaminerID
        {
            get
            {
                return _ExaminerID;
            }
            set
            {
                OnExaminerIDChanging(value);
                ReportPropertyChanging("ExaminerID");
                _ExaminerID = StructuralObject.SetValidValue(value, "ExaminerID");
                ReportPropertyChanged("ExaminerID");
                OnExaminerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ExaminerID;
        partial void OnExaminerIDChanging(Nullable<global::System.Int32> value);
        partial void OnExaminerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyBuilderID
        {
            get
            {
                return _CompanyBuilderID;
            }
            set
            {
                OnCompanyBuilderIDChanging(value);
                ReportPropertyChanging("CompanyBuilderID");
                _CompanyBuilderID = StructuralObject.SetValidValue(value, "CompanyBuilderID");
                ReportPropertyChanged("CompanyBuilderID");
                OnCompanyBuilderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyBuilderID;
        partial void OnCompanyBuilderIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyBuilderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyInventoryID
        {
            get
            {
                return _CompanyInventoryID;
            }
            set
            {
                OnCompanyInventoryIDChanging(value);
                ReportPropertyChanging("CompanyInventoryID");
                _CompanyInventoryID = StructuralObject.SetValidValue(value, "CompanyInventoryID");
                ReportPropertyChanged("CompanyInventoryID");
                OnCompanyInventoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyInventoryID;
        partial void OnCompanyInventoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyInventoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OurBuilderID
        {
            get
            {
                return _OurBuilderID;
            }
            set
            {
                OnOurBuilderIDChanging(value);
                ReportPropertyChanging("OurBuilderID");
                _OurBuilderID = StructuralObject.SetValidValue(value, "OurBuilderID");
                ReportPropertyChanged("OurBuilderID");
                OnOurBuilderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OurBuilderID;
        partial void OnOurBuilderIDChanging(Nullable<global::System.Int32> value);
        partial void OnOurBuilderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InventoryCompanyID
        {
            get
            {
                return _InventoryCompanyID;
            }
            set
            {
                OnInventoryCompanyIDChanging(value);
                ReportPropertyChanging("InventoryCompanyID");
                _InventoryCompanyID = StructuralObject.SetValidValue(value, "InventoryCompanyID");
                ReportPropertyChanged("InventoryCompanyID");
                OnInventoryCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InventoryCompanyID;
        partial void OnInventoryCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnInventoryCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                OnCarrierInvoiceProfileIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileID");
                _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                ReportPropertyChanged("CarrierInvoiceProfileID");
                OnCarrierInvoiceProfileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierInvoiceProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProgressStatusID
        {
            get
            {
                return _ProgressStatusID;
            }
            set
            {
                OnProgressStatusIDChanging(value);
                ReportPropertyChanging("ProgressStatusID");
                _ProgressStatusID = StructuralObject.SetValidValue(value, "ProgressStatusID");
                ReportPropertyChanged("ProgressStatusID");
                OnProgressStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProgressStatusID;
        partial void OnProgressStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnProgressStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastProgressChanged
        {
            get
            {
                return _LastProgressChanged;
            }
            set
            {
                OnLastProgressChangedChanging(value);
                ReportPropertyChanging("LastProgressChanged");
                _LastProgressChanged = StructuralObject.SetValidValue(value, "LastProgressChanged");
                ReportPropertyChanged("LastProgressChanged");
                OnLastProgressChangedChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastProgressChanged;
        partial void OnLastProgressChangedChanging(Nullable<global::System.DateTime> value);
        partial void OnLastProgressChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XactNetTransactionID
        {
            get
            {
                return _XactNetTransactionID;
            }
            set
            {
                OnXactNetTransactionIDChanging(value);
                ReportPropertyChanging("XactNetTransactionID");
                _XactNetTransactionID = StructuralObject.SetValidValue(value, true, "XactNetTransactionID");
                ReportPropertyChanged("XactNetTransactionID");
                OnXactNetTransactionIDChanged();
            }
        }
        private global::System.String _XactNetTransactionID;
        partial void OnXactNetTransactionIDChanging(global::System.String value);
        partial void OnXactNetTransactionIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_Claim_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_Claim_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_Claim_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_Claim_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_LeadPolicy", "LeadPolicy")]
        public LeadPolicy LeadPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_Claim_LeadPolicy", "LeadPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_Claim_LeadPolicy", "LeadPolicy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicy> LeadPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_Claim_LeadPolicy", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicy>("CRMModel.FK_Claim_LeadPolicy", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_StatusMaster", "StatusMaster")]
        public StatusMaster StatusMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.FK_Claim_StatusMaster", "StatusMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.FK_Claim_StatusMaster", "StatusMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusMaster> StatusMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.FK_Claim_StatusMaster", "StatusMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusMaster>("CRMModel.FK_Claim_StatusMaster", "StatusMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_SubStatusMaster", "SubStatusMaster")]
        public SubStatusMaster SubStatusMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.FK_Claim_SubStatusMaster", "SubStatusMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.FK_Claim_SubStatusMaster", "SubStatusMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubStatusMaster> SubStatusMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.FK_Claim_SubStatusMaster", "SubStatusMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubStatusMaster>("CRMModel.FK_Claim_SubStatusMaster", "SubStatusMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimComment_Claim", "ClaimComment")]
        public EntityCollection<ClaimComment> ClaimComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimComment>("CRMModel.FK_ClaimComment_Claim", "ClaimComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimComment>("CRMModel.FK_ClaimComment_Claim", "ClaimComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimDocument_Claim", "ClaimDocument")]
        public EntityCollection<ClaimDocument> ClaimDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimDocument>("CRMModel.FK_ClaimDocument_Claim", "ClaimDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimDocument>("CRMModel.FK_ClaimDocument_Claim", "ClaimDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimImage_Claim", "ClaimImage")]
        public EntityCollection<ClaimImage> ClaimImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimImage>("CRMModel.FK_ClaimImage_Claim", "ClaimImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimImage>("CRMModel.FK_ClaimImage_Claim", "ClaimImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimLimit_Claim", "ClaimLimit")]
        public EntityCollection<ClaimLimit> ClaimLimits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimLimit>("CRMModel.FK_ClaimLimit_Claim", "ClaimLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimLimit>("CRMModel.FK_ClaimLimit_Claim", "ClaimLimit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimSubLimit_Claim", "ClaimSubLimit")]
        public EntityCollection<ClaimSubLimit> ClaimSubLimits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimSubLimit>("CRMModel.FK_ClaimSubLimit_Claim", "ClaimSubLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimSubLimit>("CRMModel.FK_ClaimSubLimit_Claim", "ClaimSubLimit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invoice_Claim", "Invoice")]
        public EntityCollection<Invoice> Invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invoice>("CRMModel.FK_Invoice_Claim", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invoice>("CRMModel.FK_Invoice_Claim", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_Contact_Supervisor", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_Claim_Contact_Supervisor", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_Claim_Contact_Supervisor", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_Claim_Contact_Supervisor", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CRMModel.FK_Claim_Contact_Supervisor", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_Claim", "ClaimService")]
        public EntityCollection<ClaimService> ClaimServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_Claim", "ClaimService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_Claim", "ClaimService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimComment object.
        /// </summary>
        /// <param name="commentID">Initial value of the CommentID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="commentText">Initial value of the CommentText property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="commentDate">Initial value of the CommentDate property.</param>
        public static ClaimComment CreateClaimComment(global::System.Int32 commentID, global::System.Int32 claimID, global::System.Int32 userId, global::System.String commentText, global::System.Boolean isActive, global::System.DateTime commentDate)
        {
            ClaimComment claimComment = new ClaimComment();
            claimComment.CommentID = commentID;
            claimComment.ClaimID = claimID;
            claimComment.UserId = userId;
            claimComment.CommentText = commentText;
            claimComment.IsActive = isActive;
            claimComment.CommentDate = commentDate;
            return claimComment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentID
        {
            get
            {
                return _CommentID;
            }
            set
            {
                if (_CommentID != value)
                {
                    OnCommentIDChanging(value);
                    ReportPropertyChanging("CommentID");
                    _CommentID = StructuralObject.SetValidValue(value, "CommentID");
                    ReportPropertyChanged("CommentID");
                    OnCommentIDChanged();
                }
            }
        }
        private global::System.Int32 _CommentID;
        partial void OnCommentIDChanging(global::System.Int32 value);
        partial void OnCommentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommentText
        {
            get
            {
                return _CommentText;
            }
            set
            {
                OnCommentTextChanging(value);
                ReportPropertyChanging("CommentText");
                _CommentText = StructuralObject.SetValidValue(value, false, "CommentText");
                ReportPropertyChanged("CommentText");
                OnCommentTextChanged();
            }
        }
        private global::System.String _CommentText;
        partial void OnCommentTextChanging(global::System.String value);
        partial void OnCommentTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CommentDate
        {
            get
            {
                return _CommentDate;
            }
            set
            {
                OnCommentDateChanging(value);
                ReportPropertyChanging("CommentDate");
                _CommentDate = StructuralObject.SetValidValue(value, "CommentDate");
                ReportPropertyChanged("CommentDate");
                OnCommentDateChanged();
            }
        }
        private global::System.DateTime _CommentDate;
        partial void OnCommentDateChanging(global::System.DateTime value);
        partial void OnCommentDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimComment_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimComment_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimComment_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimComment_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_ClaimComment_SecUser", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimComment_Claim", "Claim")]
        public Claim Claim
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimComment_Claim", "Claim").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimComment_Claim", "Claim").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Claim> ClaimReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimComment_Claim", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Claim>("CRMModel.FK_ClaimComment_Claim", "Claim", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimContact object.
        /// </summary>
        /// <param name="claimContactID">Initial value of the ClaimContactID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static ClaimContact CreateClaimContact(global::System.Int32 claimContactID, global::System.Int32 claimID, global::System.Int32 contactID)
        {
            ClaimContact claimContact = new ClaimContact();
            claimContact.ClaimContactID = claimContactID;
            claimContact.ClaimID = claimID;
            claimContact.ContactID = contactID;
            return claimContact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimContactID
        {
            get
            {
                return _ClaimContactID;
            }
            set
            {
                if (_ClaimContactID != value)
                {
                    OnClaimContactIDChanging(value);
                    ReportPropertyChanging("ClaimContactID");
                    _ClaimContactID = StructuralObject.SetValidValue(value, "ClaimContactID");
                    ReportPropertyChanged("ClaimContactID");
                    OnClaimContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimContactID;
        partial void OnClaimContactIDChanging(global::System.Int32 value);
        partial void OnClaimContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimContact_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_ClaimContact_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_ClaimContact_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_ClaimContact_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CRMModel.FK_ClaimContact_Contact", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimDocument object.
        /// </summary>
        /// <param name="claimDocumentID">Initial value of the ClaimDocumentID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="isPrint">Initial value of the IsPrint property.</param>
        /// <param name="documentDate">Initial value of the DocumentDate property.</param>
        public static ClaimDocument CreateClaimDocument(global::System.Int32 claimDocumentID, global::System.Int32 claimID, global::System.String documentName, global::System.Boolean isPrint, global::System.DateTime documentDate)
        {
            ClaimDocument claimDocument = new ClaimDocument();
            claimDocument.ClaimDocumentID = claimDocumentID;
            claimDocument.ClaimID = claimID;
            claimDocument.DocumentName = documentName;
            claimDocument.IsPrint = isPrint;
            claimDocument.DocumentDate = documentDate;
            return claimDocument;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimDocumentID
        {
            get
            {
                return _ClaimDocumentID;
            }
            set
            {
                if (_ClaimDocumentID != value)
                {
                    OnClaimDocumentIDChanging(value);
                    ReportPropertyChanging("ClaimDocumentID");
                    _ClaimDocumentID = StructuralObject.SetValidValue(value, "ClaimDocumentID");
                    ReportPropertyChanged("ClaimDocumentID");
                    OnClaimDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimDocumentID;
        partial void OnClaimDocumentIDChanging(global::System.Int32 value);
        partial void OnClaimDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrint
        {
            get
            {
                return _IsPrint;
            }
            set
            {
                OnIsPrintChanging(value);
                ReportPropertyChanging("IsPrint");
                _IsPrint = StructuralObject.SetValidValue(value, "IsPrint");
                ReportPropertyChanged("IsPrint");
                OnIsPrintChanged();
            }
        }
        private global::System.Boolean _IsPrint;
        partial void OnIsPrintChanging(global::System.Boolean value);
        partial void OnIsPrintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value, "DocumentDate");
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private global::System.DateTime _DocumentDate;
        partial void OnDocumentDateChanging(global::System.DateTime value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentCategoryID
        {
            get
            {
                return _DocumentCategoryID;
            }
            set
            {
                OnDocumentCategoryIDChanging(value);
                ReportPropertyChanging("DocumentCategoryID");
                _DocumentCategoryID = StructuralObject.SetValidValue(value, "DocumentCategoryID");
                ReportPropertyChanged("DocumentCategoryID");
                OnDocumentCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentCategoryID;
        partial void OnDocumentCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentCategoryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimDocument_Claim", "Claim")]
        public Claim Claim
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimDocument_Claim", "Claim").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimDocument_Claim", "Claim").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Claim> ClaimReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimDocument_Claim", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Claim>("CRMModel.FK_ClaimDocument_Claim", "Claim", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimDocument_DocumentCategory", "DocumentCategory")]
        public DocumentCategory DocumentCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentCategory>("CRMModel.FK_ClaimDocument_DocumentCategory", "DocumentCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentCategory>("CRMModel.FK_ClaimDocument_DocumentCategory", "DocumentCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentCategory> DocumentCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentCategory>("CRMModel.FK_ClaimDocument_DocumentCategory", "DocumentCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentCategory>("CRMModel.FK_ClaimDocument_DocumentCategory", "DocumentCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimExpense")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimExpense : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimExpense object.
        /// </summary>
        /// <param name="claimExpenseID">Initial value of the ClaimExpenseID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="expenseTypeID">Initial value of the ExpenseTypeID property.</param>
        /// <param name="expenseDescription">Initial value of the ExpenseDescription property.</param>
        /// <param name="expenseAmount">Initial value of the ExpenseAmount property.</param>
        /// <param name="isReimbursable">Initial value of the IsReimbursable property.</param>
        public static ClaimExpense CreateClaimExpense(global::System.Int32 claimExpenseID, global::System.Int32 claimID, global::System.Int32 expenseTypeID, global::System.String expenseDescription, global::System.Decimal expenseAmount, global::System.Boolean isReimbursable)
        {
            ClaimExpense claimExpense = new ClaimExpense();
            claimExpense.ClaimExpenseID = claimExpenseID;
            claimExpense.ClaimID = claimID;
            claimExpense.ExpenseTypeID = expenseTypeID;
            claimExpense.ExpenseDescription = expenseDescription;
            claimExpense.ExpenseAmount = expenseAmount;
            claimExpense.IsReimbursable = isReimbursable;
            return claimExpense;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimExpenseID
        {
            get
            {
                return _ClaimExpenseID;
            }
            set
            {
                if (_ClaimExpenseID != value)
                {
                    OnClaimExpenseIDChanging(value);
                    ReportPropertyChanging("ClaimExpenseID");
                    _ClaimExpenseID = StructuralObject.SetValidValue(value, "ClaimExpenseID");
                    ReportPropertyChanged("ClaimExpenseID");
                    OnClaimExpenseIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimExpenseID;
        partial void OnClaimExpenseIDChanging(global::System.Int32 value);
        partial void OnClaimExpenseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseTypeID
        {
            get
            {
                return _ExpenseTypeID;
            }
            set
            {
                OnExpenseTypeIDChanging(value);
                ReportPropertyChanging("ExpenseTypeID");
                _ExpenseTypeID = StructuralObject.SetValidValue(value, "ExpenseTypeID");
                ReportPropertyChanged("ExpenseTypeID");
                OnExpenseTypeIDChanged();
            }
        }
        private global::System.Int32 _ExpenseTypeID;
        partial void OnExpenseTypeIDChanging(global::System.Int32 value);
        partial void OnExpenseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpenseDate
        {
            get
            {
                return _ExpenseDate;
            }
            set
            {
                OnExpenseDateChanging(value);
                ReportPropertyChanging("ExpenseDate");
                _ExpenseDate = StructuralObject.SetValidValue(value, "ExpenseDate");
                ReportPropertyChanged("ExpenseDate");
                OnExpenseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpenseDate;
        partial void OnExpenseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpenseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExpenseDescription
        {
            get
            {
                return _ExpenseDescription;
            }
            set
            {
                OnExpenseDescriptionChanging(value);
                ReportPropertyChanging("ExpenseDescription");
                _ExpenseDescription = StructuralObject.SetValidValue(value, false, "ExpenseDescription");
                ReportPropertyChanged("ExpenseDescription");
                OnExpenseDescriptionChanged();
            }
        }
        private global::System.String _ExpenseDescription;
        partial void OnExpenseDescriptionChanging(global::System.String value);
        partial void OnExpenseDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExpenseAmount
        {
            get
            {
                return _ExpenseAmount;
            }
            set
            {
                OnExpenseAmountChanging(value);
                ReportPropertyChanging("ExpenseAmount");
                _ExpenseAmount = StructuralObject.SetValidValue(value, "ExpenseAmount");
                ReportPropertyChanged("ExpenseAmount");
                OnExpenseAmountChanged();
            }
        }
        private global::System.Decimal _ExpenseAmount;
        partial void OnExpenseAmountChanging(global::System.Decimal value);
        partial void OnExpenseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReimbursable
        {
            get
            {
                return _IsReimbursable;
            }
            set
            {
                OnIsReimbursableChanging(value);
                ReportPropertyChanging("IsReimbursable");
                _IsReimbursable = StructuralObject.SetValidValue(value, "IsReimbursable");
                ReportPropertyChanged("IsReimbursable");
                OnIsReimbursableChanged();
            }
        }
        private global::System.Boolean _IsReimbursable;
        partial void OnIsReimbursableChanging(global::System.Boolean value);
        partial void OnIsReimbursableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExpenseQty
        {
            get
            {
                return _ExpenseQty;
            }
            set
            {
                OnExpenseQtyChanging(value);
                ReportPropertyChanging("ExpenseQty");
                _ExpenseQty = StructuralObject.SetValidValue(value, "ExpenseQty");
                ReportPropertyChanged("ExpenseQty");
                OnExpenseQtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExpenseQty;
        partial void OnExpenseQtyChanging(Nullable<global::System.Decimal> value);
        partial void OnExpenseQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XactNetExpenseCode
        {
            get
            {
                return _XactNetExpenseCode;
            }
            set
            {
                OnXactNetExpenseCodeChanging(value);
                ReportPropertyChanging("XactNetExpenseCode");
                _XactNetExpenseCode = StructuralObject.SetValidValue(value, true, "XactNetExpenseCode");
                ReportPropertyChanged("XactNetExpenseCode");
                OnXactNetExpenseCodeChanged();
            }
        }
        private global::System.String _XactNetExpenseCode;
        partial void OnXactNetExpenseCodeChanging(global::System.String value);
        partial void OnXactNetExpenseCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimExpense_ClaimExpense", "ExpenseType")]
        public ExpenseType ExpenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("CRMModel.FK_ClaimExpense_ClaimExpense", "ExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("CRMModel.FK_ClaimExpense_ClaimExpense", "ExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseType> ExpenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("CRMModel.FK_ClaimExpense_ClaimExpense", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseType>("CRMModel.FK_ClaimExpense_ClaimExpense", "ExpenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimExpense_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimExpense_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimExpense_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimExpense_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimExpense_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimExpense_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimExpense_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimExpense_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimExpense_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_ClaimExpense_SecUser", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimImage object.
        /// </summary>
        /// <param name="claimImageID">Initial value of the ClaimImageID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isPrint">Initial value of the IsPrint property.</param>
        public static ClaimImage CreateClaimImage(global::System.Int32 claimImageID, global::System.Int32 claimID, global::System.Boolean isActive, global::System.Boolean isPrint)
        {
            ClaimImage claimImage = new ClaimImage();
            claimImage.ClaimImageID = claimImageID;
            claimImage.ClaimID = claimID;
            claimImage.IsActive = isActive;
            claimImage.IsPrint = isPrint;
            return claimImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimImageID
        {
            get
            {
                return _ClaimImageID;
            }
            set
            {
                if (_ClaimImageID != value)
                {
                    OnClaimImageIDChanging(value);
                    ReportPropertyChanging("ClaimImageID");
                    _ClaimImageID = StructuralObject.SetValidValue(value, "ClaimImageID");
                    ReportPropertyChanged("ClaimImageID");
                    OnClaimImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimImageID;
        partial void OnClaimImageIDChanging(global::System.Int32 value);
        partial void OnClaimImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, true, "ImageName");
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrint
        {
            get
            {
                return _IsPrint;
            }
            set
            {
                OnIsPrintChanging(value);
                ReportPropertyChanging("IsPrint");
                _IsPrint = StructuralObject.SetValidValue(value, "IsPrint");
                ReportPropertyChanged("IsPrint");
                OnIsPrintChanged();
            }
        }
        private global::System.Boolean _IsPrint;
        partial void OnIsPrintChanging(global::System.Boolean value);
        partial void OnIsPrintChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImageDate
        {
            get
            {
                return _ImageDate;
            }
            set
            {
                OnImageDateChanging(value);
                ReportPropertyChanging("ImageDate");
                _ImageDate = StructuralObject.SetValidValue(value, "ImageDate");
                ReportPropertyChanged("ImageDate");
                OnImageDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ImageDate;
        partial void OnImageDateChanging(Nullable<global::System.DateTime> value);
        partial void OnImageDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimImage_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimImage_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimImage_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimImage_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_ClaimImage_SecUser", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimImage_Claim", "Claim")]
        public Claim Claim
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimImage_Claim", "Claim").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimImage_Claim", "Claim").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Claim> ClaimReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimImage_Claim", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Claim>("CRMModel.FK_ClaimImage_Claim", "Claim", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimLimit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimLimit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimLimit object.
        /// </summary>
        /// <param name="claimLimitID">Initial value of the ClaimLimitID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="limitID">Initial value of the LimitID property.</param>
        public static ClaimLimit CreateClaimLimit(global::System.Int32 claimLimitID, global::System.Int32 claimID, global::System.Int32 limitID)
        {
            ClaimLimit claimLimit = new ClaimLimit();
            claimLimit.ClaimLimitID = claimLimitID;
            claimLimit.ClaimID = claimID;
            claimLimit.LimitID = limitID;
            return claimLimit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimLimitID
        {
            get
            {
                return _ClaimLimitID;
            }
            set
            {
                if (_ClaimLimitID != value)
                {
                    OnClaimLimitIDChanging(value);
                    ReportPropertyChanging("ClaimLimitID");
                    _ClaimLimitID = StructuralObject.SetValidValue(value, "ClaimLimitID");
                    ReportPropertyChanged("ClaimLimitID");
                    OnClaimLimitIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimLimitID;
        partial void OnClaimLimitIDChanging(global::System.Int32 value);
        partial void OnClaimLimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitID
        {
            get
            {
                return _LimitID;
            }
            set
            {
                OnLimitIDChanging(value);
                ReportPropertyChanging("LimitID");
                _LimitID = StructuralObject.SetValidValue(value, "LimitID");
                ReportPropertyChanged("LimitID");
                OnLimitIDChanged();
            }
        }
        private global::System.Int32 _LimitID;
        partial void OnLimitIDChanging(global::System.Int32 value);
        partial void OnLimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LossAmountACV
        {
            get
            {
                return _LossAmountACV;
            }
            set
            {
                OnLossAmountACVChanging(value);
                ReportPropertyChanging("LossAmountACV");
                _LossAmountACV = StructuralObject.SetValidValue(value, "LossAmountACV");
                ReportPropertyChanged("LossAmountACV");
                OnLossAmountACVChanged();
            }
        }
        private Nullable<global::System.Decimal> _LossAmountACV;
        partial void OnLossAmountACVChanging(Nullable<global::System.Decimal> value);
        partial void OnLossAmountACVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LossAmountRCV
        {
            get
            {
                return _LossAmountRCV;
            }
            set
            {
                OnLossAmountRCVChanging(value);
                ReportPropertyChanging("LossAmountRCV");
                _LossAmountRCV = StructuralObject.SetValidValue(value, "LossAmountRCV");
                ReportPropertyChanged("LossAmountRCV");
                OnLossAmountRCVChanged();
            }
        }
        private Nullable<global::System.Decimal> _LossAmountRCV;
        partial void OnLossAmountRCVChanging(Nullable<global::System.Decimal> value);
        partial void OnLossAmountRCVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Depreciation
        {
            get
            {
                return _Depreciation;
            }
            set
            {
                OnDepreciationChanging(value);
                ReportPropertyChanging("Depreciation");
                _Depreciation = StructuralObject.SetValidValue(value, "Depreciation");
                ReportPropertyChanged("Depreciation");
                OnDepreciationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Depreciation;
        partial void OnDepreciationChanging(Nullable<global::System.Decimal> value);
        partial void OnDepreciationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OverageAmount
        {
            get
            {
                return _OverageAmount;
            }
            set
            {
                OnOverageAmountChanging(value);
                ReportPropertyChanging("OverageAmount");
                _OverageAmount = StructuralObject.SetValidValue(value, "OverageAmount");
                ReportPropertyChanged("OverageAmount");
                OnOverageAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _OverageAmount;
        partial void OnOverageAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnOverageAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimLimit_Limit", "Limit")]
        public Limit Limit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Limit>("CRMModel.FK_ClaimLimit_Limit", "Limit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Limit>("CRMModel.FK_ClaimLimit_Limit", "Limit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Limit> LimitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Limit>("CRMModel.FK_ClaimLimit_Limit", "Limit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Limit>("CRMModel.FK_ClaimLimit_Limit", "Limit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimLimit_Claim", "Claim")]
        public Claim Claim
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimLimit_Claim", "Claim").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimLimit_Claim", "Claim").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Claim> ClaimReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimLimit_Claim", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Claim>("CRMModel.FK_ClaimLimit_Claim", "Claim", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimService object.
        /// </summary>
        /// <param name="claimServiceID">Initial value of the ClaimServiceID property.</param>
        /// <param name="serviceTypeID">Initial value of the ServiceTypeID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static ClaimService CreateClaimService(global::System.Int32 claimServiceID, global::System.Int32 serviceTypeID, global::System.Int32 userID)
        {
            ClaimService claimService = new ClaimService();
            claimService.ClaimServiceID = claimServiceID;
            claimService.ServiceTypeID = serviceTypeID;
            claimService.UserID = userID;
            return claimService;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimServiceID
        {
            get
            {
                return _ClaimServiceID;
            }
            set
            {
                if (_ClaimServiceID != value)
                {
                    OnClaimServiceIDChanging(value);
                    ReportPropertyChanging("ClaimServiceID");
                    _ClaimServiceID = StructuralObject.SetValidValue(value, "ClaimServiceID");
                    ReportPropertyChanged("ClaimServiceID");
                    OnClaimServiceIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimServiceID;
        partial void OnClaimServiceIDChanging(global::System.Int32 value);
        partial void OnClaimServiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClaimID;
        partial void OnClaimIDChanging(Nullable<global::System.Int32> value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                OnServiceTypeIDChanging(value);
                ReportPropertyChanging("ServiceTypeID");
                _ServiceTypeID = StructuralObject.SetValidValue(value, "ServiceTypeID");
                ReportPropertyChanged("ServiceTypeID");
                OnServiceTypeIDChanged();
            }
        }
        private global::System.Int32 _ServiceTypeID;
        partial void OnServiceTypeIDChanging(global::System.Int32 value);
        partial void OnServiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ServiceDate
        {
            get
            {
                return _ServiceDate;
            }
            set
            {
                OnServiceDateChanging(value);
                ReportPropertyChanging("ServiceDate");
                _ServiceDate = StructuralObject.SetValidValue(value, "ServiceDate");
                ReportPropertyChanged("ServiceDate");
                OnServiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ServiceDate;
        partial void OnServiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnServiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceDescription
        {
            get
            {
                return _ServiceDescription;
            }
            set
            {
                OnServiceDescriptionChanging(value);
                ReportPropertyChanging("ServiceDescription");
                _ServiceDescription = StructuralObject.SetValidValue(value, true, "ServiceDescription");
                ReportPropertyChanged("ServiceDescription");
                OnServiceDescriptionChanged();
            }
        }
        private global::System.String _ServiceDescription;
        partial void OnServiceDescriptionChanging(global::System.String value);
        partial void OnServiceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ServiceAmount
        {
            get
            {
                return _ServiceAmount;
            }
            set
            {
                OnServiceAmountChanging(value);
                ReportPropertyChanging("ServiceAmount");
                _ServiceAmount = StructuralObject.SetValidValue(value, "ServiceAmount");
                ReportPropertyChanged("ServiceAmount");
                OnServiceAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ServiceAmount;
        partial void OnServiceAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnServiceAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ServiceQty
        {
            get
            {
                return _ServiceQty;
            }
            set
            {
                OnServiceQtyChanging(value);
                ReportPropertyChanging("ServiceQty");
                _ServiceQty = StructuralObject.SetValidValue(value, "ServiceQty");
                ReportPropertyChanged("ServiceQty");
                OnServiceQtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _ServiceQty;
        partial void OnServiceQtyChanging(Nullable<global::System.Decimal> value);
        partial void OnServiceQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimService_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimService_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimService_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_ClaimService_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_Claim", "Claim")]
        public Claim Claim
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimService_Claim", "Claim").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimService_Claim", "Claim").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Claim> ClaimReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimService_Claim", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Claim>("CRMModel.FK_ClaimService_Claim", "Claim", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_InvoiceServiceType", "InvoiceServiceType")]
        public InvoiceServiceType InvoiceServiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_ClaimService_InvoiceServiceType", "InvoiceServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_ClaimService_InvoiceServiceType", "InvoiceServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceServiceType> InvoiceServiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_ClaimService_InvoiceServiceType", "InvoiceServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceServiceType>("CRMModel.FK_ClaimService_InvoiceServiceType", "InvoiceServiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimService_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimService_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_ClaimService_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_ClaimService_SecUser", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClaimSubLimit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClaimSubLimit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClaimSubLimit object.
        /// </summary>
        /// <param name="claimSubLimitID">Initial value of the ClaimSubLimitID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        public static ClaimSubLimit CreateClaimSubLimit(global::System.Int32 claimSubLimitID, global::System.Int32 claimID)
        {
            ClaimSubLimit claimSubLimit = new ClaimSubLimit();
            claimSubLimit.ClaimSubLimitID = claimSubLimitID;
            claimSubLimit.ClaimID = claimID;
            return claimSubLimit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimSubLimitID
        {
            get
            {
                return _ClaimSubLimitID;
            }
            set
            {
                if (_ClaimSubLimitID != value)
                {
                    OnClaimSubLimitIDChanging(value);
                    ReportPropertyChanging("ClaimSubLimitID");
                    _ClaimSubLimitID = StructuralObject.SetValidValue(value, "ClaimSubLimitID");
                    ReportPropertyChanged("ClaimSubLimitID");
                    OnClaimSubLimitIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimSubLimitID;
        partial void OnClaimSubLimitIDChanging(global::System.Int32 value);
        partial void OnClaimSubLimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicySublimitID
        {
            get
            {
                return _PolicySublimitID;
            }
            set
            {
                OnPolicySublimitIDChanging(value);
                ReportPropertyChanging("PolicySublimitID");
                _PolicySublimitID = StructuralObject.SetValidValue(value, "PolicySublimitID");
                ReportPropertyChanged("PolicySublimitID");
                OnPolicySublimitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicySublimitID;
        partial void OnPolicySublimitIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicySublimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LimitLetter
        {
            get
            {
                return _LimitLetter;
            }
            set
            {
                OnLimitLetterChanging(value);
                ReportPropertyChanging("LimitLetter");
                _LimitLetter = StructuralObject.SetValidValue(value, true, "LimitLetter");
                ReportPropertyChanged("LimitLetter");
                OnLimitLetterChanged();
            }
        }
        private global::System.String _LimitLetter;
        partial void OnLimitLetterChanging(global::System.String value);
        partial void OnLimitLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LossAmount
        {
            get
            {
                return _LossAmount;
            }
            set
            {
                OnLossAmountChanging(value);
                ReportPropertyChanging("LossAmount");
                _LossAmount = StructuralObject.SetValidValue(value, "LossAmount");
                ReportPropertyChanged("LossAmount");
                OnLossAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LossAmount;
        partial void OnLossAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnLossAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ACVAmount
        {
            get
            {
                return _ACVAmount;
            }
            set
            {
                OnACVAmountChanging(value);
                ReportPropertyChanging("ACVAmount");
                _ACVAmount = StructuralObject.SetValidValue(value, "ACVAmount");
                ReportPropertyChanged("ACVAmount");
                OnACVAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ACVAmount;
        partial void OnACVAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnACVAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RCVAmount
        {
            get
            {
                return _RCVAmount;
            }
            set
            {
                OnRCVAmountChanging(value);
                ReportPropertyChanging("RCVAmount");
                _RCVAmount = StructuralObject.SetValidValue(value, "RCVAmount");
                ReportPropertyChanged("RCVAmount");
                OnRCVAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _RCVAmount;
        partial void OnRCVAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnRCVAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OverageAmount
        {
            get
            {
                return _OverageAmount;
            }
            set
            {
                OnOverageAmountChanging(value);
                ReportPropertyChanging("OverageAmount");
                _OverageAmount = StructuralObject.SetValidValue(value, "OverageAmount");
                ReportPropertyChanged("OverageAmount");
                OnOverageAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _OverageAmount;
        partial void OnOverageAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnOverageAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimSubLimit_PolicySubLimit", "PolicySubLimit")]
        public PolicySubLimit PolicySubLimit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicySubLimit>("CRMModel.FK_ClaimSubLimit_PolicySubLimit", "PolicySubLimit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicySubLimit>("CRMModel.FK_ClaimSubLimit_PolicySubLimit", "PolicySubLimit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PolicySubLimit> PolicySubLimitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PolicySubLimit>("CRMModel.FK_ClaimSubLimit_PolicySubLimit", "PolicySubLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PolicySubLimit>("CRMModel.FK_ClaimSubLimit_PolicySubLimit", "PolicySubLimit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimSubLimit_Claim", "Claim")]
        public Claim Claim
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimSubLimit_Claim", "Claim").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimSubLimit_Claim", "Claim").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Claim> ClaimReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_ClaimSubLimit_Claim", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Claim>("CRMModel.FK_ClaimSubLimit_Claim", "Claim", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        public static Client CreateClient(global::System.Int32 clientId)
        {
            Client client = new Client();
            client.ClientId = clientId;
            return client;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    OnClientIdChanging(value);
                    ReportPropertyChanging("ClientId");
                    _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                    ReportPropertyChanged("ClientId");
                    OnClientIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientId;
        partial void OnClientIdChanging(global::System.Int32 value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StateId;
        partial void OnStateIdChanging(Nullable<global::System.Int32> value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value, "CityId");
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetAddress1
        {
            get
            {
                return _StreetAddress1;
            }
            set
            {
                OnStreetAddress1Changing(value);
                ReportPropertyChanging("StreetAddress1");
                _StreetAddress1 = StructuralObject.SetValidValue(value, true, "StreetAddress1");
                ReportPropertyChanged("StreetAddress1");
                OnStreetAddress1Changed();
            }
        }
        private global::System.String _StreetAddress1;
        partial void OnStreetAddress1Changing(global::System.String value);
        partial void OnStreetAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetAddress2
        {
            get
            {
                return _StreetAddress2;
            }
            set
            {
                OnStreetAddress2Changing(value);
                ReportPropertyChanging("StreetAddress2");
                _StreetAddress2 = StructuralObject.SetValidValue(value, true, "StreetAddress2");
                ReportPropertyChanged("StreetAddress2");
                OnStreetAddress2Changed();
            }
        }
        private global::System.String _StreetAddress2;
        partial void OnStreetAddress2Changing(global::System.String value);
        partial void OnStreetAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrimaryPhoneNo
        {
            get
            {
                return _PrimaryPhoneNo;
            }
            set
            {
                OnPrimaryPhoneNoChanging(value);
                ReportPropertyChanging("PrimaryPhoneNo");
                _PrimaryPhoneNo = StructuralObject.SetValidValue(value, true, "PrimaryPhoneNo");
                ReportPropertyChanged("PrimaryPhoneNo");
                OnPrimaryPhoneNoChanged();
            }
        }
        private global::System.String _PrimaryPhoneNo;
        partial void OnPrimaryPhoneNoChanging(global::System.String value);
        partial void OnPrimaryPhoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrimaryEmailId
        {
            get
            {
                return _PrimaryEmailId;
            }
            set
            {
                OnPrimaryEmailIdChanging(value);
                ReportPropertyChanging("PrimaryEmailId");
                _PrimaryEmailId = StructuralObject.SetValidValue(value, true, "PrimaryEmailId");
                ReportPropertyChanged("PrimaryEmailId");
                OnPrimaryEmailIdChanged();
            }
        }
        private global::System.String _PrimaryEmailId;
        partial void OnPrimaryEmailIdChanging(global::System.String value);
        partial void OnPrimaryEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryPhoneNo
        {
            get
            {
                return _SecondaryPhoneNo;
            }
            set
            {
                OnSecondaryPhoneNoChanging(value);
                ReportPropertyChanging("SecondaryPhoneNo");
                _SecondaryPhoneNo = StructuralObject.SetValidValue(value, true, "SecondaryPhoneNo");
                ReportPropertyChanged("SecondaryPhoneNo");
                OnSecondaryPhoneNoChanged();
            }
        }
        private global::System.String _SecondaryPhoneNo;
        partial void OnSecondaryPhoneNoChanging(global::System.String value);
        partial void OnSecondaryPhoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryEmailId
        {
            get
            {
                return _SecondaryEmailId;
            }
            set
            {
                OnSecondaryEmailIdChanging(value);
                ReportPropertyChanging("SecondaryEmailId");
                _SecondaryEmailId = StructuralObject.SetValidValue(value, true, "SecondaryEmailId");
                ReportPropertyChanged("SecondaryEmailId");
                OnSecondaryEmailIdChanged();
            }
        }
        private global::System.String _SecondaryEmailId;
        partial void OnSecondaryEmailIdChanging(global::System.String value);
        partial void OnSecondaryEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailHost
        {
            get
            {
                return _EmailHost;
            }
            set
            {
                OnEmailHostChanging(value);
                ReportPropertyChanging("EmailHost");
                _EmailHost = StructuralObject.SetValidValue(value, true, "EmailHost");
                ReportPropertyChanged("EmailHost");
                OnEmailHostChanged();
            }
        }
        private global::System.String _EmailHost;
        partial void OnEmailHostChanging(global::System.String value);
        partial void OnEmailHostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailHostPort
        {
            get
            {
                return _EmailHostPort;
            }
            set
            {
                OnEmailHostPortChanging(value);
                ReportPropertyChanging("EmailHostPort");
                _EmailHostPort = StructuralObject.SetValidValue(value, true, "EmailHostPort");
                ReportPropertyChanged("EmailHostPort");
                OnEmailHostPortChanged();
            }
        }
        private global::System.String _EmailHostPort;
        partial void OnEmailHostPortChanging(global::System.String value);
        partial void OnEmailHostPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value, "Active");
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Int32> _Active;
        partial void OnActiveChanging(Nullable<global::System.Int32> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, true, "BusinessName");
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> maxUsers
        {
            get
            {
                return _maxUsers;
            }
            set
            {
                OnmaxUsersChanging(value);
                ReportPropertyChanging("maxUsers");
                _maxUsers = StructuralObject.SetValidValue(value, "maxUsers");
                ReportPropertyChanged("maxUsers");
                OnmaxUsersChanged();
            }
        }
        private Nullable<global::System.Int32> _maxUsers;
        partial void OnmaxUsersChanging(Nullable<global::System.Int32> value);
        partial void OnmaxUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true, "ClientName");
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FeePerContract
        {
            get
            {
                return _FeePerContract;
            }
            set
            {
                OnFeePerContractChanging(value);
                ReportPropertyChanging("FeePerContract");
                _FeePerContract = StructuralObject.SetValidValue(value, "FeePerContract");
                ReportPropertyChanged("FeePerContract");
                OnFeePerContractChanged();
            }
        }
        private Nullable<global::System.Decimal> _FeePerContract;
        partial void OnFeePerContractChanging(Nullable<global::System.Decimal> value);
        partial void OnFeePerContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FederalIDNo
        {
            get
            {
                return _FederalIDNo;
            }
            set
            {
                OnFederalIDNoChanging(value);
                ReportPropertyChanging("FederalIDNo");
                _FederalIDNo = StructuralObject.SetValidValue(value, true, "FederalIDNo");
                ReportPropertyChanged("FederalIDNo");
                OnFederalIDNoChanged();
            }
        }
        private global::System.String _FederalIDNo;
        partial void OnFederalIDNoChanging(global::System.String value);
        partial void OnFederalIDNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isTrial
        {
            get
            {
                return _isTrial;
            }
            set
            {
                OnisTrialChanging(value);
                ReportPropertyChanging("isTrial");
                _isTrial = StructuralObject.SetValidValue(value, "isTrial");
                ReportPropertyChanged("isTrial");
                OnisTrialChanged();
            }
        }
        private Nullable<global::System.Boolean> _isTrial;
        partial void OnisTrialChanging(Nullable<global::System.Boolean> value);
        partial void OnisTrialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxLeads
        {
            get
            {
                return _MaxLeads;
            }
            set
            {
                OnMaxLeadsChanging(value);
                ReportPropertyChanging("MaxLeads");
                _MaxLeads = StructuralObject.SetValidValue(value, "MaxLeads");
                ReportPropertyChanged("MaxLeads");
                OnMaxLeadsChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxLeads;
        partial void OnMaxLeadsChanging(Nullable<global::System.Int32> value);
        partial void OnMaxLeadsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isShowTasks
        {
            get
            {
                return _isShowTasks;
            }
            set
            {
                OnisShowTasksChanging(value);
                ReportPropertyChanging("isShowTasks");
                _isShowTasks = StructuralObject.SetValidValue(value, "isShowTasks");
                ReportPropertyChanged("isShowTasks");
                OnisShowTasksChanged();
            }
        }
        private Nullable<global::System.Boolean> _isShowTasks;
        partial void OnisShowTasksChanging(Nullable<global::System.Boolean> value);
        partial void OnisShowTasksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InactivityDays
        {
            get
            {
                return _InactivityDays;
            }
            set
            {
                OnInactivityDaysChanging(value);
                ReportPropertyChanging("InactivityDays");
                _InactivityDays = StructuralObject.SetValidValue(value, "InactivityDays");
                ReportPropertyChanged("InactivityDays");
                OnInactivityDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _InactivityDays;
        partial void OnInactivityDaysChanging(Nullable<global::System.Int32> value);
        partial void OnInactivityDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String imapHost
        {
            get
            {
                return _imapHost;
            }
            set
            {
                OnimapHostChanging(value);
                ReportPropertyChanging("imapHost");
                _imapHost = StructuralObject.SetValidValue(value, true, "imapHost");
                ReportPropertyChanged("imapHost");
                OnimapHostChanged();
            }
        }
        private global::System.String _imapHost;
        partial void OnimapHostChanging(global::System.String value);
        partial void OnimapHostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> imapHostPort
        {
            get
            {
                return _imapHostPort;
            }
            set
            {
                OnimapHostPortChanging(value);
                ReportPropertyChanging("imapHostPort");
                _imapHostPort = StructuralObject.SetValidValue(value, "imapHostPort");
                ReportPropertyChanged("imapHostPort");
                OnimapHostPortChanged();
            }
        }
        private Nullable<global::System.Int32> _imapHostPort;
        partial void OnimapHostPortChanging(Nullable<global::System.Int32> value);
        partial void OnimapHostPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> imapHostUseSSL
        {
            get
            {
                return _imapHostUseSSL;
            }
            set
            {
                OnimapHostUseSSLChanging(value);
                ReportPropertyChanging("imapHostUseSSL");
                _imapHostUseSSL = StructuralObject.SetValidValue(value, "imapHostUseSSL");
                ReportPropertyChanged("imapHostUseSSL");
                OnimapHostUseSSLChanged();
            }
        }
        private Nullable<global::System.Boolean> _imapHostUseSSL;
        partial void OnimapHostUseSSLChanging(Nullable<global::System.Boolean> value);
        partial void OnimapHostUseSSLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceSettingID
        {
            get
            {
                return _InvoiceSettingID;
            }
            set
            {
                OnInvoiceSettingIDChanging(value);
                ReportPropertyChanging("InvoiceSettingID");
                _InvoiceSettingID = StructuralObject.SetValidValue(value, "InvoiceSettingID");
                ReportPropertyChanged("InvoiceSettingID");
                OnInvoiceSettingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceSettingID;
        partial void OnInvoiceSettingIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceSettingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvoiceContingencyFee
        {
            get
            {
                return _InvoiceContingencyFee;
            }
            set
            {
                OnInvoiceContingencyFeeChanging(value);
                ReportPropertyChanging("InvoiceContingencyFee");
                _InvoiceContingencyFee = StructuralObject.SetValidValue(value, "InvoiceContingencyFee");
                ReportPropertyChanged("InvoiceContingencyFee");
                OnInvoiceContingencyFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvoiceContingencyFee;
        partial void OnInvoiceContingencyFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnInvoiceContingencyFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NextClaimNumber
        {
            get
            {
                return _NextClaimNumber;
            }
            set
            {
                OnNextClaimNumberChanging(value);
                ReportPropertyChanging("NextClaimNumber");
                _NextClaimNumber = StructuralObject.SetValidValue(value, "NextClaimNumber");
                ReportPropertyChanged("NextClaimNumber");
                OnNextClaimNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _NextClaimNumber;
        partial void OnNextClaimNumberChanging(Nullable<global::System.Int32> value);
        partial void OnNextClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientTypeID
        {
            get
            {
                return _ClientTypeID;
            }
            set
            {
                OnClientTypeIDChanging(value);
                ReportPropertyChanging("ClientTypeID");
                _ClientTypeID = StructuralObject.SetValidValue(value, "ClientTypeID");
                ReportPropertyChanged("ClientTypeID");
                OnClientTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientTypeID;
        partial void OnClientTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoicePaymentTerms
        {
            get
            {
                return _InvoicePaymentTerms;
            }
            set
            {
                OnInvoicePaymentTermsChanging(value);
                ReportPropertyChanging("InvoicePaymentTerms");
                _InvoicePaymentTerms = StructuralObject.SetValidValue(value, "InvoicePaymentTerms");
                ReportPropertyChanged("InvoicePaymentTerms");
                OnInvoicePaymentTermsChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoicePaymentTerms;
        partial void OnInvoicePaymentTermsChanging(Nullable<global::System.Int32> value);
        partial void OnInvoicePaymentTermsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Client_CityMaster", "CityMaster")]
        public CityMaster CityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.FK_Client_CityMaster", "CityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.FK_Client_CityMaster", "CityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityMaster> CityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.FK_Client_CityMaster", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityMaster>("CRMModel.FK_Client_CityMaster", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Client_StateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_Client_StateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_Client_StateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.FK_Client_StateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.FK_Client_StateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_AdjusterMaster_Client", "AdjusterMaster")]
        public EntityCollection<AdjusterMaster> AdjusterMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterMaster>("CRMModel.fk_AdjusterMaster_Client", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterMaster>("CRMModel.fk_AdjusterMaster_Client", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_Client", "LeadInvoice")]
        public EntityCollection<LeadInvoice> LeadInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_Client", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_Client", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleInvoiceApprovalRule_Client", "SecRoleInvoiceApprovalPermission")]
        public EntityCollection<SecRoleInvoiceApprovalPermission> SecRoleInvoiceApprovalPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecRoleInvoiceApprovalPermission>("CRMModel.FK_SecRoleInvoiceApprovalRule_Client", "SecRoleInvoiceApprovalPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecRoleInvoiceApprovalPermission>("CRMModel.FK_SecRoleInvoiceApprovalRule_Client", "SecRoleInvoiceApprovalPermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Client", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_Lead_Client", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_Lead_Client", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Client_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Client_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Client_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Client_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_Client_SecUser", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_ClientSecUSer", "SecUser")]
        public EntityCollection<SecUser> SecUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecUser>("CRMModel.fk_ClientSecUSer", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecUser>("CRMModel.fk_ClientSecUSer", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_BusinessRule_Client", "BusinessRule")]
        public EntityCollection<BusinessRule> BusinessRules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessRule>("CRMModel.FK_BusinessRule_Client", "BusinessRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessRule>("CRMModel.FK_BusinessRule_Client", "BusinessRule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_Client", "RuleException")]
        public EntityCollection<RuleException> RuleExceptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleException>("CRMModel.FK_RuleException_Client", "RuleException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleException>("CRMModel.FK_RuleException_Client", "RuleException", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClientFieldColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientFieldColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientFieldColumn object.
        /// </summary>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="fieldColumnID">Initial value of the FieldColumnID property.</param>
        public static ClientFieldColumn CreateClientFieldColumn(global::System.Int32 clientID, global::System.Int32 fieldColumnID)
        {
            ClientFieldColumn clientFieldColumn = new ClientFieldColumn();
            clientFieldColumn.ClientID = clientID;
            clientFieldColumn.FieldColumnID = fieldColumnID;
            return clientFieldColumn;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                if (_ClientID != value)
                {
                    OnClientIDChanging(value);
                    ReportPropertyChanging("ClientID");
                    _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                    ReportPropertyChanged("ClientID");
                    OnClientIDChanged();
                }
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldColumnID
        {
            get
            {
                return _FieldColumnID;
            }
            set
            {
                if (_FieldColumnID != value)
                {
                    OnFieldColumnIDChanging(value);
                    ReportPropertyChanging("FieldColumnID");
                    _FieldColumnID = StructuralObject.SetValidValue(value, "FieldColumnID");
                    ReportPropertyChanged("FieldColumnID");
                    OnFieldColumnIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldColumnID;
        partial void OnFieldColumnIDChanging(global::System.Int32 value);
        partial void OnFieldColumnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isVisible
        {
            get
            {
                return _isVisible;
            }
            set
            {
                OnisVisibleChanging(value);
                ReportPropertyChanging("isVisible");
                _isVisible = StructuralObject.SetValidValue(value, "isVisible");
                ReportPropertyChanged("isVisible");
                OnisVisibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _isVisible;
        partial void OnisVisibleChanging(Nullable<global::System.Boolean> value);
        partial void OnisVisibleChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ClientLetterTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientLetterTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientLetterTemplate object.
        /// </summary>
        /// <param name="templateID">Initial value of the TemplateID property.</param>
        public static ClientLetterTemplate CreateClientLetterTemplate(global::System.Int32 templateID)
        {
            ClientLetterTemplate clientLetterTemplate = new ClientLetterTemplate();
            clientLetterTemplate.TemplateID = templateID;
            return clientLetterTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                if (_TemplateID != value)
                {
                    OnTemplateIDChanging(value);
                    ReportPropertyChanging("TemplateID");
                    _TemplateID = StructuralObject.SetValidValue(value, "TemplateID");
                    ReportPropertyChanged("TemplateID");
                    OnTemplateIDChanged();
                }
            }
        }
        private global::System.Int32 _TemplateID;
        partial void OnTemplateIDChanging(global::System.Int32 value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Path
        {
            get
            {
                return _Path;
            }
            set
            {
                OnPathChanging(value);
                ReportPropertyChanging("Path");
                _Path = StructuralObject.SetValidValue(value, true, "Path");
                ReportPropertyChanged("Path");
                OnPathChanged();
            }
        }
        private global::System.String _Path;
        partial void OnPathChanging(global::System.String value);
        partial void OnPathChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static Contact CreateContact(global::System.Int32 contactID)
        {
            Contact contact = new Contact();
            contact.ContactID = contactID;
            return contact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimName
        {
            get
            {
                return _ClaimName;
            }
            set
            {
                OnClaimNameChanging(value);
                ReportPropertyChanging("ClaimName");
                _ClaimName = StructuralObject.SetValidValue(value, true, "ClaimName");
                ReportPropertyChanged("ClaimName");
                OnClaimNameChanged();
            }
        }
        private global::System.String _ClaimName;
        partial void OnClaimNameChanging(global::System.String value);
        partial void OnClaimNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryID;
        partial void OnCategoryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true, "Mobile");
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZipCodeID
        {
            get
            {
                return _ZipCodeID;
            }
            set
            {
                OnZipCodeIDChanging(value);
                ReportPropertyChanging("ZipCodeID");
                _ZipCodeID = StructuralObject.SetValidValue(value, "ZipCodeID");
                ReportPropertyChanged("ZipCodeID");
                OnZipCodeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ZipCodeID;
        partial void OnZipCodeIDChanging(Nullable<global::System.Int32> value);
        partial void OnZipCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true, "County");
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value, "Balance");
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true, "Address1");
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepartmentName
        {
            get
            {
                return _DepartmentName;
            }
            set
            {
                OnDepartmentNameChanging(value);
                ReportPropertyChanging("DepartmentName");
                _DepartmentName = StructuralObject.SetValidValue(value, true, "DepartmentName");
                ReportPropertyChanged("DepartmentName");
                OnDepartmentNameChanged();
            }
        }
        private global::System.String _DepartmentName;
        partial void OnDepartmentNameChanging(global::System.String value);
        partial void OnDepartmentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTitle
        {
            get
            {
                return _ContactTitle;
            }
            set
            {
                OnContactTitleChanging(value);
                ReportPropertyChanging("ContactTitle");
                _ContactTitle = StructuralObject.SetValidValue(value, true, "ContactTitle");
                ReportPropertyChanged("ContactTitle");
                OnContactTitleChanged();
            }
        }
        private global::System.String _ContactTitle;
        partial void OnContactTitleChanging(global::System.String value);
        partial void OnContactTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value, "IsPrimary");
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrimary;
        partial void OnIsPrimaryChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true, "Fax");
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true, "ContactName");
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentCode
        {
            get
            {
                return _AgentCode;
            }
            set
            {
                OnAgentCodeChanging(value);
                ReportPropertyChanging("AgentCode");
                _AgentCode = StructuralObject.SetValidValue(value, true, "AgentCode");
                ReportPropertyChanged("AgentCode");
                OnAgentCodeChanged();
            }
        }
        private global::System.String _AgentCode;
        partial void OnAgentCodeChanging(global::System.String value);
        partial void OnAgentCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgenctSubcode
        {
            get
            {
                return _AgenctSubcode;
            }
            set
            {
                OnAgenctSubcodeChanging(value);
                ReportPropertyChanging("AgenctSubcode");
                _AgenctSubcode = StructuralObject.SetValidValue(value, true, "AgenctSubcode");
                ReportPropertyChanged("AgenctSubcode");
                OnAgenctSubcodeChanged();
            }
        }
        private global::System.String _AgenctSubcode;
        partial void OnAgenctSubcodeChanging(global::System.String value);
        partial void OnAgenctSubcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgentCustomerID
        {
            get
            {
                return _AgentCustomerID;
            }
            set
            {
                OnAgentCustomerIDChanging(value);
                ReportPropertyChanging("AgentCustomerID");
                _AgentCustomerID = StructuralObject.SetValidValue(value, true, "AgentCustomerID");
                ReportPropertyChanged("AgentCustomerID");
                OnAgentCustomerIDChanged();
            }
        }
        private global::System.String _AgentCustomerID;
        partial void OnAgentCustomerIDChanging(global::System.String value);
        partial void OnAgentCustomerIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Contact_CityMaster", "CityMaster")]
        public CityMaster CityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Contact_CityMaster", "CityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Contact_CityMaster", "CityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityMaster> CityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Contact_CityMaster", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityMaster>("CRMModel.fk_Contact_CityMaster", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Contact_LeadContactType", "LeadContactType")]
        public LeadContactType LeadContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadContactType>("CRMModel.FK_Contact_LeadContactType", "LeadContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadContactType>("CRMModel.FK_Contact_LeadContactType", "LeadContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadContactType> LeadContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadContactType>("CRMModel.FK_Contact_LeadContactType", "LeadContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadContactType>("CRMModel.FK_Contact_LeadContactType", "LeadContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Contact_StateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Contact_StateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Contact_StateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Contact_StateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.fk_Contact_StateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierContact_Contact", "CarrierContact")]
        public EntityCollection<CarrierContact> CarrierContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierContact>("CRMModel.FK_CarrierContact_Contact", "CarrierContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierContact>("CRMModel.FK_CarrierContact_Contact", "CarrierContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimContact_Contact", "ClaimContact")]
        public EntityCollection<ClaimContact> ClaimContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimContact>("CRMModel.FK_ClaimContact_Contact", "ClaimContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimContact>("CRMModel.FK_ClaimContact_Contact", "ClaimContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Contact_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Contact_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Contact_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Contact_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_Contact_SecUser", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_Contact_Supervisor", "Claim")]
        public EntityCollection<Claim> Claims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Claim>("CRMModel.FK_Claim_Contact_Supervisor", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Claim>("CRMModel.FK_Claim_Contact_Supervisor", "Claim", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_Contact", "Invitee")]
        public EntityCollection<Invitee> Invitees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitee>("CRMModel.FK_Invitee_Contact", "Invitee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitee>("CRMModel.FK_Invitee_Contact", "Invitee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ContractorMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorMaster object.
        /// </summary>
        /// <param name="contractorId">Initial value of the ContractorId property.</param>
        public static ContractorMaster CreateContractorMaster(global::System.Int32 contractorId)
        {
            ContractorMaster contractorMaster = new ContractorMaster();
            contractorMaster.ContractorId = contractorId;
            return contractorMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorId
        {
            get
            {
                return _ContractorId;
            }
            set
            {
                if (_ContractorId != value)
                {
                    OnContractorIdChanging(value);
                    ReportPropertyChanging("ContractorId");
                    _ContractorId = StructuralObject.SetValidValue(value, "ContractorId");
                    ReportPropertyChanged("ContractorId");
                    OnContractorIdChanged();
                }
            }
        }
        private global::System.Int32 _ContractorId;
        partial void OnContractorIdChanging(global::System.Int32 value);
        partial void OnContractorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractorName
        {
            get
            {
                return _ContractorName;
            }
            set
            {
                OnContractorNameChanging(value);
                ReportPropertyChanging("ContractorName");
                _ContractorName = StructuralObject.SetValidValue(value, true, "ContractorName");
                ReportPropertyChanged("ContractorName");
                OnContractorNameChanged();
            }
        }
        private global::System.String _ContractorName;
        partial void OnContractorNameChanging(global::System.String value);
        partial void OnContractorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FederalTaxID
        {
            get
            {
                return _FederalTaxID;
            }
            set
            {
                OnFederalTaxIDChanging(value);
                ReportPropertyChanging("FederalTaxID");
                _FederalTaxID = StructuralObject.SetValidValue(value, true, "FederalTaxID");
                ReportPropertyChanged("FederalTaxID");
                OnFederalTaxIDChanged();
            }
        }
        private global::System.String _FederalTaxID;
        partial void OnFederalTaxIDChanging(global::System.String value);
        partial void OnFederalTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true, "Address1");
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, true, "BusinessName");
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Contractor", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_Lead_Contractor", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_Lead_Contractor", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="CountryMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryMaster object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        public static CountryMaster CreateCountryMaster(global::System.Int32 countryID)
        {
            CountryMaster countryMaster = new CountryMaster();
            countryMaster.CountryID = countryID;
            return countryMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true, "CountryName");
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_Country", "Carrier")]
        public EntityCollection<Carrier> Carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carrier>("CRMModel.fk_Carrier_Country", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carrier>("CRMModel.fk_Carrier_Country", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_CountryMaster", "CarrierLocation")]
        public EntityCollection<CarrierLocation> CarrierLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_CountryMaster", "CarrierLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_CountryMaster", "CarrierLocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="DataForm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataForm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataForm object.
        /// </summary>
        /// <param name="formID">Initial value of the FormID property.</param>
        public static DataForm CreateDataForm(global::System.Int32 formID)
        {
            DataForm dataForm = new DataForm();
            dataForm.FormID = formID;
            return dataForm;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormID
        {
            get
            {
                return _FormID;
            }
            set
            {
                if (_FormID != value)
                {
                    OnFormIDChanging(value);
                    ReportPropertyChanging("FormID");
                    _FormID = StructuralObject.SetValidValue(value, "FormID");
                    ReportPropertyChanged("FormID");
                    OnFormIDChanged();
                }
            }
        }
        private global::System.Int32 _FormID;
        partial void OnFormIDChanging(global::System.Int32 value);
        partial void OnFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormName
        {
            get
            {
                return _FormName;
            }
            set
            {
                OnFormNameChanging(value);
                ReportPropertyChanging("FormName");
                _FormName = StructuralObject.SetValidValue(value, true, "FormName");
                ReportPropertyChanged("FormName");
                OnFormNameChanged();
            }
        }
        private global::System.String _FormName;
        partial void OnFormNameChanging(global::System.String value);
        partial void OnFormNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_DataFormFields_DataForm", "DataFormField")]
        public EntityCollection<DataFormField> DataFormFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataFormField>("CRMModel.FK_DataFormFields_DataForm", "DataFormField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataFormField>("CRMModel.FK_DataFormFields_DataForm", "DataFormField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_DataFormFieldTemplate_DataForm", "DataFormFieldTemplate")]
        public EntityCollection<DataFormFieldTemplate> DataFormFieldTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataFormFieldTemplate>("CRMModel.FK_DataFormFieldTemplate_DataForm", "DataFormFieldTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataFormFieldTemplate>("CRMModel.FK_DataFormFieldTemplate_DataForm", "DataFormFieldTemplate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="DataFormField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataFormField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataFormField object.
        /// </summary>
        /// <param name="fieldID">Initial value of the FieldID property.</param>
        /// <param name="formID">Initial value of the FormID property.</param>
        public static DataFormField CreateDataFormField(global::System.Int32 fieldID, global::System.Int32 formID)
        {
            DataFormField dataFormField = new DataFormField();
            dataFormField.FieldID = fieldID;
            dataFormField.FormID = formID;
            return dataFormField;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldID
        {
            get
            {
                return _FieldID;
            }
            set
            {
                if (_FieldID != value)
                {
                    OnFieldIDChanging(value);
                    ReportPropertyChanging("FieldID");
                    _FieldID = StructuralObject.SetValidValue(value, "FieldID");
                    ReportPropertyChanged("FieldID");
                    OnFieldIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldID;
        partial void OnFieldIDChanging(global::System.Int32 value);
        partial void OnFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormID
        {
            get
            {
                return _FormID;
            }
            set
            {
                OnFormIDChanging(value);
                ReportPropertyChanging("FormID");
                _FormID = StructuralObject.SetValidValue(value, "FormID");
                ReportPropertyChanged("FormID");
                OnFormIDChanged();
            }
        }
        private global::System.Int32 _FormID;
        partial void OnFormIDChanging(global::System.Int32 value);
        partial void OnFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldPrompt
        {
            get
            {
                return _FieldPrompt;
            }
            set
            {
                OnFieldPromptChanging(value);
                ReportPropertyChanging("FieldPrompt");
                _FieldPrompt = StructuralObject.SetValidValue(value, true, "FieldPrompt");
                ReportPropertyChanged("FieldPrompt");
                OnFieldPromptChanged();
            }
        }
        private global::System.String _FieldPrompt;
        partial void OnFieldPromptChanging(global::System.String value);
        partial void OnFieldPromptChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_DataFormFields_DataForm", "DataForm")]
        public DataForm DataForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataForm>("CRMModel.FK_DataFormFields_DataForm", "DataForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataForm>("CRMModel.FK_DataFormFields_DataForm", "DataForm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataForm> DataFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataForm>("CRMModel.FK_DataFormFields_DataForm", "DataForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataForm>("CRMModel.FK_DataFormFields_DataForm", "DataForm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_DataFormFieldTemplate_DataFormFields", "DataFormFieldTemplate")]
        public EntityCollection<DataFormFieldTemplate> DataFormFieldTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataFormFieldTemplate>("CRMModel.FK_DataFormFieldTemplate_DataFormFields", "DataFormFieldTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataFormFieldTemplate>("CRMModel.FK_DataFormFieldTemplate_DataFormFields", "DataFormFieldTemplate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="DataFormFieldTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataFormFieldTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataFormFieldTemplate object.
        /// </summary>
        /// <param name="templateID">Initial value of the TemplateID property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="formID">Initial value of the FormID property.</param>
        /// <param name="fieldID">Initial value of the FieldID property.</param>
        public static DataFormFieldTemplate CreateDataFormFieldTemplate(global::System.Int32 templateID, global::System.Int32 clientID, global::System.Int32 formID, global::System.Int32 fieldID)
        {
            DataFormFieldTemplate dataFormFieldTemplate = new DataFormFieldTemplate();
            dataFormFieldTemplate.TemplateID = templateID;
            dataFormFieldTemplate.ClientID = clientID;
            dataFormFieldTemplate.FormID = formID;
            dataFormFieldTemplate.FieldID = fieldID;
            return dataFormFieldTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                if (_TemplateID != value)
                {
                    OnTemplateIDChanging(value);
                    ReportPropertyChanging("TemplateID");
                    _TemplateID = StructuralObject.SetValidValue(value, "TemplateID");
                    ReportPropertyChanged("TemplateID");
                    OnTemplateIDChanged();
                }
            }
        }
        private global::System.Int32 _TemplateID;
        partial void OnTemplateIDChanging(global::System.Int32 value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormID
        {
            get
            {
                return _FormID;
            }
            set
            {
                OnFormIDChanging(value);
                ReportPropertyChanging("FormID");
                _FormID = StructuralObject.SetValidValue(value, "FormID");
                ReportPropertyChanged("FormID");
                OnFormIDChanged();
            }
        }
        private global::System.Int32 _FormID;
        partial void OnFormIDChanging(global::System.Int32 value);
        partial void OnFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldID
        {
            get
            {
                return _FieldID;
            }
            set
            {
                OnFieldIDChanging(value);
                ReportPropertyChanging("FieldID");
                _FieldID = StructuralObject.SetValidValue(value, "FieldID");
                ReportPropertyChanged("FieldID");
                OnFieldIDChanged();
            }
        }
        private global::System.Int32 _FieldID;
        partial void OnFieldIDChanging(global::System.Int32 value);
        partial void OnFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value, "IsSelected");
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSelected;
        partial void OnIsSelectedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSelectedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_DataFormFieldTemplate_DataFormFields", "DataFormField")]
        public DataFormField DataFormField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataFormField>("CRMModel.FK_DataFormFieldTemplate_DataFormFields", "DataFormField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataFormField>("CRMModel.FK_DataFormFieldTemplate_DataFormFields", "DataFormField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataFormField> DataFormFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataFormField>("CRMModel.FK_DataFormFieldTemplate_DataFormFields", "DataFormField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataFormField>("CRMModel.FK_DataFormFieldTemplate_DataFormFields", "DataFormField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_DataFormFieldTemplate_DataForm", "DataForm")]
        public DataForm DataForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataForm>("CRMModel.FK_DataFormFieldTemplate_DataForm", "DataForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataForm>("CRMModel.FK_DataFormFieldTemplate_DataForm", "DataForm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataForm> DataFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataForm>("CRMModel.FK_DataFormFieldTemplate_DataForm", "DataForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataForm>("CRMModel.FK_DataFormFieldTemplate_DataForm", "DataForm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="DocumentCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentCategory object.
        /// </summary>
        /// <param name="documentCategoryID">Initial value of the DocumentCategoryID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static DocumentCategory CreateDocumentCategory(global::System.Int32 documentCategoryID, global::System.Boolean isActive)
        {
            DocumentCategory documentCategory = new DocumentCategory();
            documentCategory.DocumentCategoryID = documentCategoryID;
            documentCategory.IsActive = isActive;
            return documentCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentCategoryID
        {
            get
            {
                return _DocumentCategoryID;
            }
            set
            {
                if (_DocumentCategoryID != value)
                {
                    OnDocumentCategoryIDChanging(value);
                    ReportPropertyChanging("DocumentCategoryID");
                    _DocumentCategoryID = StructuralObject.SetValidValue(value, "DocumentCategoryID");
                    ReportPropertyChanged("DocumentCategoryID");
                    OnDocumentCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _DocumentCategoryID;
        partial void OnDocumentCategoryIDChanging(global::System.Int32 value);
        partial void OnDocumentCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true, "CategoryName");
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimDocument_DocumentCategory", "ClaimDocument")]
        public EntityCollection<ClaimDocument> ClaimDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimDocument>("CRMModel.FK_ClaimDocument_DocumentCategory", "ClaimDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimDocument>("CRMModel.FK_ClaimDocument_DocumentCategory", "ClaimDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="DocumentListMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentListMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentListMaster object.
        /// </summary>
        /// <param name="documentListId">Initial value of the DocumentListId property.</param>
        public static DocumentListMaster CreateDocumentListMaster(global::System.Int32 documentListId)
        {
            DocumentListMaster documentListMaster = new DocumentListMaster();
            documentListMaster.DocumentListId = documentListId;
            return documentListMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentListId
        {
            get
            {
                return _DocumentListId;
            }
            set
            {
                if (_DocumentListId != value)
                {
                    OnDocumentListIdChanging(value);
                    ReportPropertyChanging("DocumentListId");
                    _DocumentListId = StructuralObject.SetValidValue(value, "DocumentListId");
                    ReportPropertyChanged("DocumentListId");
                    OnDocumentListIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentListId;
        partial void OnDocumentListIdChanging(global::System.Int32 value);
        partial void OnDocumentListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, true, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyTypeId
        {
            get
            {
                return _PolicyTypeId;
            }
            set
            {
                OnPolicyTypeIdChanging(value);
                ReportPropertyChanging("PolicyTypeId");
                _PolicyTypeId = StructuralObject.SetValidValue(value, "PolicyTypeId");
                ReportPropertyChanged("PolicyTypeId");
                OnPolicyTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyTypeId;
        partial void OnPolicyTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> clientID
        {
            get
            {
                return _clientID;
            }
            set
            {
                OnclientIDChanging(value);
                ReportPropertyChanging("clientID");
                _clientID = StructuralObject.SetValidValue(value, "clientID");
                ReportPropertyChanged("clientID");
                OnclientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _clientID;
        partial void OnclientIDChanging(Nullable<global::System.Int32> value);
        partial void OnclientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadDocumentList", "LeadDocumentList")]
        public EntityCollection<LeadDocumentList> LeadDocumentLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadDocumentList>("CRMModel.fk_LeadDocumentList", "LeadDocumentList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadDocumentList>("CRMModel.fk_LeadDocumentList", "LeadDocumentList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ExpenseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseType object.
        /// </summary>
        /// <param name="expenseTypeID">Initial value of the ExpenseTypeID property.</param>
        /// <param name="expenseName">Initial value of the ExpenseName property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ExpenseType CreateExpenseType(global::System.Int32 expenseTypeID, global::System.String expenseName, global::System.Int32 clientID, global::System.Boolean isActive)
        {
            ExpenseType expenseType = new ExpenseType();
            expenseType.ExpenseTypeID = expenseTypeID;
            expenseType.ExpenseName = expenseName;
            expenseType.ClientID = clientID;
            expenseType.IsActive = isActive;
            return expenseType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseTypeID
        {
            get
            {
                return _ExpenseTypeID;
            }
            set
            {
                if (_ExpenseTypeID != value)
                {
                    OnExpenseTypeIDChanging(value);
                    ReportPropertyChanging("ExpenseTypeID");
                    _ExpenseTypeID = StructuralObject.SetValidValue(value, "ExpenseTypeID");
                    ReportPropertyChanged("ExpenseTypeID");
                    OnExpenseTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ExpenseTypeID;
        partial void OnExpenseTypeIDChanging(global::System.Int32 value);
        partial void OnExpenseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExpenseName
        {
            get
            {
                return _ExpenseName;
            }
            set
            {
                OnExpenseNameChanging(value);
                ReportPropertyChanging("ExpenseName");
                _ExpenseName = StructuralObject.SetValidValue(value, false, "ExpenseName");
                ReportPropertyChanged("ExpenseName");
                OnExpenseNameChanged();
            }
        }
        private global::System.String _ExpenseName;
        partial void OnExpenseNameChanging(global::System.String value);
        partial void OnExpenseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpenseDescription
        {
            get
            {
                return _ExpenseDescription;
            }
            set
            {
                OnExpenseDescriptionChanging(value);
                ReportPropertyChanging("ExpenseDescription");
                _ExpenseDescription = StructuralObject.SetValidValue(value, true, "ExpenseDescription");
                ReportPropertyChanged("ExpenseDescription");
                OnExpenseDescriptionChanged();
            }
        }
        private global::System.String _ExpenseDescription;
        partial void OnExpenseDescriptionChanging(global::System.String value);
        partial void OnExpenseDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExpenseRate
        {
            get
            {
                return _ExpenseRate;
            }
            set
            {
                OnExpenseRateChanging(value);
                ReportPropertyChanging("ExpenseRate");
                _ExpenseRate = StructuralObject.SetValidValue(value, "ExpenseRate");
                ReportPropertyChanged("ExpenseRate");
                OnExpenseRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExpenseRate;
        partial void OnExpenseRateChanging(Nullable<global::System.Decimal> value);
        partial void OnExpenseRateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimExpense_ClaimExpense", "ClaimExpense")]
        public EntityCollection<ClaimExpense> ClaimExpenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimExpense>("CRMModel.FK_ClaimExpense_ClaimExpense", "ClaimExpense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimExpense>("CRMModel.FK_ClaimExpense_ClaimExpense", "ClaimExpense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "CarrierInvoiceProfileFeeItemized")]
        public EntityCollection<CarrierInvoiceProfileFeeItemized> CarrierInvoiceProfileFeeItemizeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierInvoiceProfileFeeItemized>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "CarrierInvoiceProfileFeeItemized");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierInvoiceProfileFeeItemized>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_ExpenseType", "CarrierInvoiceProfileFeeItemized", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="FieldColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldColumn object.
        /// </summary>
        /// <param name="columnID">Initial value of the ColumnID property.</param>
        public static FieldColumn CreateFieldColumn(global::System.Int32 columnID)
        {
            FieldColumn fieldColumn = new FieldColumn();
            fieldColumn.ColumnID = columnID;
            return fieldColumn;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColumnID
        {
            get
            {
                return _ColumnID;
            }
            set
            {
                if (_ColumnID != value)
                {
                    OnColumnIDChanging(value);
                    ReportPropertyChanging("ColumnID");
                    _ColumnID = StructuralObject.SetValidValue(value, "ColumnID");
                    ReportPropertyChanged("ColumnID");
                    OnColumnIDChanged();
                }
            }
        }
        private global::System.Int32 _ColumnID;
        partial void OnColumnIDChanging(global::System.Int32 value);
        partial void OnColumnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, true, "ColumnName");
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ImportField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportField object.
        /// </summary>
        /// <param name="fieldID">Initial value of the FieldID property.</param>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        public static ImportField CreateImportField(global::System.Int32 fieldID, global::System.String fieldName)
        {
            ImportField importField = new ImportField();
            importField.FieldID = fieldID;
            importField.FieldName = fieldName;
            return importField;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldID
        {
            get
            {
                return _FieldID;
            }
            set
            {
                if (_FieldID != value)
                {
                    OnFieldIDChanging(value);
                    ReportPropertyChanging("FieldID");
                    _FieldID = StructuralObject.SetValidValue(value, "FieldID");
                    ReportPropertyChanged("FieldID");
                    OnFieldIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldID;
        partial void OnFieldIDChanging(global::System.Int32 value);
        partial void OnFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                OnFieldNameChanging(value);
                ReportPropertyChanging("FieldName");
                _FieldName = StructuralObject.SetValidValue(value, false, "FieldName");
                ReportPropertyChanged("FieldName");
                OnFieldNameChanged();
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="InspectorMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InspectorMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InspectorMaster object.
        /// </summary>
        /// <param name="inspectorId">Initial value of the InspectorId property.</param>
        public static InspectorMaster CreateInspectorMaster(global::System.Int32 inspectorId)
        {
            InspectorMaster inspectorMaster = new InspectorMaster();
            inspectorMaster.InspectorId = inspectorId;
            return inspectorMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InspectorId
        {
            get
            {
                return _InspectorId;
            }
            set
            {
                if (_InspectorId != value)
                {
                    OnInspectorIdChanging(value);
                    ReportPropertyChanging("InspectorId");
                    _InspectorId = StructuralObject.SetValidValue(value, "InspectorId");
                    ReportPropertyChanged("InspectorId");
                    OnInspectorIdChanged();
                }
            }
        }
        private global::System.Int32 _InspectorId;
        partial void OnInspectorIdChanging(global::System.Int32 value);
        partial void OnInspectorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InspectorName
        {
            get
            {
                return _InspectorName;
            }
            set
            {
                OnInspectorNameChanging(value);
                ReportPropertyChanging("InspectorName");
                _InspectorName = StructuralObject.SetValidValue(value, true, "InspectorName");
                ReportPropertyChanged("InspectorName");
                OnInspectorNameChanged();
            }
        }
        private global::System.String _InspectorName;
        partial void OnInspectorNameChanging(global::System.String value);
        partial void OnInspectorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadInspectorName", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadInspectorName", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadInspectorName", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="InsuranceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static InsuranceType CreateInsuranceType(global::System.Int32 id)
        {
            InsuranceType insuranceType = new InsuranceType();
            insuranceType.ID = id;
            return insuranceType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, "isActive");
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadContactInsuranceType", "LeadContact")]
        public EntityCollection<LeadContact> LeadContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadContact>("CRMModel.fk_LeadContactInsuranceType", "LeadContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadContact>("CRMModel.fk_LeadContactInsuranceType", "LeadContact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Invitee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitee object.
        /// </summary>
        /// <param name="inviteeID">Initial value of the InviteeID property.</param>
        public static Invitee CreateInvitee(global::System.Int32 inviteeID)
        {
            Invitee invitee = new Invitee();
            invitee.InviteeID = inviteeID;
            return invitee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InviteeID
        {
            get
            {
                return _InviteeID;
            }
            set
            {
                if (_InviteeID != value)
                {
                    OnInviteeIDChanging(value);
                    ReportPropertyChanging("InviteeID");
                    _InviteeID = StructuralObject.SetValidValue(value, "InviteeID");
                    ReportPropertyChanged("InviteeID");
                    OnInviteeIDChanged();
                }
            }
        }
        private global::System.Int32 _InviteeID;
        partial void OnInviteeIDChanging(global::System.Int32 value);
        partial void OnInviteeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskID;
        partial void OnTaskIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadID
        {
            get
            {
                return _LeadID;
            }
            set
            {
                OnLeadIDChanging(value);
                ReportPropertyChanging("LeadID");
                _LeadID = StructuralObject.SetValidValue(value, "LeadID");
                ReportPropertyChanged("LeadID");
                OnLeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadID;
        partial void OnLeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_Invitee_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_Invitee_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("CRMModel.FK_Invitee_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("CRMModel.FK_Invitee_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_Leads", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_Invitee_Leads", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_Invitee_Leads", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_Invitee_Leads", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.FK_Invitee_Leads", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Invitee_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Invitee_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_Invitee_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_Invitee_SecUser", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_Task", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CRMModel.FK_Invitee_Task", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CRMModel.FK_Invitee_Task", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CRMModel.FK_Invitee_Task", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("CRMModel.FK_Invitee_Task", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invoice object.
        /// </summary>
        /// <param name="invoiceID">Initial value of the InvoiceID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="isVoid">Initial value of the IsVoid property.</param>
        /// <param name="taxRate">Initial value of the TaxRate property.</param>
        public static Invoice CreateInvoice(global::System.Int32 invoiceID, global::System.Int32 claimID, global::System.Boolean isVoid, global::System.Decimal taxRate)
        {
            Invoice invoice = new Invoice();
            invoice.InvoiceID = invoiceID;
            invoice.ClaimID = claimID;
            invoice.IsVoid = isVoid;
            invoice.TaxRate = taxRate;
            return invoice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                if (_InvoiceID != value)
                {
                    OnInvoiceIDChanging(value);
                    ReportPropertyChanging("InvoiceID");
                    _InvoiceID = StructuralObject.SetValidValue(value, "InvoiceID");
                    ReportPropertyChanged("InvoiceID");
                    OnInvoiceIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceID;
        partial void OnInvoiceIDChanging(global::System.Int32 value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value, "TotalAmount");
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalAmount;
        partial void OnTotalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToName
        {
            get
            {
                return _BillToName;
            }
            set
            {
                OnBillToNameChanging(value);
                ReportPropertyChanging("BillToName");
                _BillToName = StructuralObject.SetValidValue(value, true, "BillToName");
                ReportPropertyChanged("BillToName");
                OnBillToNameChanged();
            }
        }
        private global::System.String _BillToName;
        partial void OnBillToNameChanging(global::System.String value);
        partial void OnBillToNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress1
        {
            get
            {
                return _BillToAddress1;
            }
            set
            {
                OnBillToAddress1Changing(value);
                ReportPropertyChanging("BillToAddress1");
                _BillToAddress1 = StructuralObject.SetValidValue(value, true, "BillToAddress1");
                ReportPropertyChanged("BillToAddress1");
                OnBillToAddress1Changed();
            }
        }
        private global::System.String _BillToAddress1;
        partial void OnBillToAddress1Changing(global::System.String value);
        partial void OnBillToAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress2
        {
            get
            {
                return _BillToAddress2;
            }
            set
            {
                OnBillToAddress2Changing(value);
                ReportPropertyChanging("BillToAddress2");
                _BillToAddress2 = StructuralObject.SetValidValue(value, true, "BillToAddress2");
                ReportPropertyChanged("BillToAddress2");
                OnBillToAddress2Changed();
            }
        }
        private global::System.String _BillToAddress2;
        partial void OnBillToAddress2Changing(global::System.String value);
        partial void OnBillToAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress3
        {
            get
            {
                return _BillToAddress3;
            }
            set
            {
                OnBillToAddress3Changing(value);
                ReportPropertyChanging("BillToAddress3");
                _BillToAddress3 = StructuralObject.SetValidValue(value, true, "BillToAddress3");
                ReportPropertyChanged("BillToAddress3");
                OnBillToAddress3Changed();
            }
        }
        private global::System.String _BillToAddress3;
        partial void OnBillToAddress3Changing(global::System.String value);
        partial void OnBillToAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value, "InvoiceNumber");
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceNumber;
        partial void OnInvoiceNumberChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceTypeID
        {
            get
            {
                return _InvoiceTypeID;
            }
            set
            {
                OnInvoiceTypeIDChanging(value);
                ReportPropertyChanging("InvoiceTypeID");
                _InvoiceTypeID = StructuralObject.SetValidValue(value, "InvoiceTypeID");
                ReportPropertyChanged("InvoiceTypeID");
                OnInvoiceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceTypeID;
        partial void OnInvoiceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                OnCarrierInvoiceProfileIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileID");
                _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                ReportPropertyChanged("CarrierInvoiceProfileID");
                OnCarrierInvoiceProfileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierInvoiceProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVoid
        {
            get
            {
                return _IsVoid;
            }
            set
            {
                OnIsVoidChanging(value);
                ReportPropertyChanging("IsVoid");
                _IsVoid = StructuralObject.SetValidValue(value, "IsVoid");
                ReportPropertyChanged("IsVoid");
                OnIsVoidChanged();
            }
        }
        private global::System.Boolean _IsVoid;
        partial void OnIsVoidChanging(global::System.Boolean value);
        partial void OnIsVoidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                OnTaxRateChanging(value);
                ReportPropertyChanging("TaxRate");
                _TaxRate = StructuralObject.SetValidValue(value, "TaxRate");
                ReportPropertyChanged("TaxRate");
                OnTaxRateChanged();
            }
        }
        private global::System.Decimal _TaxRate;
        partial void OnTaxRateChanging(global::System.Decimal value);
        partial void OnTaxRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApprove
        {
            get
            {
                return _IsApprove;
            }
            set
            {
                OnIsApproveChanging(value);
                ReportPropertyChanging("IsApprove");
                _IsApprove = StructuralObject.SetValidValue(value, "IsApprove");
                ReportPropertyChanged("IsApprove");
                OnIsApproveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApprove;
        partial void OnIsApproveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApproveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invoice_CarrierInvoiceType", "CarrierInvoiceType")]
        public CarrierInvoiceType CarrierInvoiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_Invoice_CarrierInvoiceType", "CarrierInvoiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_Invoice_CarrierInvoiceType", "CarrierInvoiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceType> CarrierInvoiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_Invoice_CarrierInvoiceType", "CarrierInvoiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceType>("CRMModel.FK_Invoice_CarrierInvoiceType", "CarrierInvoiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_InvoiceDetail_Invoice", "InvoiceDetail")]
        public EntityCollection<InvoiceDetail> InvoiceDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceDetail>("CRMModel.FK_InvoiceDetail_Invoice", "InvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceDetail>("CRMModel.FK_InvoiceDetail_Invoice", "InvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invoice_CarrierInvoiceProfile", "CarrierInvoiceProfile")]
        public CarrierInvoiceProfile CarrierInvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_Invoice_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_Invoice_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceProfile> CarrierInvoiceProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_Invoice_CarrierInvoiceProfile", "CarrierInvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_Invoice_CarrierInvoiceProfile", "CarrierInvoiceProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invoice_Claim", "Claim")]
        public Claim Claim
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_Invoice_Claim", "Claim").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_Invoice_Claim", "Claim").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Claim> ClaimReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Claim>("CRMModel.FK_Invoice_Claim", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Claim>("CRMModel.FK_Invoice_Claim", "Claim", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="InvoiceDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceDetail object.
        /// </summary>
        /// <param name="invoiceLineID">Initial value of the InvoiceLineID property.</param>
        public static InvoiceDetail CreateInvoiceDetail(global::System.Int32 invoiceLineID)
        {
            InvoiceDetail invoiceDetail = new InvoiceDetail();
            invoiceDetail.InvoiceLineID = invoiceLineID;
            return invoiceDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceLineID
        {
            get
            {
                return _InvoiceLineID;
            }
            set
            {
                if (_InvoiceLineID != value)
                {
                    OnInvoiceLineIDChanging(value);
                    ReportPropertyChanging("InvoiceLineID");
                    _InvoiceLineID = StructuralObject.SetValidValue(value, "InvoiceLineID");
                    ReportPropertyChanged("InvoiceLineID");
                    OnInvoiceLineIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceLineID;
        partial void OnInvoiceLineIDChanging(global::System.Int32 value);
        partial void OnInvoiceLineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                OnInvoiceIDChanging(value);
                ReportPropertyChanging("InvoiceID");
                _InvoiceID = StructuralObject.SetValidValue(value, "InvoiceID");
                ReportPropertyChanged("InvoiceID");
                OnInvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceID;
        partial void OnInvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LineDescription
        {
            get
            {
                return _LineDescription;
            }
            set
            {
                OnLineDescriptionChanging(value);
                ReportPropertyChanging("LineDescription");
                _LineDescription = StructuralObject.SetValidValue(value, true, "LineDescription");
                ReportPropertyChanged("LineDescription");
                OnLineDescriptionChanged();
            }
        }
        private global::System.String _LineDescription;
        partial void OnLineDescriptionChanging(global::System.String value);
        partial void OnLineDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineAmount
        {
            get
            {
                return _LineAmount;
            }
            set
            {
                OnLineAmountChanging(value);
                ReportPropertyChanging("LineAmount");
                _LineAmount = StructuralObject.SetValidValue(value, "LineAmount");
                ReportPropertyChanged("LineAmount");
                OnLineAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineAmount;
        partial void OnLineAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnitID
        {
            get
            {
                return _UnitID;
            }
            set
            {
                OnUnitIDChanging(value);
                ReportPropertyChanging("UnitID");
                _UnitID = StructuralObject.SetValidValue(value, "UnitID");
                ReportPropertyChanged("UnitID");
                OnUnitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UnitID;
        partial void OnUnitIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isBillable
        {
            get
            {
                return _isBillable;
            }
            set
            {
                OnisBillableChanging(value);
                ReportPropertyChanging("isBillable");
                _isBillable = StructuralObject.SetValidValue(value, "isBillable");
                ReportPropertyChanged("isBillable");
                OnisBillableChanged();
            }
        }
        private Nullable<global::System.Boolean> _isBillable;
        partial void OnisBillableChanging(Nullable<global::System.Boolean> value);
        partial void OnisBillableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value, "Rate");
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rate;
        partial void OnRateChanging(Nullable<global::System.Decimal> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescription
        {
            get
            {
                return _UnitDescription;
            }
            set
            {
                OnUnitDescriptionChanging(value);
                ReportPropertyChanging("UnitDescription");
                _UnitDescription = StructuralObject.SetValidValue(value, true, "UnitDescription");
                ReportPropertyChanged("UnitDescription");
                OnUnitDescriptionChanged();
            }
        }
        private global::System.String _UnitDescription;
        partial void OnUnitDescriptionChanging(global::System.String value);
        partial void OnUnitDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LineDate
        {
            get
            {
                return _LineDate;
            }
            set
            {
                OnLineDateChanging(value);
                ReportPropertyChanging("LineDate");
                _LineDate = StructuralObject.SetValidValue(value, "LineDate");
                ReportPropertyChanged("LineDate");
                OnLineDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LineDate;
        partial void OnLineDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLineDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                OnServiceTypeIDChanging(value);
                ReportPropertyChanging("ServiceTypeID");
                _ServiceTypeID = StructuralObject.SetValidValue(value, "ServiceTypeID");
                ReportPropertyChanged("ServiceTypeID");
                OnServiceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceTypeID;
        partial void OnServiceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value, "Qty");
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _Qty;
        partial void OnQtyChanging(Nullable<global::System.Decimal> value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total;
        partial void OnTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true, "Comments");
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpenseTypeID
        {
            get
            {
                return _ExpenseTypeID;
            }
            set
            {
                OnExpenseTypeIDChanging(value);
                ReportPropertyChanging("ExpenseTypeID");
                _ExpenseTypeID = StructuralObject.SetValidValue(value, "ExpenseTypeID");
                ReportPropertyChanged("ExpenseTypeID");
                OnExpenseTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpenseTypeID;
        partial void OnExpenseTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnExpenseTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_InvoiceDetail_Invoice", "Invoice")]
        public Invoice Invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CRMModel.FK_InvoiceDetail_Invoice", "Invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CRMModel.FK_InvoiceDetail_Invoice", "Invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Invoice> InvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Invoice>("CRMModel.FK_InvoiceDetail_Invoice", "Invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Invoice>("CRMModel.FK_InvoiceDetail_Invoice", "Invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceServiceUnit")]
        public InvoiceServiceUnit InvoiceServiceUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceUnit>("CRMModel.FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceServiceUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceUnit>("CRMModel.FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceServiceUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceServiceUnit> InvoiceServiceUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceUnit>("CRMModel.FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceServiceUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceServiceUnit>("CRMModel.FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceServiceUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_InvoiceDetail_InvoiceServiceType", "InvoiceServiceType")]
        public InvoiceServiceType InvoiceServiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_InvoiceDetail_InvoiceServiceType", "InvoiceServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_InvoiceDetail_InvoiceServiceType", "InvoiceServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceServiceType> InvoiceServiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.FK_InvoiceDetail_InvoiceServiceType", "InvoiceServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceServiceType>("CRMModel.FK_InvoiceDetail_InvoiceServiceType", "InvoiceServiceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="InvoiceServiceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceServiceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceServiceType object.
        /// </summary>
        /// <param name="serviceTypeID">Initial value of the ServiceTypeID property.</param>
        public static InvoiceServiceType CreateInvoiceServiceType(global::System.Int32 serviceTypeID)
        {
            InvoiceServiceType invoiceServiceType = new InvoiceServiceType();
            invoiceServiceType.ServiceTypeID = serviceTypeID;
            return invoiceServiceType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                if (_ServiceTypeID != value)
                {
                    OnServiceTypeIDChanging(value);
                    ReportPropertyChanging("ServiceTypeID");
                    _ServiceTypeID = StructuralObject.SetValidValue(value, "ServiceTypeID");
                    ReportPropertyChanged("ServiceTypeID");
                    OnServiceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ServiceTypeID;
        partial void OnServiceTypeIDChanging(global::System.Int32 value);
        partial void OnServiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceDescription
        {
            get
            {
                return _ServiceDescription;
            }
            set
            {
                OnServiceDescriptionChanging(value);
                ReportPropertyChanging("ServiceDescription");
                _ServiceDescription = StructuralObject.SetValidValue(value, true, "ServiceDescription");
                ReportPropertyChanged("ServiceDescription");
                OnServiceDescriptionChanged();
            }
        }
        private global::System.String _ServiceDescription;
        partial void OnServiceDescriptionChanging(global::System.String value);
        partial void OnServiceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ServiceRate
        {
            get
            {
                return _ServiceRate;
            }
            set
            {
                OnServiceRateChanging(value);
                ReportPropertyChanging("ServiceRate");
                _ServiceRate = StructuralObject.SetValidValue(value, "ServiceRate");
                ReportPropertyChanged("ServiceRate");
                OnServiceRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _ServiceRate;
        partial void OnServiceRateChanging(Nullable<global::System.Decimal> value);
        partial void OnServiceRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnitID
        {
            get
            {
                return _UnitID;
            }
            set
            {
                OnUnitIDChanging(value);
                ReportPropertyChanging("UnitID");
                _UnitID = StructuralObject.SetValidValue(value, "UnitID");
                ReportPropertyChanged("UnitID");
                OnUnitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UnitID;
        partial void OnUnitIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, "isActive");
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ServicePercentage
        {
            get
            {
                return _ServicePercentage;
            }
            set
            {
                OnServicePercentageChanging(value);
                ReportPropertyChanging("ServicePercentage");
                _ServicePercentage = StructuralObject.SetValidValue(value, "ServicePercentage");
                ReportPropertyChanged("ServicePercentage");
                OnServicePercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _ServicePercentage;
        partial void OnServicePercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnServicePercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MinimumFee
        {
            get
            {
                return _MinimumFee;
            }
            set
            {
                OnMinimumFeeChanging(value);
                ReportPropertyChanging("MinimumFee");
                _MinimumFee = StructuralObject.SetValidValue(value, "MinimumFee");
                ReportPropertyChanged("MinimumFee");
                OnMinimumFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _MinimumFee;
        partial void OnMinimumFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnMinimumFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsTaxable
        {
            get
            {
                return _IsTaxable;
            }
            set
            {
                OnIsTaxableChanging(value);
                ReportPropertyChanging("IsTaxable");
                _IsTaxable = StructuralObject.SetValidValue(value, "IsTaxable");
                ReportPropertyChanged("IsTaxable");
                OnIsTaxableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsTaxable;
        partial void OnIsTaxableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsTaxableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DefaultQty
        {
            get
            {
                return _DefaultQty;
            }
            set
            {
                OnDefaultQtyChanging(value);
                ReportPropertyChanging("DefaultQty");
                _DefaultQty = StructuralObject.SetValidValue(value, "DefaultQty");
                ReportPropertyChanged("DefaultQty");
                OnDefaultQtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _DefaultQty;
        partial void OnDefaultQtyChanging(Nullable<global::System.Decimal> value);
        partial void OnDefaultQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EarningCode
        {
            get
            {
                return _EarningCode;
            }
            set
            {
                OnEarningCodeChanging(value);
                ReportPropertyChanging("EarningCode");
                _EarningCode = StructuralObject.SetValidValue(value, true, "EarningCode");
                ReportPropertyChanged("EarningCode");
                OnEarningCodeChanged();
            }
        }
        private global::System.String _EarningCode;
        partial void OnEarningCodeChanging(global::System.String value);
        partial void OnEarningCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_InvoiceDetail_InvoiceServiceType", "InvoiceDetail")]
        public EntityCollection<InvoiceDetail> InvoiceDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceDetail>("CRMModel.FK_InvoiceDetail_InvoiceServiceType", "InvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceDetail>("CRMModel.FK_InvoiceDetail_InvoiceServiceType", "InvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceUnit")]
        public InvoiceServiceUnit InvoiceServiceUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceUnit>("CRMModel.fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceUnit>("CRMModel.fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceServiceUnit> InvoiceServiceUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceUnit>("CRMModel.fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceServiceUnit>("CRMModel.fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadInvoiceDetail_ServiceType", "LeadInvoiceDetail")]
        public EntityCollection<LeadInvoiceDetail> LeadInvoiceDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoiceDetail>("CRMModel.fk_LeadInvoiceDetail_ServiceType", "LeadInvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoiceDetail>("CRMModel.fk_LeadInvoiceDetail_ServiceType", "LeadInvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_InvoiceServiceType", "ClaimService")]
        public EntityCollection<ClaimService> ClaimServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_InvoiceServiceType", "ClaimService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_InvoiceServiceType", "ClaimService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "CarrierInvoiceProfileFeeItemized")]
        public EntityCollection<CarrierInvoiceProfileFeeItemized> CarrierInvoiceProfileFeeItemizeds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierInvoiceProfileFeeItemized>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "CarrierInvoiceProfileFeeItemized");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierInvoiceProfileFeeItemized>("CRMModel.FK_CarrierInvoiceProfileFeeItemized_InvoiceServiceType", "CarrierInvoiceProfileFeeItemized", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="InvoiceServiceUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceServiceUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceServiceUnit object.
        /// </summary>
        /// <param name="unitID">Initial value of the UnitID property.</param>
        public static InvoiceServiceUnit CreateInvoiceServiceUnit(global::System.Int32 unitID)
        {
            InvoiceServiceUnit invoiceServiceUnit = new InvoiceServiceUnit();
            invoiceServiceUnit.UnitID = unitID;
            return invoiceServiceUnit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitID
        {
            get
            {
                return _UnitID;
            }
            set
            {
                if (_UnitID != value)
                {
                    OnUnitIDChanging(value);
                    ReportPropertyChanging("UnitID");
                    _UnitID = StructuralObject.SetValidValue(value, "UnitID");
                    ReportPropertyChanged("UnitID");
                    OnUnitIDChanged();
                }
            }
        }
        private global::System.Int32 _UnitID;
        partial void OnUnitIDChanging(global::System.Int32 value);
        partial void OnUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescription
        {
            get
            {
                return _UnitDescription;
            }
            set
            {
                OnUnitDescriptionChanging(value);
                ReportPropertyChanging("UnitDescription");
                _UnitDescription = StructuralObject.SetValidValue(value, true, "UnitDescription");
                ReportPropertyChanged("UnitDescription");
                OnUnitDescriptionChanged();
            }
        }
        private global::System.String _UnitDescription;
        partial void OnUnitDescriptionChanging(global::System.String value);
        partial void OnUnitDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceDetail")]
        public EntityCollection<InvoiceDetail> InvoiceDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceDetail>("CRMModel.FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceDetail>("CRMModel.FK_InvoiceDetail_InvoiceServiceUnit", "InvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceType")]
        public EntityCollection<InvoiceServiceType> InvoiceServiceTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceServiceType>("CRMModel.fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceServiceType>("CRMModel.fk_InvoiceServiceType_InvoiceServiceUnit", "InvoiceServiceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Lead")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lead : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lead object.
        /// </summary>
        /// <param name="leadId">Initial value of the LeadId property.</param>
        public static Lead CreateLead(global::System.Int32 leadId)
        {
            Lead lead = new Lead();
            lead.LeadId = leadId;
            return lead;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                if (_LeadId != value)
                {
                    OnLeadIdChanging(value);
                    ReportPropertyChanging("LeadId");
                    _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                    ReportPropertyChanged("LeadId");
                    OnLeadIdChanged();
                }
            }
        }
        private global::System.Int32 _LeadId;
        partial void OnLeadIdChanging(global::System.Int32 value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSubmitted
        {
            get
            {
                return _DateSubmitted;
            }
            set
            {
                OnDateSubmittedChanging(value);
                ReportPropertyChanging("DateSubmitted");
                _DateSubmitted = StructuralObject.SetValidValue(value, "DateSubmitted");
                ReportPropertyChanged("DateSubmitted");
                OnDateSubmittedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSubmitted;
        partial void OnDateSubmittedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSubmittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LFUUID
        {
            get
            {
                return _LFUUID;
            }
            set
            {
                OnLFUUIDChanging(value);
                ReportPropertyChanging("LFUUID");
                _LFUUID = StructuralObject.SetValidValue(value, true, "LFUUID");
                ReportPropertyChanged("LFUUID");
                OnLFUUIDChanged();
            }
        }
        private global::System.String _LFUUID;
        partial void OnLFUUIDChanging(global::System.String value);
        partial void OnLFUUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalLeadDate
        {
            get
            {
                return _OriginalLeadDate;
            }
            set
            {
                OnOriginalLeadDateChanging(value);
                ReportPropertyChanging("OriginalLeadDate");
                _OriginalLeadDate = StructuralObject.SetValidValue(value, "OriginalLeadDate");
                ReportPropertyChanged("OriginalLeadDate");
                OnOriginalLeadDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalLeadDate;
        partial void OnOriginalLeadDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalLeadDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClaimsNumber
        {
            get
            {
                return _ClaimsNumber;
            }
            set
            {
                OnClaimsNumberChanging(value);
                ReportPropertyChanging("ClaimsNumber");
                _ClaimsNumber = StructuralObject.SetValidValue(value, "ClaimsNumber");
                ReportPropertyChanged("ClaimsNumber");
                OnClaimsNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _ClaimsNumber;
        partial void OnClaimsNumberChanging(Nullable<global::System.Int32> value);
        partial void OnClaimsNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimantFirstName
        {
            get
            {
                return _ClaimantFirstName;
            }
            set
            {
                OnClaimantFirstNameChanging(value);
                ReportPropertyChanging("ClaimantFirstName");
                _ClaimantFirstName = StructuralObject.SetValidValue(value, true, "ClaimantFirstName");
                ReportPropertyChanged("ClaimantFirstName");
                OnClaimantFirstNameChanged();
            }
        }
        private global::System.String _ClaimantFirstName;
        partial void OnClaimantFirstNameChanging(global::System.String value);
        partial void OnClaimantFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimantLastName
        {
            get
            {
                return _ClaimantLastName;
            }
            set
            {
                OnClaimantLastNameChanging(value);
                ReportPropertyChanging("ClaimantLastName");
                _ClaimantLastName = StructuralObject.SetValidValue(value, true, "ClaimantLastName");
                ReportPropertyChanged("ClaimantLastName");
                OnClaimantLastNameChanged();
            }
        }
        private global::System.String _ClaimantLastName;
        partial void OnClaimantLastNameChanging(global::System.String value);
        partial void OnClaimantLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true, "EmailAddress");
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadSource
        {
            get
            {
                return _LeadSource;
            }
            set
            {
                OnLeadSourceChanging(value);
                ReportPropertyChanging("LeadSource");
                _LeadSource = StructuralObject.SetValidValue(value, "LeadSource");
                ReportPropertyChanged("LeadSource");
                OnLeadSourceChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadSource;
        partial void OnLeadSourceChanging(Nullable<global::System.Int32> value);
        partial void OnLeadSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryProducerId
        {
            get
            {
                return _PrimaryProducerId;
            }
            set
            {
                OnPrimaryProducerIdChanging(value);
                ReportPropertyChanging("PrimaryProducerId");
                _PrimaryProducerId = StructuralObject.SetValidValue(value, "PrimaryProducerId");
                ReportPropertyChanged("PrimaryProducerId");
                OnPrimaryProducerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryProducerId;
        partial void OnPrimaryProducerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryProducerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SecondaryProducerId
        {
            get
            {
                return _SecondaryProducerId;
            }
            set
            {
                OnSecondaryProducerIdChanging(value);
                ReportPropertyChanging("SecondaryProducerId");
                _SecondaryProducerId = StructuralObject.SetValidValue(value, "SecondaryProducerId");
                ReportPropertyChanged("SecondaryProducerId");
                OnSecondaryProducerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SecondaryProducerId;
        partial void OnSecondaryProducerIdChanging(Nullable<global::System.Int32> value);
        partial void OnSecondaryProducerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InspectorName
        {
            get
            {
                return _InspectorName;
            }
            set
            {
                OnInspectorNameChanging(value);
                ReportPropertyChanging("InspectorName");
                _InspectorName = StructuralObject.SetValidValue(value, "InspectorName");
                ReportPropertyChanged("InspectorName");
                OnInspectorNameChanged();
            }
        }
        private Nullable<global::System.Int32> _InspectorName;
        partial void OnInspectorNameChanging(Nullable<global::System.Int32> value);
        partial void OnInspectorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InspectorCell
        {
            get
            {
                return _InspectorCell;
            }
            set
            {
                OnInspectorCellChanging(value);
                ReportPropertyChanging("InspectorCell");
                _InspectorCell = StructuralObject.SetValidValue(value, true, "InspectorCell");
                ReportPropertyChanged("InspectorCell");
                OnInspectorCellChanged();
            }
        }
        private global::System.String _InspectorCell;
        partial void OnInspectorCellChanging(global::System.String value);
        partial void OnInspectorCellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InspectorEmail
        {
            get
            {
                return _InspectorEmail;
            }
            set
            {
                OnInspectorEmailChanging(value);
                ReportPropertyChanging("InspectorEmail");
                _InspectorEmail = StructuralObject.SetValidValue(value, true, "InspectorEmail");
                ReportPropertyChanged("InspectorEmail");
                OnInspectorEmailChanged();
            }
        }
        private global::System.String _InspectorEmail;
        partial void OnInspectorEmailChanging(global::System.String value);
        partial void OnInspectorEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WebformSource
        {
            get
            {
                return _WebformSource;
            }
            set
            {
                OnWebformSourceChanging(value);
                ReportPropertyChanging("WebformSource");
                _WebformSource = StructuralObject.SetValidValue(value, "WebformSource");
                ReportPropertyChanged("WebformSource");
                OnWebformSourceChanged();
            }
        }
        private Nullable<global::System.Int32> _WebformSource;
        partial void OnWebformSourceChanging(Nullable<global::System.Int32> value);
        partial void OnWebformSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimantComments
        {
            get
            {
                return _ClaimantComments;
            }
            set
            {
                OnClaimantCommentsChanging(value);
                ReportPropertyChanging("ClaimantComments");
                _ClaimantComments = StructuralObject.SetValidValue(value, true, "ClaimantComments");
                ReportPropertyChanged("ClaimantComments");
                OnClaimantCommentsChanged();
            }
        }
        private global::System.String _ClaimantComments;
        partial void OnClaimantCommentsChanging(global::System.String value);
        partial void OnClaimantCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeOfDamage
        {
            get
            {
                return _TypeOfDamage;
            }
            set
            {
                OnTypeOfDamageChanging(value);
                ReportPropertyChanging("TypeOfDamage");
                _TypeOfDamage = StructuralObject.SetValidValue(value, true, "TypeOfDamage");
                ReportPropertyChanged("TypeOfDamage");
                OnTypeOfDamageChanged();
            }
        }
        private global::System.String _TypeOfDamage;
        partial void OnTypeOfDamageChanging(global::System.String value);
        partial void OnTypeOfDamageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeOfProperty
        {
            get
            {
                return _TypeOfProperty;
            }
            set
            {
                OnTypeOfPropertyChanging(value);
                ReportPropertyChanging("TypeOfProperty");
                _TypeOfProperty = StructuralObject.SetValidValue(value, "TypeOfProperty");
                ReportPropertyChanged("TypeOfProperty");
                OnTypeOfPropertyChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeOfProperty;
        partial void OnTypeOfPropertyChanging(Nullable<global::System.Int32> value);
        partial void OnTypeOfPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MarketValue
        {
            get
            {
                return _MarketValue;
            }
            set
            {
                OnMarketValueChanging(value);
                ReportPropertyChanging("MarketValue");
                _MarketValue = StructuralObject.SetValidValue(value, "MarketValue");
                ReportPropertyChanged("MarketValue");
                OnMarketValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _MarketValue;
        partial void OnMarketValueChanging(Nullable<global::System.Decimal> value);
        partial void OnMarketValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossAddress
        {
            get
            {
                return _LossAddress;
            }
            set
            {
                OnLossAddressChanging(value);
                ReportPropertyChanging("LossAddress");
                _LossAddress = StructuralObject.SetValidValue(value, true, "LossAddress");
                ReportPropertyChanged("LossAddress");
                OnLossAddressChanged();
            }
        }
        private global::System.String _LossAddress;
        partial void OnLossAddressChanging(global::System.String value);
        partial void OnLossAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value, "CityId");
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StateId;
        partial void OnStateIdChanging(Nullable<global::System.Int32> value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true, "Zip");
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PropertyDamageEstimate
        {
            get
            {
                return _PropertyDamageEstimate;
            }
            set
            {
                OnPropertyDamageEstimateChanging(value);
                ReportPropertyChanging("PropertyDamageEstimate");
                _PropertyDamageEstimate = StructuralObject.SetValidValue(value, "PropertyDamageEstimate");
                ReportPropertyChanged("PropertyDamageEstimate");
                OnPropertyDamageEstimateChanged();
            }
        }
        private Nullable<global::System.Decimal> _PropertyDamageEstimate;
        partial void OnPropertyDamageEstimateChanging(Nullable<global::System.Decimal> value);
        partial void OnPropertyDamageEstimateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Habitable
        {
            get
            {
                return _Habitable;
            }
            set
            {
                OnHabitableChanging(value);
                ReportPropertyChanging("Habitable");
                _Habitable = StructuralObject.SetValidValue(value, "Habitable");
                ReportPropertyChanged("Habitable");
                OnHabitableChanged();
            }
        }
        private Nullable<global::System.Int32> _Habitable;
        partial void OnHabitableChanging(Nullable<global::System.Int32> value);
        partial void OnHabitableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReporterToInsurer
        {
            get
            {
                return _ReporterToInsurer;
            }
            set
            {
                OnReporterToInsurerChanging(value);
                ReportPropertyChanging("ReporterToInsurer");
                _ReporterToInsurer = StructuralObject.SetValidValue(value, "ReporterToInsurer");
                ReportPropertyChanged("ReporterToInsurer");
                OnReporterToInsurerChanged();
            }
        }
        private Nullable<global::System.Int32> _ReporterToInsurer;
        partial void OnReporterToInsurerChanging(Nullable<global::System.Int32> value);
        partial void OnReporterToInsurerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSubmitted
        {
            get
            {
                return _IsSubmitted;
            }
            set
            {
                OnIsSubmittedChanging(value);
                ReportPropertyChanging("IsSubmitted");
                _IsSubmitted = StructuralObject.SetValidValue(value, "IsSubmitted");
                ReportPropertyChanged("IsSubmitted");
                OnIsSubmittedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSubmitted;
        partial void OnIsSubmittedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSubmittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SiteLocation
        {
            get
            {
                return _SiteLocation;
            }
            set
            {
                OnSiteLocationChanging(value);
                ReportPropertyChanging("SiteLocation");
                _SiteLocation = StructuralObject.SetValidValue(value, "SiteLocation");
                ReportPropertyChanged("SiteLocation");
                OnSiteLocationChanged();
            }
        }
        private Nullable<global::System.Int32> _SiteLocation;
        partial void OnSiteLocationChanging(Nullable<global::System.Int32> value);
        partial void OnSiteLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineInfo
        {
            get
            {
                return _UpdateMachineInfo;
            }
            set
            {
                OnUpdateMachineInfoChanging(value);
                ReportPropertyChanging("UpdateMachineInfo");
                _UpdateMachineInfo = StructuralObject.SetValidValue(value, true, "UpdateMachineInfo");
                ReportPropertyChanged("UpdateMachineInfo");
                OnUpdateMachineInfoChanged();
            }
        }
        private global::System.String _UpdateMachineInfo;
        partial void OnUpdateMachineInfoChanging(global::System.String value);
        partial void OnUpdateMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SiteSurveyDate
        {
            get
            {
                return _SiteSurveyDate;
            }
            set
            {
                OnSiteSurveyDateChanging(value);
                ReportPropertyChanging("SiteSurveyDate");
                _SiteSurveyDate = StructuralObject.SetValidValue(value, "SiteSurveyDate");
                ReportPropertyChanged("SiteSurveyDate");
                OnSiteSurveyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SiteSurveyDate;
        partial void OnSiteSurveyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSiteSurveyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimantAddress
        {
            get
            {
                return _ClaimantAddress;
            }
            set
            {
                OnClaimantAddressChanging(value);
                ReportPropertyChanging("ClaimantAddress");
                _ClaimantAddress = StructuralObject.SetValidValue(value, true, "ClaimantAddress");
                ReportPropertyChanged("ClaimantAddress");
                OnClaimantAddressChanged();
            }
        }
        private global::System.String _ClaimantAddress;
        partial void OnClaimantAddressChanging(global::System.String value);
        partial void OnClaimantAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastContactDate
        {
            get
            {
                return _LastContactDate;
            }
            set
            {
                OnLastContactDateChanging(value);
                ReportPropertyChanging("LastContactDate");
                _LastContactDate = StructuralObject.SetValidValue(value, "LastContactDate");
                ReportPropertyChanged("LastContactDate");
                OnLastContactDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastContactDate;
        partial void OnLastContactDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastContactDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerFirstName
        {
            get
            {
                return _OwnerFirstName;
            }
            set
            {
                OnOwnerFirstNameChanging(value);
                ReportPropertyChanging("OwnerFirstName");
                _OwnerFirstName = StructuralObject.SetValidValue(value, true, "OwnerFirstName");
                ReportPropertyChanged("OwnerFirstName");
                OnOwnerFirstNameChanged();
            }
        }
        private global::System.String _OwnerFirstName;
        partial void OnOwnerFirstNameChanging(global::System.String value);
        partial void OnOwnerFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerLastName
        {
            get
            {
                return _OwnerLastName;
            }
            set
            {
                OnOwnerLastNameChanging(value);
                ReportPropertyChanging("OwnerLastName");
                _OwnerLastName = StructuralObject.SetValidValue(value, true, "OwnerLastName");
                ReportPropertyChanged("OwnerLastName");
                OnOwnerLastNameChanged();
            }
        }
        private global::System.String _OwnerLastName;
        partial void OnOwnerLastNameChanging(global::System.String value);
        partial void OnOwnerLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerPhone
        {
            get
            {
                return _OwnerPhone;
            }
            set
            {
                OnOwnerPhoneChanging(value);
                ReportPropertyChanging("OwnerPhone");
                _OwnerPhone = StructuralObject.SetValidValue(value, true, "OwnerPhone");
                ReportPropertyChanged("OwnerPhone");
                OnOwnerPhoneChanged();
            }
        }
        private global::System.String _OwnerPhone;
        partial void OnOwnerPhoneChanging(global::System.String value);
        partial void OnOwnerPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryEmail
        {
            get
            {
                return _SecondaryEmail;
            }
            set
            {
                OnSecondaryEmailChanging(value);
                ReportPropertyChanging("SecondaryEmail");
                _SecondaryEmail = StructuralObject.SetValidValue(value, true, "SecondaryEmail");
                ReportPropertyChanged("SecondaryEmail");
                OnSecondaryEmailChanged();
            }
        }
        private global::System.String _SecondaryEmail;
        partial void OnSecondaryEmailChanging(global::System.String value);
        partial void OnSecondaryEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryPhone
        {
            get
            {
                return _SecondaryPhone;
            }
            set
            {
                OnSecondaryPhoneChanging(value);
                ReportPropertyChanging("SecondaryPhone");
                _SecondaryPhone = StructuralObject.SetValidValue(value, true, "SecondaryPhone");
                ReportPropertyChanged("SecondaryPhone");
                OnSecondaryPhoneChanged();
            }
        }
        private global::System.String _SecondaryPhone;
        partial void OnSecondaryPhoneChanging(global::System.String value);
        partial void OnSecondaryPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SiteInspectionCompleted
        {
            get
            {
                return _SiteInspectionCompleted;
            }
            set
            {
                OnSiteInspectionCompletedChanging(value);
                ReportPropertyChanging("SiteInspectionCompleted");
                _SiteInspectionCompleted = StructuralObject.SetValidValue(value, "SiteInspectionCompleted");
                ReportPropertyChanged("SiteInspectionCompleted");
                OnSiteInspectionCompletedChanged();
            }
        }
        private Nullable<global::System.Int32> _SiteInspectionCompleted;
        partial void OnSiteInspectionCompletedChanging(Nullable<global::System.Int32> value);
        partial void OnSiteInspectionCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OwnerSame
        {
            get
            {
                return _OwnerSame;
            }
            set
            {
                OnOwnerSameChanging(value);
                ReportPropertyChanging("OwnerSame");
                _OwnerSame = StructuralObject.SetValidValue(value, "OwnerSame");
                ReportPropertyChanged("OwnerSame");
                OnOwnerSameChanged();
            }
        }
        private Nullable<global::System.Int32> _OwnerSame;
        partial void OnOwnerSameChanging(Nullable<global::System.Int32> value);
        partial void OnOwnerSameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OtherSource
        {
            get
            {
                return _OtherSource;
            }
            set
            {
                OnOtherSourceChanging(value);
                ReportPropertyChanging("OtherSource");
                _OtherSource = StructuralObject.SetValidValue(value, "OtherSource");
                ReportPropertyChanged("OtherSource");
                OnOtherSourceChanged();
            }
        }
        private Nullable<global::System.Int32> _OtherSource;
        partial void OnOtherSourceChanging(Nullable<global::System.Int32> value);
        partial void OnOtherSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasInsurancePolicy
        {
            get
            {
                return _hasInsurancePolicy;
            }
            set
            {
                OnhasInsurancePolicyChanging(value);
                ReportPropertyChanging("hasInsurancePolicy");
                _hasInsurancePolicy = StructuralObject.SetValidValue(value, "hasInsurancePolicy");
                ReportPropertyChanged("hasInsurancePolicy");
                OnhasInsurancePolicyChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasInsurancePolicy;
        partial void OnhasInsurancePolicyChanging(Nullable<global::System.Boolean> value);
        partial void OnhasInsurancePolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasSignedRetainer
        {
            get
            {
                return _hasSignedRetainer;
            }
            set
            {
                OnhasSignedRetainerChanging(value);
                ReportPropertyChanging("hasSignedRetainer");
                _hasSignedRetainer = StructuralObject.SetValidValue(value, "hasSignedRetainer");
                ReportPropertyChanged("hasSignedRetainer");
                OnhasSignedRetainerChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasSignedRetainer;
        partial void OnhasSignedRetainerChanging(Nullable<global::System.Boolean> value);
        partial void OnhasSignedRetainerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasDamageReport
        {
            get
            {
                return _hasDamageReport;
            }
            set
            {
                OnhasDamageReportChanging(value);
                ReportPropertyChanging("hasDamageReport");
                _hasDamageReport = StructuralObject.SetValidValue(value, "hasDamageReport");
                ReportPropertyChanged("hasDamageReport");
                OnhasDamageReportChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasDamageReport;
        partial void OnhasDamageReportChanging(Nullable<global::System.Boolean> value);
        partial void OnhasDamageReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasDamagePhoto
        {
            get
            {
                return _hasDamagePhoto;
            }
            set
            {
                OnhasDamagePhotoChanging(value);
                ReportPropertyChanging("hasDamagePhoto");
                _hasDamagePhoto = StructuralObject.SetValidValue(value, "hasDamagePhoto");
                ReportPropertyChanged("hasDamagePhoto");
                OnhasDamagePhotoChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasDamagePhoto;
        partial void OnhasDamagePhotoChanging(Nullable<global::System.Boolean> value);
        partial void OnhasDamagePhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasCertifiedInsurancePolicy
        {
            get
            {
                return _hasCertifiedInsurancePolicy;
            }
            set
            {
                OnhasCertifiedInsurancePolicyChanging(value);
                ReportPropertyChanging("hasCertifiedInsurancePolicy");
                _hasCertifiedInsurancePolicy = StructuralObject.SetValidValue(value, "hasCertifiedInsurancePolicy");
                ReportPropertyChanged("hasCertifiedInsurancePolicy");
                OnhasCertifiedInsurancePolicyChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasCertifiedInsurancePolicy;
        partial void OnhasCertifiedInsurancePolicyChanging(Nullable<global::System.Boolean> value);
        partial void OnhasCertifiedInsurancePolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasOwnerContract
        {
            get
            {
                return _hasOwnerContract;
            }
            set
            {
                OnhasOwnerContractChanging(value);
                ReportPropertyChanging("hasOwnerContract");
                _hasOwnerContract = StructuralObject.SetValidValue(value, "hasOwnerContract");
                ReportPropertyChanged("hasOwnerContract");
                OnhasOwnerContractChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasOwnerContract;
        partial void OnhasOwnerContractChanging(Nullable<global::System.Boolean> value);
        partial void OnhasOwnerContractChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasContentList
        {
            get
            {
                return _hasContentList;
            }
            set
            {
                OnhasContentListChanging(value);
                ReportPropertyChanging("hasContentList");
                _hasContentList = StructuralObject.SetValidValue(value, "hasContentList");
                ReportPropertyChanged("hasContentList");
                OnhasContentListChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasContentList;
        partial void OnhasContentListChanging(Nullable<global::System.Boolean> value);
        partial void OnhasContentListChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> hasDamageEstimate
        {
            get
            {
                return _hasDamageEstimate;
            }
            set
            {
                OnhasDamageEstimateChanging(value);
                ReportPropertyChanging("hasDamageEstimate");
                _hasDamageEstimate = StructuralObject.SetValidValue(value, "hasDamageEstimate");
                ReportPropertyChanged("hasDamageEstimate");
                OnhasDamageEstimateChanged();
            }
        }
        private Nullable<global::System.Boolean> _hasDamageEstimate;
        partial void OnhasDamageEstimateChanging(Nullable<global::System.Boolean> value);
        partial void OnhasDamageEstimateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeofDamageText
        {
            get
            {
                return _TypeofDamageText;
            }
            set
            {
                OnTypeofDamageTextChanging(value);
                ReportPropertyChanging("TypeofDamageText");
                _TypeofDamageText = StructuralObject.SetValidValue(value, true, "TypeofDamageText");
                ReportPropertyChanged("TypeofDamageText");
                OnTypeofDamageTextChanged();
            }
        }
        private global::System.String _TypeofDamageText;
        partial void OnTypeofDamageTextChanging(global::System.String value);
        partial void OnTypeofDamageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, true, "BusinessName");
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HearAboutUsDetail
        {
            get
            {
                return _HearAboutUsDetail;
            }
            set
            {
                OnHearAboutUsDetailChanging(value);
                ReportPropertyChanging("HearAboutUsDetail");
                _HearAboutUsDetail = StructuralObject.SetValidValue(value, true, "HearAboutUsDetail");
                ReportPropertyChanged("HearAboutUsDetail");
                OnHearAboutUsDetailChanged();
            }
        }
        private global::System.String _HearAboutUsDetail;
        partial void OnHearAboutUsDetailChanging(global::System.String value);
        partial void OnHearAboutUsDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerEmail
        {
            get
            {
                return _OwnerEmail;
            }
            set
            {
                OnOwnerEmailChanging(value);
                ReportPropertyChanging("OwnerEmail");
                _OwnerEmail = StructuralObject.SetValidValue(value, true, "OwnerEmail");
                ReportPropertyChanged("OwnerEmail");
                OnOwnerEmailChanged();
            }
        }
        private global::System.String _OwnerEmail;
        partial void OnOwnerEmailChanging(global::System.String value);
        partial void OnOwnerEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossAddress2
        {
            get
            {
                return _LossAddress2;
            }
            set
            {
                OnLossAddress2Changing(value);
                ReportPropertyChanging("LossAddress2");
                _LossAddress2 = StructuralObject.SetValidValue(value, true, "LossAddress2");
                ReportPropertyChanged("LossAddress2");
                OnLossAddress2Changed();
            }
        }
        private global::System.String _LossAddress2;
        partial void OnLossAddress2Changing(global::System.String value);
        partial void OnLossAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UmpireID
        {
            get
            {
                return _UmpireID;
            }
            set
            {
                OnUmpireIDChanging(value);
                ReportPropertyChanging("UmpireID");
                _UmpireID = StructuralObject.SetValidValue(value, "UmpireID");
                ReportPropertyChanged("UmpireID");
                OnUmpireIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UmpireID;
        partial void OnUmpireIDChanging(Nullable<global::System.Int32> value);
        partial void OnUmpireIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorID
        {
            get
            {
                return _ContractorID;
            }
            set
            {
                OnContractorIDChanging(value);
                ReportPropertyChanging("ContractorID");
                _ContractorID = StructuralObject.SetValidValue(value, "ContractorID");
                ReportPropertyChanged("ContractorID");
                OnContractorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorID;
        partial void OnContractorIDChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AppraiserID
        {
            get
            {
                return _AppraiserID;
            }
            set
            {
                OnAppraiserIDChanging(value);
                ReportPropertyChanging("AppraiserID");
                _AppraiserID = StructuralObject.SetValidValue(value, "AppraiserID");
                ReportPropertyChanged("AppraiserID");
                OnAppraiserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AppraiserID;
        partial void OnAppraiserIDChanging(Nullable<global::System.Int32> value);
        partial void OnAppraiserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LossDate
        {
            get
            {
                return _LossDate;
            }
            set
            {
                OnLossDateChanging(value);
                ReportPropertyChanging("LossDate");
                _LossDate = StructuralObject.SetValidValue(value, "LossDate");
                ReportPropertyChanged("LossDate");
                OnLossDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LossDate;
        partial void OnLossDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLossDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, true, "StateName");
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingAddress
        {
            get
            {
                return _MailingAddress;
            }
            set
            {
                OnMailingAddressChanging(value);
                ReportPropertyChanging("MailingAddress");
                _MailingAddress = StructuralObject.SetValidValue(value, true, "MailingAddress");
                ReportPropertyChanged("MailingAddress");
                OnMailingAddressChanged();
            }
        }
        private global::System.String _MailingAddress;
        partial void OnMailingAddressChanging(global::System.String value);
        partial void OnMailingAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingCity
        {
            get
            {
                return _MailingCity;
            }
            set
            {
                OnMailingCityChanging(value);
                ReportPropertyChanging("MailingCity");
                _MailingCity = StructuralObject.SetValidValue(value, true, "MailingCity");
                ReportPropertyChanged("MailingCity");
                OnMailingCityChanged();
            }
        }
        private global::System.String _MailingCity;
        partial void OnMailingCityChanging(global::System.String value);
        partial void OnMailingCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingState
        {
            get
            {
                return _MailingState;
            }
            set
            {
                OnMailingStateChanging(value);
                ReportPropertyChanging("MailingState");
                _MailingState = StructuralObject.SetValidValue(value, true, "MailingState");
                ReportPropertyChanged("MailingState");
                OnMailingStateChanged();
            }
        }
        private global::System.String _MailingState;
        partial void OnMailingStateChanging(global::System.String value);
        partial void OnMailingStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingZip
        {
            get
            {
                return _MailingZip;
            }
            set
            {
                OnMailingZipChanging(value);
                ReportPropertyChanging("MailingZip");
                _MailingZip = StructuralObject.SetValidValue(value, true, "MailingZip");
                ReportPropertyChanged("MailingZip");
                OnMailingZipChanged();
            }
        }
        private global::System.String _MailingZip;
        partial void OnMailingZipChanging(global::System.String value);
        partial void OnMailingZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryLeadSource
        {
            get
            {
                return _SecondaryLeadSource;
            }
            set
            {
                OnSecondaryLeadSourceChanging(value);
                ReportPropertyChanging("SecondaryLeadSource");
                _SecondaryLeadSource = StructuralObject.SetValidValue(value, true, "SecondaryLeadSource");
                ReportPropertyChanged("SecondaryLeadSource");
                OnSecondaryLeadSourceChanged();
            }
        }
        private global::System.String _SecondaryLeadSource;
        partial void OnSecondaryLeadSourceChanging(global::System.String value);
        partial void OnSecondaryLeadSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value, "LastActivityDate");
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Salutation
        {
            get
            {
                return _Salutation;
            }
            set
            {
                OnSalutationChanging(value);
                ReportPropertyChanging("Salutation");
                _Salutation = StructuralObject.SetValidValue(value, true, "Salutation");
                ReportPropertyChanged("Salutation");
                OnSalutationChanged();
            }
        }
        private global::System.String _Salutation;
        partial void OnSalutationChanging(global::System.String value);
        partial void OnSalutationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimantMiddleName
        {
            get
            {
                return _ClaimantMiddleName;
            }
            set
            {
                OnClaimantMiddleNameChanging(value);
                ReportPropertyChanging("ClaimantMiddleName");
                _ClaimantMiddleName = StructuralObject.SetValidValue(value, true, "ClaimantMiddleName");
                ReportPropertyChanged("ClaimantMiddleName");
                OnClaimantMiddleNameChanged();
            }
        }
        private global::System.String _ClaimantMiddleName;
        partial void OnClaimantMiddleNameChanging(global::System.String value);
        partial void OnClaimantMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossLocation
        {
            get
            {
                return _LossLocation;
            }
            set
            {
                OnLossLocationChanging(value);
                ReportPropertyChanging("LossLocation");
                _LossLocation = StructuralObject.SetValidValue(value, true, "LossLocation");
                ReportPropertyChanged("LossLocation");
                OnLossLocationChanged();
            }
        }
        private global::System.String _LossLocation;
        partial void OnLossLocationChanging(global::System.String value);
        partial void OnLossLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ContractDate
        {
            get
            {
                return _ContractDate;
            }
            set
            {
                OnContractDateChanging(value);
                ReportPropertyChanging("ContractDate");
                _ContractDate = StructuralObject.SetValidValue(value, "ContractDate");
                ReportPropertyChanged("ContractDate");
                OnContractDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ContractDate;
        partial void OnContractDateChanging(Nullable<global::System.DateTime> value);
        partial void OnContractDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value, "Longitude");
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Longitude;
        partial void OnLongitudeChanging(Nullable<global::System.Double> value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value, "Latitude");
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private Nullable<global::System.Double> _Latitude;
        partial void OnLatitudeChanging(Nullable<global::System.Double> value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadStatus
        {
            get
            {
                return _LeadStatus;
            }
            set
            {
                OnLeadStatusChanging(value);
                ReportPropertyChanging("LeadStatus");
                _LeadStatus = StructuralObject.SetValidValue(value, "LeadStatus");
                ReportPropertyChanged("LeadStatus");
                OnLeadStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadStatus;
        partial void OnLeadStatusChanging(Nullable<global::System.Int32> value);
        partial void OnLeadStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Adjuster
        {
            get
            {
                return _Adjuster;
            }
            set
            {
                OnAdjusterChanging(value);
                ReportPropertyChanging("Adjuster");
                _Adjuster = StructuralObject.SetValidValue(value, "Adjuster");
                ReportPropertyChanged("Adjuster");
                OnAdjusterChanged();
            }
        }
        private Nullable<global::System.Int32> _Adjuster;
        partial void OnAdjusterChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WindPolicy
        {
            get
            {
                return _WindPolicy;
            }
            set
            {
                OnWindPolicyChanging(value);
                ReportPropertyChanging("WindPolicy");
                _WindPolicy = StructuralObject.SetValidValue(value, "WindPolicy");
                ReportPropertyChanged("WindPolicy");
                OnWindPolicyChanged();
            }
        }
        private Nullable<global::System.Int32> _WindPolicy;
        partial void OnWindPolicyChanging(Nullable<global::System.Int32> value);
        partial void OnWindPolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FloodPolicy
        {
            get
            {
                return _FloodPolicy;
            }
            set
            {
                OnFloodPolicyChanging(value);
                ReportPropertyChanging("FloodPolicy");
                _FloodPolicy = StructuralObject.SetValidValue(value, "FloodPolicy");
                ReportPropertyChanged("FloodPolicy");
                OnFloodPolicyChanged();
            }
        }
        private Nullable<global::System.Int32> _FloodPolicy;
        partial void OnFloodPolicyChanging(Nullable<global::System.Int32> value);
        partial void OnFloodPolicyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubStatus
        {
            get
            {
                return _SubStatus;
            }
            set
            {
                OnSubStatusChanging(value);
                ReportPropertyChanging("SubStatus");
                _SubStatus = StructuralObject.SetValidValue(value, "SubStatus");
                ReportPropertyChanged("SubStatus");
                OnSubStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _SubStatus;
        partial void OnSubStatusChanging(Nullable<global::System.Int32> value);
        partial void OnSubStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AllDocumentsOnFile
        {
            get
            {
                return _AllDocumentsOnFile;
            }
            set
            {
                OnAllDocumentsOnFileChanging(value);
                ReportPropertyChanging("AllDocumentsOnFile");
                _AllDocumentsOnFile = StructuralObject.SetValidValue(value, "AllDocumentsOnFile");
                ReportPropertyChanged("AllDocumentsOnFile");
                OnAllDocumentsOnFileChanged();
            }
        }
        private Nullable<global::System.Boolean> _AllDocumentsOnFile;
        partial void OnAllDocumentsOnFileChanging(Nullable<global::System.Boolean> value);
        partial void OnAllDocumentsOnFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuredName
        {
            get
            {
                return _InsuredName;
            }
            set
            {
                OnInsuredNameChanging(value);
                ReportPropertyChanging("InsuredName");
                _InsuredName = StructuralObject.SetValidValue(value, true, "InsuredName");
                ReportPropertyChanged("InsuredName");
                OnInsuredNameChanged();
            }
        }
        private global::System.String _InsuredName;
        partial void OnInsuredNameChanging(global::System.String value);
        partial void OnInsuredNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingCounty
        {
            get
            {
                return _MailingCounty;
            }
            set
            {
                OnMailingCountyChanging(value);
                ReportPropertyChanging("MailingCounty");
                _MailingCounty = StructuralObject.SetValidValue(value, true, "MailingCounty");
                ReportPropertyChanged("MailingCounty");
                OnMailingCountyChanged();
            }
        }
        private global::System.String _MailingCounty;
        partial void OnMailingCountyChanging(global::System.String value);
        partial void OnMailingCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingAddress2
        {
            get
            {
                return _MailingAddress2;
            }
            set
            {
                OnMailingAddress2Changing(value);
                ReportPropertyChanging("MailingAddress2");
                _MailingAddress2 = StructuralObject.SetValidValue(value, true, "MailingAddress2");
                ReportPropertyChanged("MailingAddress2");
                OnMailingAddress2Changed();
            }
        }
        private global::System.String _MailingAddress2;
        partial void OnMailingAddress2Changing(global::System.String value);
        partial void OnMailingAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossCounty
        {
            get
            {
                return _LossCounty;
            }
            set
            {
                OnLossCountyChanging(value);
                ReportPropertyChanging("LossCounty");
                _LossCounty = StructuralObject.SetValidValue(value, true, "LossCounty");
                ReportPropertyChanged("LossCounty");
                OnLossCountyChanged();
            }
        }
        private global::System.String _LossCounty;
        partial void OnLossCountyChanging(global::System.String value);
        partial void OnLossCountyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Appraiser", "AppraiserMaster")]
        public AppraiserMaster AppraiserMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppraiserMaster>("CRMModel.fk_Lead_Appraiser", "AppraiserMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppraiserMaster>("CRMModel.fk_Lead_Appraiser", "AppraiserMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AppraiserMaster> AppraiserMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AppraiserMaster>("CRMModel.fk_Lead_Appraiser", "AppraiserMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AppraiserMaster>("CRMModel.fk_Lead_Appraiser", "AppraiserMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadCityId", "CityMaster")]
        public CityMaster CityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_LeadCityId", "CityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_LeadCityId", "CityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityMaster> CityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_LeadCityId", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityMaster>("CRMModel.fk_LeadCityId", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_Lead_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_Lead_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_Lead_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.fk_Lead_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Contractor", "ContractorMaster")]
        public ContractorMaster ContractorMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorMaster>("CRMModel.fk_Lead_Contractor", "ContractorMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorMaster>("CRMModel.fk_Lead_Contractor", "ContractorMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractorMaster> ContractorMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractorMaster>("CRMModel.fk_Lead_Contractor", "ContractorMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractorMaster>("CRMModel.fk_Lead_Contractor", "ContractorMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadInspectorName", "InspectorMaster")]
        public InspectorMaster InspectorMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InspectorMaster>("CRMModel.fk_LeadInspectorName", "InspectorMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InspectorMaster>("CRMModel.fk_LeadInspectorName", "InspectorMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InspectorMaster> InspectorMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InspectorMaster>("CRMModel.fk_LeadInspectorName", "InspectorMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InspectorMaster>("CRMModel.fk_LeadInspectorName", "InspectorMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadComment", "LeadComment")]
        public EntityCollection<LeadComment> LeadComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadComment>("CRMModel.fk_LeadComment", "LeadComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadComment>("CRMModel.fk_LeadComment", "LeadComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Invoice_Lead", "LeadInvoice")]
        public EntityCollection<LeadInvoice> LeadInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoice>("CRMModel.fk_Invoice_Lead", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoice>("CRMModel.fk_Invoice_Lead", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicty", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicty", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicty", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicyLienholder_Lead", "LeadPolicyLienholder")]
        public EntityCollection<LeadPolicyLienholder> LeadPolicyLienholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicyLienholder>("CRMModel.fk_LeadPolicyLienholder_Lead", "LeadPolicyLienholder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicyLienholder>("CRMModel.fk_LeadPolicyLienholder_Lead", "LeadPolicyLienholder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CRMModel.fk_Lead", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CRMModel.fk_Lead", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Umpire", "UmpireMaster")]
        public UmpireMaster UmpireMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UmpireMaster>("CRMModel.fk_Lead_Umpire", "UmpireMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UmpireMaster>("CRMModel.fk_Lead_Umpire", "UmpireMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UmpireMaster> UmpireMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UmpireMaster>("CRMModel.fk_Lead_Umpire", "UmpireMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UmpireMaster>("CRMModel.fk_Lead_Umpire", "UmpireMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadOtherSource", "OtherSourceMaster")]
        public OtherSourceMaster OtherSourceMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OtherSourceMaster>("CRMModel.fk_LeadOtherSource", "OtherSourceMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OtherSourceMaster>("CRMModel.fk_LeadOtherSource", "OtherSourceMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OtherSourceMaster> OtherSourceMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OtherSourceMaster>("CRMModel.fk_LeadOtherSource", "OtherSourceMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OtherSourceMaster>("CRMModel.fk_LeadOtherSource", "OtherSourceMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadOwnerSame", "OwnerSameMaster")]
        public OwnerSameMaster OwnerSameMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnerSameMaster>("CRMModel.fk_LeadOwnerSame", "OwnerSameMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnerSameMaster>("CRMModel.fk_LeadOwnerSame", "OwnerSameMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OwnerSameMaster> OwnerSameMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OwnerSameMaster>("CRMModel.fk_LeadOwnerSame", "OwnerSameMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OwnerSameMaster>("CRMModel.fk_LeadOwnerSame", "OwnerSameMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadReporterToInsurer", "ReportedToInsurerMaster")]
        public ReportedToInsurerMaster ReportedToInsurerMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportedToInsurerMaster>("CRMModel.fk_LeadReporterToInsurer", "ReportedToInsurerMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportedToInsurerMaster>("CRMModel.fk_LeadReporterToInsurer", "ReportedToInsurerMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportedToInsurerMaster> ReportedToInsurerMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportedToInsurerMaster>("CRMModel.fk_LeadReporterToInsurer", "ReportedToInsurerMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportedToInsurerMaster>("CRMModel.fk_LeadReporterToInsurer", "ReportedToInsurerMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadsDocument", "LeadsDocument")]
        public EntityCollection<LeadsDocument> LeadsDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadsDocument>("CRMModel.FK_LeadsDocument", "LeadsDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadsDocument>("CRMModel.FK_LeadsDocument", "LeadsDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadsImage", "LeadsImage")]
        public EntityCollection<LeadsImage> LeadsImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadsImage>("CRMModel.FK_LeadsImage", "LeadsImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadsImage>("CRMModel.FK_LeadsImage", "LeadsImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadSiteInspectionCompleted", "SiteInspectionCompleteMaster")]
        public SiteInspectionCompleteMaster SiteInspectionCompleteMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiteInspectionCompleteMaster>("CRMModel.fk_LeadSiteInspectionCompleted", "SiteInspectionCompleteMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiteInspectionCompleteMaster>("CRMModel.fk_LeadSiteInspectionCompleted", "SiteInspectionCompleteMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SiteInspectionCompleteMaster> SiteInspectionCompleteMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SiteInspectionCompleteMaster>("CRMModel.fk_LeadSiteInspectionCompleted", "SiteInspectionCompleteMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SiteInspectionCompleteMaster>("CRMModel.fk_LeadSiteInspectionCompleted", "SiteInspectionCompleteMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadSource", "LeadSourceMaster")]
        public LeadSourceMaster LeadSourceMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadSourceMaster>("CRMModel.fk_LeadSource", "LeadSourceMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadSourceMaster>("CRMModel.fk_LeadSource", "LeadSourceMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadSourceMaster> LeadSourceMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadSourceMaster>("CRMModel.fk_LeadSource", "LeadSourceMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadSourceMaster>("CRMModel.fk_LeadSource", "LeadSourceMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadStateId", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_LeadStateId", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_LeadStateId", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_LeadStateId", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.fk_LeadStateId", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadTypeofProperty", "TypeOfPropertyMaster")]
        public TypeOfPropertyMaster TypeOfPropertyMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfPropertyMaster>("CRMModel.fk_LeadTypeofProperty", "TypeOfPropertyMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfPropertyMaster>("CRMModel.fk_LeadTypeofProperty", "TypeOfPropertyMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeOfPropertyMaster> TypeOfPropertyMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfPropertyMaster>("CRMModel.fk_LeadTypeofProperty", "TypeOfPropertyMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeOfPropertyMaster>("CRMModel.fk_LeadTypeofProperty", "TypeOfPropertyMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Ledger_Leads", "Ledger")]
        public EntityCollection<Ledger> Ledgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ledger>("CRMModel.FK_Ledger_Leads", "Ledger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ledger>("CRMModel.FK_Ledger_Leads", "Ledger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_PrimaryProducerId", "ProducerMaster")]
        public ProducerMaster ProducerMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProducerMaster>("CRMModel.fk_PrimaryProducerId", "ProducerMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProducerMaster>("CRMModel.fk_PrimaryProducerId", "ProducerMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProducerMaster> ProducerMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProducerMaster>("CRMModel.fk_PrimaryProducerId", "ProducerMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProducerMaster>("CRMModel.fk_PrimaryProducerId", "ProducerMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_SecondaryProducerId", "SecondaryProducerMaster")]
        public SecondaryProducerMaster SecondaryProducerMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecondaryProducerMaster>("CRMModel.fk_SecondaryProducerId", "SecondaryProducerMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecondaryProducerMaster>("CRMModel.fk_SecondaryProducerId", "SecondaryProducerMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecondaryProducerMaster> SecondaryProducerMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecondaryProducerMaster>("CRMModel.fk_SecondaryProducerId", "SecondaryProducerMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecondaryProducerMaster>("CRMModel.fk_SecondaryProducerId", "SecondaryProducerMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadUserId", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_LeadUserId", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_LeadUserId", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_LeadUserId", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.fk_LeadUserId", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadAdjuster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.fk_LeadAdjuster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.fk_LeadAdjuster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.fk_LeadAdjuster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.fk_LeadAdjuster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Status", "StatusMaster")]
        public StatusMaster StatusMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.fk_Lead_Status", "StatusMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.fk_Lead_Status", "StatusMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusMaster> StatusMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.fk_Lead_Status", "StatusMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusMaster>("CRMModel.fk_Lead_Status", "StatusMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadSubStatus", "SubStatusMaster")]
        public SubStatusMaster SubStatusMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.fk_LeadSubStatus", "SubStatusMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.fk_LeadSubStatus", "SubStatusMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubStatusMaster> SubStatusMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.fk_LeadSubStatus", "SubStatusMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubStatusMaster>("CRMModel.fk_LeadSubStatus", "SubStatusMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_Leads", "Invitee")]
        public EntityCollection<Invitee> Invitees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitee>("CRMModel.FK_Invitee_Leads", "Invitee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitee>("CRMModel.FK_Invitee_Leads", "Invitee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadComment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadComment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadComment object.
        /// </summary>
        /// <param name="commentId">Initial value of the CommentId property.</param>
        public static LeadComment CreateLeadComment(global::System.Int32 commentId)
        {
            LeadComment leadComment = new LeadComment();
            leadComment.CommentId = commentId;
            return leadComment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentId
        {
            get
            {
                return _CommentId;
            }
            set
            {
                if (_CommentId != value)
                {
                    OnCommentIdChanging(value);
                    ReportPropertyChanging("CommentId");
                    _CommentId = StructuralObject.SetValidValue(value, "CommentId");
                    ReportPropertyChanged("CommentId");
                    OnCommentIdChanged();
                }
            }
        }
        private global::System.Int32 _CommentId;
        partial void OnCommentIdChanging(global::System.Int32 value);
        partial void OnCommentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                OnLeadIdChanging(value);
                ReportPropertyChanging("LeadId");
                _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                ReportPropertyChanged("LeadId");
                OnLeadIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadId;
        partial void OnLeadIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommentText
        {
            get
            {
                return _CommentText;
            }
            set
            {
                OnCommentTextChanging(value);
                ReportPropertyChanging("CommentText");
                _CommentText = StructuralObject.SetValidValue(value, true, "CommentText");
                ReportPropertyChanged("CommentText");
                OnCommentTextChanged();
            }
        }
        private global::System.String _CommentText;
        partial void OnCommentTextChanging(global::System.String value);
        partial void OnCommentTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineInfo
        {
            get
            {
                return _UpdateMachineInfo;
            }
            set
            {
                OnUpdateMachineInfoChanging(value);
                ReportPropertyChanging("UpdateMachineInfo");
                _UpdateMachineInfo = StructuralObject.SetValidValue(value, true, "UpdateMachineInfo");
                ReportPropertyChanged("UpdateMachineInfo");
                OnUpdateMachineInfoChanged();
            }
        }
        private global::System.String _UpdateMachineInfo;
        partial void OnUpdateMachineInfoChanging(global::System.String value);
        partial void OnUpdateMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyType
        {
            get
            {
                return _PolicyType;
            }
            set
            {
                OnPolicyTypeChanging(value);
                ReportPropertyChanging("PolicyType");
                _PolicyType = StructuralObject.SetValidValue(value, "PolicyType");
                ReportPropertyChanged("PolicyType");
                OnPolicyTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyType;
        partial void OnPolicyTypeChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReferenceID
        {
            get
            {
                return _ReferenceID;
            }
            set
            {
                OnReferenceIDChanging(value);
                ReportPropertyChanging("ReferenceID");
                _ReferenceID = StructuralObject.SetValidValue(value, "ReferenceID");
                ReportPropertyChanged("ReferenceID");
                OnReferenceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReferenceID;
        partial void OnReferenceIDChanging(Nullable<global::System.Int32> value);
        partial void OnReferenceIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadComment", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadComment", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadComment", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadComment", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.fk_LeadComment", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadCommentUserId", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_LeadCommentUserId", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_LeadCommentUserId", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_LeadCommentUserId", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.fk_LeadCommentUserId", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadContact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LeadContact CreateLeadContact(global::System.Int32 id)
        {
            LeadContact leadContact = new LeadContact();
            leadContact.ID = id;
            return leadContact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadID
        {
            get
            {
                return _LeadID;
            }
            set
            {
                OnLeadIDChanging(value);
                ReportPropertyChanging("LeadID");
                _LeadID = StructuralObject.SetValidValue(value, "LeadID");
                ReportPropertyChanged("LeadID");
                OnLeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadID;
        partial void OnLeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true, "ContactName");
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactTypeID
        {
            get
            {
                return _ContactTypeID;
            }
            set
            {
                OnContactTypeIDChanging(value);
                ReportPropertyChanging("ContactTypeID");
                _ContactTypeID = StructuralObject.SetValidValue(value, "ContactTypeID");
                ReportPropertyChanged("ContactTypeID");
                OnContactTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactTypeID;
        partial void OnContactTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mobile
        {
            get
            {
                return _Mobile;
            }
            set
            {
                OnMobileChanging(value);
                ReportPropertyChanging("Mobile");
                _Mobile = StructuralObject.SetValidValue(value, true, "Mobile");
                ReportPropertyChanged("Mobile");
                OnMobileChanged();
            }
        }
        private global::System.String _Mobile;
        partial void OnMobileChanging(global::System.String value);
        partial void OnMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value, "DateCreated");
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCreated;
        partial void OnDateCreatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, "isActive");
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyAddress
        {
            get
            {
                return _CompanyAddress;
            }
            set
            {
                OnCompanyAddressChanging(value);
                ReportPropertyChanging("CompanyAddress");
                _CompanyAddress = StructuralObject.SetValidValue(value, true, "CompanyAddress");
                ReportPropertyChanged("CompanyAddress");
                OnCompanyAddressChanged();
            }
        }
        private global::System.String _CompanyAddress;
        partial void OnCompanyAddressChanging(global::System.String value);
        partial void OnCompanyAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyTypeID
        {
            get
            {
                return _PolicyTypeID;
            }
            set
            {
                OnPolicyTypeIDChanging(value);
                ReportPropertyChanging("PolicyTypeID");
                _PolicyTypeID = StructuralObject.SetValidValue(value, "PolicyTypeID");
                ReportPropertyChanged("PolicyTypeID");
                OnPolicyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyTypeID;
        partial void OnPolicyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsuranceTypeID
        {
            get
            {
                return _InsuranceTypeID;
            }
            set
            {
                OnInsuranceTypeIDChanging(value);
                ReportPropertyChanging("InsuranceTypeID");
                _InsuranceTypeID = StructuralObject.SetValidValue(value, "InsuranceTypeID");
                ReportPropertyChanged("InsuranceTypeID");
                OnInsuranceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InsuranceTypeID;
        partial void OnInsuranceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnInsuranceTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadContactType", "LeadContactType")]
        public LeadContactType LeadContactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadContactType>("CRMModel.fk_LeadContactType", "LeadContactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadContactType>("CRMModel.fk_LeadContactType", "LeadContactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadContactType> LeadContactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadContactType>("CRMModel.fk_LeadContactType", "LeadContactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadContactType>("CRMModel.fk_LeadContactType", "LeadContactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadContactInsuranceType", "InsuranceType")]
        public InsuranceType InsuranceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceType>("CRMModel.fk_LeadContactInsuranceType", "InsuranceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceType>("CRMModel.fk_LeadContactInsuranceType", "InsuranceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsuranceType> InsuranceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceType>("CRMModel.fk_LeadContactInsuranceType", "InsuranceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsuranceType>("CRMModel.fk_LeadContactInsuranceType", "InsuranceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadContactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadContactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadContactType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LeadContactType CreateLeadContactType(global::System.Int32 id)
        {
            LeadContactType leadContactType = new LeadContactType();
            leadContactType.ID = id;
            return leadContactType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, "isActive");
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadContactType", "LeadContact")]
        public EntityCollection<LeadContact> LeadContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadContact>("CRMModel.fk_LeadContactType", "LeadContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadContact>("CRMModel.fk_LeadContactType", "LeadContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Contact_LeadContactType", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("CRMModel.FK_Contact_LeadContactType", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("CRMModel.FK_Contact_LeadContactType", "Contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadDocumentList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadDocumentList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadDocumentList object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LeadDocumentList CreateLeadDocumentList(global::System.Int32 id)
        {
            LeadDocumentList leadDocumentList = new LeadDocumentList();
            leadDocumentList.ID = id;
            return leadDocumentList;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                OnLeadIdChanging(value);
                ReportPropertyChanging("LeadId");
                _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                ReportPropertyChanged("LeadId");
                OnLeadIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadId;
        partial void OnLeadIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DocumentListId
        {
            get
            {
                return _DocumentListId;
            }
            set
            {
                OnDocumentListIdChanging(value);
                ReportPropertyChanging("DocumentListId");
                _DocumentListId = StructuralObject.SetValidValue(value, "DocumentListId");
                ReportPropertyChanged("DocumentListId");
                OnDocumentListIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DocumentListId;
        partial void OnDocumentListIdChanging(Nullable<global::System.Int32> value);
        partial void OnDocumentListIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadDocumentList", "DocumentListMaster")]
        public DocumentListMaster DocumentListMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentListMaster>("CRMModel.fk_LeadDocumentList", "DocumentListMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentListMaster>("CRMModel.fk_LeadDocumentList", "DocumentListMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentListMaster> DocumentListMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentListMaster>("CRMModel.fk_LeadDocumentList", "DocumentListMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentListMaster>("CRMModel.fk_LeadDocumentList", "DocumentListMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadInvoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadInvoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadInvoice object.
        /// </summary>
        /// <param name="invoiceID">Initial value of the InvoiceID property.</param>
        public static LeadInvoice CreateLeadInvoice(global::System.Int32 invoiceID)
        {
            LeadInvoice leadInvoice = new LeadInvoice();
            leadInvoice.InvoiceID = invoiceID;
            return leadInvoice;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                if (_InvoiceID != value)
                {
                    OnInvoiceIDChanging(value);
                    ReportPropertyChanging("InvoiceID");
                    _InvoiceID = StructuralObject.SetValidValue(value, "InvoiceID");
                    ReportPropertyChanged("InvoiceID");
                    OnInvoiceIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceID;
        partial void OnInvoiceIDChanging(global::System.Int32 value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                OnLeadIdChanging(value);
                ReportPropertyChanging("LeadId");
                _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                ReportPropertyChanged("LeadId");
                OnLeadIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadId;
        partial void OnLeadIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value, "TotalAmount");
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalAmount;
        partial void OnTotalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyTypeID
        {
            get
            {
                return _PolicyTypeID;
            }
            set
            {
                OnPolicyTypeIDChanging(value);
                ReportPropertyChanging("PolicyTypeID");
                _PolicyTypeID = StructuralObject.SetValidValue(value, "PolicyTypeID");
                ReportPropertyChanged("PolicyTypeID");
                OnPolicyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyTypeID;
        partial void OnPolicyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToName
        {
            get
            {
                return _BillToName;
            }
            set
            {
                OnBillToNameChanging(value);
                ReportPropertyChanging("BillToName");
                _BillToName = StructuralObject.SetValidValue(value, true, "BillToName");
                ReportPropertyChanged("BillToName");
                OnBillToNameChanged();
            }
        }
        private global::System.String _BillToName;
        partial void OnBillToNameChanging(global::System.String value);
        partial void OnBillToNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress1
        {
            get
            {
                return _BillToAddress1;
            }
            set
            {
                OnBillToAddress1Changing(value);
                ReportPropertyChanging("BillToAddress1");
                _BillToAddress1 = StructuralObject.SetValidValue(value, true, "BillToAddress1");
                ReportPropertyChanged("BillToAddress1");
                OnBillToAddress1Changed();
            }
        }
        private global::System.String _BillToAddress1;
        partial void OnBillToAddress1Changing(global::System.String value);
        partial void OnBillToAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress2
        {
            get
            {
                return _BillToAddress2;
            }
            set
            {
                OnBillToAddress2Changing(value);
                ReportPropertyChanging("BillToAddress2");
                _BillToAddress2 = StructuralObject.SetValidValue(value, true, "BillToAddress2");
                ReportPropertyChanged("BillToAddress2");
                OnBillToAddress2Changed();
            }
        }
        private global::System.String _BillToAddress2;
        partial void OnBillToAddress2Changing(global::System.String value);
        partial void OnBillToAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress3
        {
            get
            {
                return _BillToAddress3;
            }
            set
            {
                OnBillToAddress3Changing(value);
                ReportPropertyChanging("BillToAddress3");
                _BillToAddress3 = StructuralObject.SetValidValue(value, true, "BillToAddress3");
                ReportPropertyChanged("BillToAddress3");
                OnBillToAddress3Changed();
            }
        }
        private global::System.String _BillToAddress3;
        partial void OnBillToAddress3Changing(global::System.String value);
        partial void OnBillToAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterInvoiceNumber
        {
            get
            {
                return _AdjusterInvoiceNumber;
            }
            set
            {
                OnAdjusterInvoiceNumberChanging(value);
                ReportPropertyChanging("AdjusterInvoiceNumber");
                _AdjusterInvoiceNumber = StructuralObject.SetValidValue(value, true, "AdjusterInvoiceNumber");
                ReportPropertyChanged("AdjusterInvoiceNumber");
                OnAdjusterInvoiceNumberChanged();
            }
        }
        private global::System.String _AdjusterInvoiceNumber;
        partial void OnAdjusterInvoiceNumberChanging(global::System.String value);
        partial void OnAdjusterInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true, "Comments");
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isVoid
        {
            get
            {
                return _isVoid;
            }
            set
            {
                OnisVoidChanging(value);
                ReportPropertyChanging("isVoid");
                _isVoid = StructuralObject.SetValidValue(value, "isVoid");
                ReportPropertyChanged("isVoid");
                OnisVoidChanged();
            }
        }
        private Nullable<global::System.Boolean> _isVoid;
        partial void OnisVoidChanging(Nullable<global::System.Boolean> value);
        partial void OnisVoidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value, "InvoiceNumber");
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceNumber;
        partial void OnInvoiceNumberChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                OnTaxRateChanging(value);
                ReportPropertyChanging("TaxRate");
                _TaxRate = StructuralObject.SetValidValue(value, "TaxRate");
                ReportPropertyChanged("TaxRate");
                OnTaxRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxRate;
        partial void OnTaxRateChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyID;
        partial void OnPolicyIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceTypeID
        {
            get
            {
                return _InvoiceTypeID;
            }
            set
            {
                OnInvoiceTypeIDChanging(value);
                ReportPropertyChanging("InvoiceTypeID");
                _InvoiceTypeID = StructuralObject.SetValidValue(value, "InvoiceTypeID");
                ReportPropertyChanged("InvoiceTypeID");
                OnInvoiceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceTypeID;
        partial void OnInvoiceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                OnCarrierInvoiceProfileIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileID");
                _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                ReportPropertyChanged("CarrierInvoiceProfileID");
                OnCarrierInvoiceProfileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierInvoiceProfileIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadInvoice", "LeadInvoiceDetail")]
        public EntityCollection<LeadInvoiceDetail> LeadInvoiceDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoiceDetail>("CRMModel.fk_LeadInvoice", "LeadInvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoiceDetail>("CRMModel.fk_LeadInvoice", "LeadInvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Ledger_LeadInvoice", "Ledger")]
        public EntityCollection<Ledger> Ledgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ledger>("CRMModel.FK_Ledger_LeadInvoice", "Ledger");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ledger>("CRMModel.FK_Ledger_LeadInvoice", "Ledger", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_LeadInvoice_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_LeadInvoice_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_LeadInvoice_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_LeadInvoice_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_Carrier", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_LeadInvoice_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_LeadInvoice_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.FK_LeadInvoice_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("CRMModel.FK_LeadInvoice_Carrier", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_CarrierInvoiceType", "CarrierInvoiceType")]
        public CarrierInvoiceType CarrierInvoiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_LeadInvoice_CarrierInvoiceType", "CarrierInvoiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_LeadInvoice_CarrierInvoiceType", "CarrierInvoiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceType> CarrierInvoiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceType>("CRMModel.FK_LeadInvoice_CarrierInvoiceType", "CarrierInvoiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceType>("CRMModel.FK_LeadInvoice_CarrierInvoiceType", "CarrierInvoiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_LeadInvoice_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_LeadInvoice_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_LeadInvoice_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.FK_LeadInvoice_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_LeadPolicy", "LeadPolicy")]
        public LeadPolicy LeadPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_LeadInvoice_LeadPolicy", "LeadPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_LeadInvoice_LeadPolicy", "LeadPolicy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicy> LeadPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_LeadInvoice_LeadPolicy", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicy>("CRMModel.FK_LeadInvoice_LeadPolicy", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Invoice_Lead", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_Invoice_Lead", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_Invoice_Lead", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_Invoice_Lead", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.fk_Invoice_Lead", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_CarrierInvoiceProfile", "CarrierInvoiceProfile")]
        public CarrierInvoiceProfile CarrierInvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_LeadInvoice_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_LeadInvoice_CarrierInvoiceProfile", "CarrierInvoiceProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CarrierInvoiceProfile> CarrierInvoiceProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_LeadInvoice_CarrierInvoiceProfile", "CarrierInvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CarrierInvoiceProfile>("CRMModel.FK_LeadInvoice_CarrierInvoiceProfile", "CarrierInvoiceProfile", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadInvoiceDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadInvoiceDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadInvoiceDetail object.
        /// </summary>
        /// <param name="invoiceLineID">Initial value of the InvoiceLineID property.</param>
        public static LeadInvoiceDetail CreateLeadInvoiceDetail(global::System.Int32 invoiceLineID)
        {
            LeadInvoiceDetail leadInvoiceDetail = new LeadInvoiceDetail();
            leadInvoiceDetail.InvoiceLineID = invoiceLineID;
            return leadInvoiceDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceLineID
        {
            get
            {
                return _InvoiceLineID;
            }
            set
            {
                if (_InvoiceLineID != value)
                {
                    OnInvoiceLineIDChanging(value);
                    ReportPropertyChanging("InvoiceLineID");
                    _InvoiceLineID = StructuralObject.SetValidValue(value, "InvoiceLineID");
                    ReportPropertyChanged("InvoiceLineID");
                    OnInvoiceLineIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceLineID;
        partial void OnInvoiceLineIDChanging(global::System.Int32 value);
        partial void OnInvoiceLineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                OnInvoiceIDChanging(value);
                ReportPropertyChanging("InvoiceID");
                _InvoiceID = StructuralObject.SetValidValue(value, "InvoiceID");
                ReportPropertyChanged("InvoiceID");
                OnInvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceID;
        partial void OnInvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LineDescription
        {
            get
            {
                return _LineDescription;
            }
            set
            {
                OnLineDescriptionChanging(value);
                ReportPropertyChanging("LineDescription");
                _LineDescription = StructuralObject.SetValidValue(value, true, "LineDescription");
                ReportPropertyChanged("LineDescription");
                OnLineDescriptionChanged();
            }
        }
        private global::System.String _LineDescription;
        partial void OnLineDescriptionChanging(global::System.String value);
        partial void OnLineDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LineAmount
        {
            get
            {
                return _LineAmount;
            }
            set
            {
                OnLineAmountChanging(value);
                ReportPropertyChanging("LineAmount");
                _LineAmount = StructuralObject.SetValidValue(value, "LineAmount");
                ReportPropertyChanged("LineAmount");
                OnLineAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LineAmount;
        partial void OnLineAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnLineAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LineItemNo
        {
            get
            {
                return _LineItemNo;
            }
            set
            {
                OnLineItemNoChanging(value);
                ReportPropertyChanging("LineItemNo");
                _LineItemNo = StructuralObject.SetValidValue(value, "LineItemNo");
                ReportPropertyChanged("LineItemNo");
                OnLineItemNoChanged();
            }
        }
        private Nullable<global::System.Int32> _LineItemNo;
        partial void OnLineItemNoChanging(Nullable<global::System.Int32> value);
        partial void OnLineItemNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LineDate
        {
            get
            {
                return _LineDate;
            }
            set
            {
                OnLineDateChanging(value);
                ReportPropertyChanging("LineDate");
                _LineDate = StructuralObject.SetValidValue(value, "LineDate");
                ReportPropertyChanged("LineDate");
                OnLineDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LineDate;
        partial void OnLineDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLineDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ServiceTypeID
        {
            get
            {
                return _ServiceTypeID;
            }
            set
            {
                OnServiceTypeIDChanging(value);
                ReportPropertyChanging("ServiceTypeID");
                _ServiceTypeID = StructuralObject.SetValidValue(value, "ServiceTypeID");
                ReportPropertyChanged("ServiceTypeID");
                OnServiceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ServiceTypeID;
        partial void OnServiceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnServiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value, "Qty");
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private Nullable<global::System.Decimal> _Qty;
        partial void OnQtyChanging(Nullable<global::System.Decimal> value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value, "Total");
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _Total;
        partial void OnTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true, "Comments");
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isBillable
        {
            get
            {
                return _isBillable;
            }
            set
            {
                OnisBillableChanging(value);
                ReportPropertyChanging("isBillable");
                _isBillable = StructuralObject.SetValidValue(value, "isBillable");
                ReportPropertyChanged("isBillable");
                OnisBillableChanged();
            }
        }
        private Nullable<global::System.Boolean> _isBillable;
        partial void OnisBillableChanging(Nullable<global::System.Boolean> value);
        partial void OnisBillableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value, "Rate");
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rate;
        partial void OnRateChanging(Nullable<global::System.Decimal> value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescription
        {
            get
            {
                return _UnitDescription;
            }
            set
            {
                OnUnitDescriptionChanging(value);
                ReportPropertyChanging("UnitDescription");
                _UnitDescription = StructuralObject.SetValidValue(value, true, "UnitDescription");
                ReportPropertyChanged("UnitDescription");
                OnUnitDescriptionChanged();
            }
        }
        private global::System.String _UnitDescription;
        partial void OnUnitDescriptionChanging(global::System.String value);
        partial void OnUnitDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnitID
        {
            get
            {
                return _UnitID;
            }
            set
            {
                OnUnitIDChanging(value);
                ReportPropertyChanging("UnitID");
                _UnitID = StructuralObject.SetValidValue(value, "UnitID");
                ReportPropertyChanged("UnitID");
                OnUnitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UnitID;
        partial void OnUnitIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnitIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadInvoice", "LeadInvoice")]
        public LeadInvoice LeadInvoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadInvoice>("CRMModel.fk_LeadInvoice", "LeadInvoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadInvoice>("CRMModel.fk_LeadInvoice", "LeadInvoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadInvoice> LeadInvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadInvoice>("CRMModel.fk_LeadInvoice", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadInvoice>("CRMModel.fk_LeadInvoice", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadInvoiceDetail_ServiceType", "InvoiceServiceType")]
        public InvoiceServiceType InvoiceServiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.fk_LeadInvoiceDetail_ServiceType", "InvoiceServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.fk_LeadInvoiceDetail_ServiceType", "InvoiceServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceServiceType> InvoiceServiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceServiceType>("CRMModel.fk_LeadInvoiceDetail_ServiceType", "InvoiceServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceServiceType>("CRMModel.fk_LeadInvoiceDetail_ServiceType", "InvoiceServiceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadPolicy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadPolicy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadPolicy object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static LeadPolicy CreateLeadPolicy(global::System.Int32 id, global::System.Boolean isActive)
        {
            LeadPolicy leadPolicy = new LeadPolicy();
            leadPolicy.Id = id;
            leadPolicy.IsActive = isActive;
            return leadPolicy;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                OnLeadIdChanging(value);
                ReportPropertyChanging("LeadId");
                _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                ReportPropertyChanged("LeadId");
                OnLeadIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadId;
        partial void OnLeadIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuranceCompanyName
        {
            get
            {
                return _InsuranceCompanyName;
            }
            set
            {
                OnInsuranceCompanyNameChanging(value);
                ReportPropertyChanging("InsuranceCompanyName");
                _InsuranceCompanyName = StructuralObject.SetValidValue(value, true, "InsuranceCompanyName");
                ReportPropertyChanged("InsuranceCompanyName");
                OnInsuranceCompanyNameChanged();
            }
        }
        private global::System.String _InsuranceCompanyName;
        partial void OnInsuranceCompanyNameChanging(global::System.String value);
        partial void OnInsuranceCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuranceAddress
        {
            get
            {
                return _InsuranceAddress;
            }
            set
            {
                OnInsuranceAddressChanging(value);
                ReportPropertyChanging("InsuranceAddress");
                _InsuranceAddress = StructuralObject.SetValidValue(value, true, "InsuranceAddress");
                ReportPropertyChanged("InsuranceAddress");
                OnInsuranceAddressChanged();
            }
        }
        private global::System.String _InsuranceAddress;
        partial void OnInsuranceAddressChanging(global::System.String value);
        partial void OnInsuranceAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsuranceState
        {
            get
            {
                return _InsuranceState;
            }
            set
            {
                OnInsuranceStateChanging(value);
                ReportPropertyChanging("InsuranceState");
                _InsuranceState = StructuralObject.SetValidValue(value, "InsuranceState");
                ReportPropertyChanged("InsuranceState");
                OnInsuranceStateChanged();
            }
        }
        private Nullable<global::System.Int32> _InsuranceState;
        partial void OnInsuranceStateChanging(Nullable<global::System.Int32> value);
        partial void OnInsuranceStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsuranceCity
        {
            get
            {
                return _InsuranceCity;
            }
            set
            {
                OnInsuranceCityChanging(value);
                ReportPropertyChanging("InsuranceCity");
                _InsuranceCity = StructuralObject.SetValidValue(value, "InsuranceCity");
                ReportPropertyChanged("InsuranceCity");
                OnInsuranceCityChanged();
            }
        }
        private Nullable<global::System.Int32> _InsuranceCity;
        partial void OnInsuranceCityChanging(Nullable<global::System.Int32> value);
        partial void OnInsuranceCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuranceZipCode
        {
            get
            {
                return _InsuranceZipCode;
            }
            set
            {
                OnInsuranceZipCodeChanging(value);
                ReportPropertyChanging("InsuranceZipCode");
                _InsuranceZipCode = StructuralObject.SetValidValue(value, true, "InsuranceZipCode");
                ReportPropertyChanged("InsuranceZipCode");
                OnInsuranceZipCodeChanged();
            }
        }
        private global::System.String _InsuranceZipCode;
        partial void OnInsuranceZipCodeChanging(global::System.String value);
        partial void OnInsuranceZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true, "PolicyNumber");
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimNumber
        {
            get
            {
                return _ClaimNumber;
            }
            set
            {
                OnClaimNumberChanging(value);
                ReportPropertyChanging("ClaimNumber");
                _ClaimNumber = StructuralObject.SetValidValue(value, true, "ClaimNumber");
                ReportPropertyChanged("ClaimNumber");
                OnClaimNumberChanged();
            }
        }
        private global::System.String _ClaimNumber;
        partial void OnClaimNumberChanging(global::System.String value);
        partial void OnClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyType
        {
            get
            {
                return _PolicyType;
            }
            set
            {
                OnPolicyTypeChanging(value);
                ReportPropertyChanging("PolicyType");
                _PolicyType = StructuralObject.SetValidValue(value, "PolicyType");
                ReportPropertyChanged("PolicyType");
                OnPolicyTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyType;
        partial void OnPolicyTypeChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadStatus
        {
            get
            {
                return _LeadStatus;
            }
            set
            {
                OnLeadStatusChanging(value);
                ReportPropertyChanging("LeadStatus");
                _LeadStatus = StructuralObject.SetValidValue(value, "LeadStatus");
                ReportPropertyChanged("LeadStatus");
                OnLeadStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadStatus;
        partial void OnLeadStatusChanging(Nullable<global::System.Int32> value);
        partial void OnLeadStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubStatus
        {
            get
            {
                return _SubStatus;
            }
            set
            {
                OnSubStatusChanging(value);
                ReportPropertyChanging("SubStatus");
                _SubStatus = StructuralObject.SetValidValue(value, "SubStatus");
                ReportPropertyChanged("SubStatus");
                OnSubStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _SubStatus;
        partial void OnSubStatusChanging(Nullable<global::System.Int32> value);
        partial void OnSubStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SiteSurveyDate
        {
            get
            {
                return _SiteSurveyDate;
            }
            set
            {
                OnSiteSurveyDateChanging(value);
                ReportPropertyChanging("SiteSurveyDate");
                _SiteSurveyDate = StructuralObject.SetValidValue(value, "SiteSurveyDate");
                ReportPropertyChanged("SiteSurveyDate");
                OnSiteSurveyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SiteSurveyDate;
        partial void OnSiteSurveyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSiteSurveyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SiteInspectionCompleted
        {
            get
            {
                return _SiteInspectionCompleted;
            }
            set
            {
                OnSiteInspectionCompletedChanging(value);
                ReportPropertyChanging("SiteInspectionCompleted");
                _SiteInspectionCompleted = StructuralObject.SetValidValue(value, "SiteInspectionCompleted");
                ReportPropertyChanged("SiteInspectionCompleted");
                OnSiteInspectionCompletedChanged();
            }
        }
        private Nullable<global::System.Int32> _SiteInspectionCompleted;
        partial void OnSiteInspectionCompletedChanging(Nullable<global::System.Int32> value);
        partial void OnSiteInspectionCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsurerFileNo
        {
            get
            {
                return _InsurerFileNo;
            }
            set
            {
                OnInsurerFileNoChanging(value);
                ReportPropertyChanging("InsurerFileNo");
                _InsurerFileNo = StructuralObject.SetValidValue(value, true, "InsurerFileNo");
                ReportPropertyChanged("InsurerFileNo");
                OnInsurerFileNoChanged();
            }
        }
        private global::System.String _InsurerFileNo;
        partial void OnInsurerFileNoChanging(global::System.String value);
        partial void OnInsurerFileNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isAllDocumentUploaded
        {
            get
            {
                return _isAllDocumentUploaded;
            }
            set
            {
                OnisAllDocumentUploadedChanging(value);
                ReportPropertyChanging("isAllDocumentUploaded");
                _isAllDocumentUploaded = StructuralObject.SetValidValue(value, "isAllDocumentUploaded");
                ReportPropertyChanged("isAllDocumentUploaded");
                OnisAllDocumentUploadedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isAllDocumentUploaded;
        partial void OnisAllDocumentUploadedChanging(Nullable<global::System.Boolean> value);
        partial void OnisAllDocumentUploadedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastStatusUpdate
        {
            get
            {
                return _LastStatusUpdate;
            }
            set
            {
                OnLastStatusUpdateChanging(value);
                ReportPropertyChanging("LastStatusUpdate");
                _LastStatusUpdate = StructuralObject.SetValidValue(value, "LastStatusUpdate");
                ReportPropertyChanged("LastStatusUpdate");
                OnLastStatusUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastStatusUpdate;
        partial void OnLastStatusUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastStatusUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = StructuralObject.SetValidValue(value, true, "FaxNumber");
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private global::System.String _FaxNumber;
        partial void OnFaxNumberChanging(global::System.String value);
        partial void OnFaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyPeriod
        {
            get
            {
                return _PolicyPeriod;
            }
            set
            {
                OnPolicyPeriodChanging(value);
                ReportPropertyChanging("PolicyPeriod");
                _PolicyPeriod = StructuralObject.SetValidValue(value, true, "PolicyPeriod");
                ReportPropertyChanged("PolicyPeriod");
                OnPolicyPeriodChanged();
            }
        }
        private global::System.String _PolicyPeriod;
        partial void OnPolicyPeriodChanging(global::System.String value);
        partial void OnPolicyPeriodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LossDate
        {
            get
            {
                return _LossDate;
            }
            set
            {
                OnLossDateChanging(value);
                ReportPropertyChanging("LossDate");
                _LossDate = StructuralObject.SetValidValue(value, "LossDate");
                ReportPropertyChanged("LossDate");
                OnLossDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LossDate;
        partial void OnLossDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLossDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossLocation
        {
            get
            {
                return _LossLocation;
            }
            set
            {
                OnLossLocationChanging(value);
                ReportPropertyChanging("LossLocation");
                _LossLocation = StructuralObject.SetValidValue(value, true, "LossLocation");
                ReportPropertyChanged("LossLocation");
                OnLossLocationChanged();
            }
        }
        private global::System.String _LossLocation;
        partial void OnLossLocationChanging(global::System.String value);
        partial void OnLossLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoanNumber
        {
            get
            {
                return _LoanNumber;
            }
            set
            {
                OnLoanNumberChanging(value);
                ReportPropertyChanging("LoanNumber");
                _LoanNumber = StructuralObject.SetValidValue(value, true, "LoanNumber");
                ReportPropertyChanged("LoanNumber");
                OnLoanNumberChanged();
            }
        }
        private global::System.String _LoanNumber;
        partial void OnLoanNumberChanging(global::System.String value);
        partial void OnLoanNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MortgageeID
        {
            get
            {
                return _MortgageeID;
            }
            set
            {
                OnMortgageeIDChanging(value);
                ReportPropertyChanging("MortgageeID");
                _MortgageeID = StructuralObject.SetValidValue(value, "MortgageeID");
                ReportPropertyChanged("MortgageeID");
                OnMortgageeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MortgageeID;
        partial void OnMortgageeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMortgageeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SublimitLiabilityID
        {
            get
            {
                return _SublimitLiabilityID;
            }
            set
            {
                OnSublimitLiabilityIDChanging(value);
                ReportPropertyChanging("SublimitLiabilityID");
                _SublimitLiabilityID = StructuralObject.SetValidValue(value, "SublimitLiabilityID");
                ReportPropertyChanged("SublimitLiabilityID");
                OnSublimitLiabilityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SublimitLiabilityID;
        partial void OnSublimitLiabilityIDChanging(Nullable<global::System.Int32> value);
        partial void OnSublimitLiabilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClaimDesignationID
        {
            get
            {
                return _ClaimDesignationID;
            }
            set
            {
                OnClaimDesignationIDChanging(value);
                ReportPropertyChanging("ClaimDesignationID");
                _ClaimDesignationID = StructuralObject.SetValidValue(value, "ClaimDesignationID");
                ReportPropertyChanged("ClaimDesignationID");
                OnClaimDesignationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClaimDesignationID;
        partial void OnClaimDesignationIDChanging(Nullable<global::System.Int32> value);
        partial void OnClaimDesignationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NetClaimPayable
        {
            get
            {
                return _NetClaimPayable;
            }
            set
            {
                OnNetClaimPayableChanging(value);
                ReportPropertyChanging("NetClaimPayable");
                _NetClaimPayable = StructuralObject.SetValidValue(value, "NetClaimPayable");
                ReportPropertyChanged("NetClaimPayable");
                OnNetClaimPayableChanged();
            }
        }
        private Nullable<global::System.Decimal> _NetClaimPayable;
        partial void OnNetClaimPayableChanging(Nullable<global::System.Decimal> value);
        partial void OnNetClaimPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsInvoiceReady
        {
            get
            {
                return _IsInvoiceReady;
            }
            set
            {
                OnIsInvoiceReadyChanging(value);
                ReportPropertyChanging("IsInvoiceReady");
                _IsInvoiceReady = StructuralObject.SetValidValue(value, "IsInvoiceReady");
                ReportPropertyChanged("IsInvoiceReady");
                OnIsInvoiceReadyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsInvoiceReady;
        partial void OnIsInvoiceReadyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsInvoiceReadyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossLossPayable
        {
            get
            {
                return _GrossLossPayable;
            }
            set
            {
                OnGrossLossPayableChanging(value);
                ReportPropertyChanging("GrossLossPayable");
                _GrossLossPayable = StructuralObject.SetValidValue(value, "GrossLossPayable");
                ReportPropertyChanged("GrossLossPayable");
                OnGrossLossPayableChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossLossPayable;
        partial void OnGrossLossPayableChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossLossPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsInvoiced
        {
            get
            {
                return _IsInvoiced;
            }
            set
            {
                OnIsInvoicedChanging(value);
                ReportPropertyChanging("IsInvoiced");
                _IsInvoiced = StructuralObject.SetValidValue(value, "IsInvoiced");
                ReportPropertyChanged("IsInvoiced");
                OnIsInvoicedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsInvoiced;
        partial void OnIsInvoicedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsInvoicedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReported
        {
            get
            {
                return _DateReported;
            }
            set
            {
                OnDateReportedChanging(value);
                ReportPropertyChanging("DateReported");
                _DateReported = StructuralObject.SetValidValue(value, "DateReported");
                ReportPropertyChanged("DateReported");
                OnDateReportedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReported;
        partial void OnDateReportedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReportedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFirstClosed
        {
            get
            {
                return _DateFirstClosed;
            }
            set
            {
                OnDateFirstClosedChanging(value);
                ReportPropertyChanging("DateFirstClosed");
                _DateFirstClosed = StructuralObject.SetValidValue(value, "DateFirstClosed");
                ReportPropertyChanged("DateFirstClosed");
                OnDateFirstClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFirstClosed;
        partial void OnDateFirstClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFirstClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFirstReOpened
        {
            get
            {
                return _DateFirstReOpened;
            }
            set
            {
                OnDateFirstReOpenedChanging(value);
                ReportPropertyChanging("DateFirstReOpened");
                _DateFirstReOpened = StructuralObject.SetValidValue(value, "DateFirstReOpened");
                ReportPropertyChanged("DateFirstReOpened");
                OnDateFirstReOpenedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFirstReOpened;
        partial void OnDateFirstReOpenedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFirstReOpenedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAssigned
        {
            get
            {
                return _DateAssigned;
            }
            set
            {
                OnDateAssignedChanging(value);
                ReportPropertyChanging("DateAssigned");
                _DateAssigned = StructuralObject.SetValidValue(value, "DateAssigned");
                ReportPropertyChanged("DateAssigned");
                OnDateAssignedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAssigned;
        partial void OnDateAssignedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAssignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAcknowledged
        {
            get
            {
                return _DateAcknowledged;
            }
            set
            {
                OnDateAcknowledgedChanging(value);
                ReportPropertyChanging("DateAcknowledged");
                _DateAcknowledged = StructuralObject.SetValidValue(value, "DateAcknowledged");
                ReportPropertyChanged("DateAcknowledged");
                OnDateAcknowledgedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAcknowledged;
        partial void OnDateAcknowledgedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAcknowledgedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFirstContactAttempt
        {
            get
            {
                return _DateFirstContactAttempt;
            }
            set
            {
                OnDateFirstContactAttemptChanging(value);
                ReportPropertyChanging("DateFirstContactAttempt");
                _DateFirstContactAttempt = StructuralObject.SetValidValue(value, "DateFirstContactAttempt");
                ReportPropertyChanged("DateFirstContactAttempt");
                OnDateFirstContactAttemptChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFirstContactAttempt;
        partial void OnDateFirstContactAttemptChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFirstContactAttemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SiteSurveyDateCompleted
        {
            get
            {
                return _SiteSurveyDateCompleted;
            }
            set
            {
                OnSiteSurveyDateCompletedChanging(value);
                ReportPropertyChanging("SiteSurveyDateCompleted");
                _SiteSurveyDateCompleted = StructuralObject.SetValidValue(value, "SiteSurveyDateCompleted");
                ReportPropertyChanged("SiteSurveyDateCompleted");
                OnSiteSurveyDateCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _SiteSurveyDateCompleted;
        partial void OnSiteSurveyDateCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnSiteSurveyDateCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateSubmitted
        {
            get
            {
                return _DateSubmitted;
            }
            set
            {
                OnDateSubmittedChanging(value);
                ReportPropertyChanging("DateSubmitted");
                _DateSubmitted = StructuralObject.SetValidValue(value, "DateSubmitted");
                ReportPropertyChanged("DateSubmitted");
                OnDateSubmittedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateSubmitted;
        partial void OnDateSubmittedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateSubmittedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInitialReserveChange
        {
            get
            {
                return _DateInitialReserveChange;
            }
            set
            {
                OnDateInitialReserveChangeChanging(value);
                ReportPropertyChanging("DateInitialReserveChange");
                _DateInitialReserveChange = StructuralObject.SetValidValue(value, "DateInitialReserveChange");
                ReportPropertyChanged("DateInitialReserveChange");
                OnDateInitialReserveChangeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInitialReserveChange;
        partial void OnDateInitialReserveChangeChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInitialReserveChangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateIndemnityPaymentRequested
        {
            get
            {
                return _DateIndemnityPaymentRequested;
            }
            set
            {
                OnDateIndemnityPaymentRequestedChanging(value);
                ReportPropertyChanging("DateIndemnityPaymentRequested");
                _DateIndemnityPaymentRequested = StructuralObject.SetValidValue(value, "DateIndemnityPaymentRequested");
                ReportPropertyChanged("DateIndemnityPaymentRequested");
                OnDateIndemnityPaymentRequestedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateIndemnityPaymentRequested;
        partial void OnDateIndemnityPaymentRequestedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateIndemnityPaymentRequestedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateIndemnityPaymentApproved
        {
            get
            {
                return _DateIndemnityPaymentApproved;
            }
            set
            {
                OnDateIndemnityPaymentApprovedChanging(value);
                ReportPropertyChanging("DateIndemnityPaymentApproved");
                _DateIndemnityPaymentApproved = StructuralObject.SetValidValue(value, "DateIndemnityPaymentApproved");
                ReportPropertyChanged("DateIndemnityPaymentApproved");
                OnDateIndemnityPaymentApprovedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateIndemnityPaymentApproved;
        partial void OnDateIndemnityPaymentApprovedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateIndemnityPaymentApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateIndemnityPaymentIssued
        {
            get
            {
                return _DateIndemnityPaymentIssued;
            }
            set
            {
                OnDateIndemnityPaymentIssuedChanging(value);
                ReportPropertyChanging("DateIndemnityPaymentIssued");
                _DateIndemnityPaymentIssued = StructuralObject.SetValidValue(value, "DateIndemnityPaymentIssued");
                ReportPropertyChanged("DateIndemnityPaymentIssued");
                OnDateIndemnityPaymentIssuedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateIndemnityPaymentIssued;
        partial void OnDateIndemnityPaymentIssuedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateIndemnityPaymentIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCompleted
        {
            get
            {
                return _DateCompleted;
            }
            set
            {
                OnDateCompletedChanging(value);
                ReportPropertyChanging("DateCompleted");
                _DateCompleted = StructuralObject.SetValidValue(value, "DateCompleted");
                ReportPropertyChanged("DateCompleted");
                OnDateCompletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCompleted;
        partial void OnDateCompletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClosed
        {
            get
            {
                return _DateClosed;
            }
            set
            {
                OnDateClosedChanging(value);
                ReportPropertyChanging("DateClosed");
                _DateClosed = StructuralObject.SetValidValue(value, "DateClosed");
                ReportPropertyChanged("DateClosed");
                OnDateClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClosed;
        partial void OnDateClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Depreciation
        {
            get
            {
                return _Depreciation;
            }
            set
            {
                OnDepreciationChanging(value);
                ReportPropertyChanging("Depreciation");
                _Depreciation = StructuralObject.SetValidValue(value, "Depreciation");
                ReportPropertyChanged("Depreciation");
                OnDepreciationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Depreciation;
        partial void OnDepreciationChanging(Nullable<global::System.Decimal> value);
        partial void OnDepreciationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Deductible
        {
            get
            {
                return _Deductible;
            }
            set
            {
                OnDeductibleChanging(value);
                ReportPropertyChanging("Deductible");
                _Deductible = StructuralObject.SetValidValue(value, "Deductible");
                ReportPropertyChanged("Deductible");
                OnDeductibleChanged();
            }
        }
        private Nullable<global::System.Decimal> _Deductible;
        partial void OnDeductibleChanging(Nullable<global::System.Decimal> value);
        partial void OnDeductibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyFormType
        {
            get
            {
                return _PolicyFormType;
            }
            set
            {
                OnPolicyFormTypeChanging(value);
                ReportPropertyChanging("PolicyFormType");
                _PolicyFormType = StructuralObject.SetValidValue(value, true, "PolicyFormType");
                ReportPropertyChanged("PolicyFormType");
                OnPolicyFormTypeChanged();
            }
        }
        private global::System.String _PolicyFormType;
        partial void OnPolicyFormTypeChanging(global::System.String value);
        partial void OnPolicyFormTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateContacted
        {
            get
            {
                return _DateContacted;
            }
            set
            {
                OnDateContactedChanging(value);
                ReportPropertyChanging("DateContacted");
                _DateContacted = StructuralObject.SetValidValue(value, "DateContacted");
                ReportPropertyChanged("DateContacted");
                OnDateContactedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateContacted;
        partial void OnDateContactedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateContactedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOpen
        {
            get
            {
                return _DateOpen;
            }
            set
            {
                OnDateOpenChanging(value);
                ReportPropertyChanging("DateOpen");
                _DateOpen = StructuralObject.SetValidValue(value, "DateOpen");
                ReportPropertyChanged("DateOpen");
                OnDateOpenChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOpen;
        partial void OnDateOpenChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOpenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SupervisorID
        {
            get
            {
                return _SupervisorID;
            }
            set
            {
                OnSupervisorIDChanging(value);
                ReportPropertyChanging("SupervisorID");
                _SupervisorID = StructuralObject.SetValidValue(value, "SupervisorID");
                ReportPropertyChanged("SupervisorID");
                OnSupervisorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SupervisorID;
        partial void OnSupervisorIDChanging(Nullable<global::System.Int32> value);
        partial void OnSupervisorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerID
        {
            get
            {
                return _ManagerID;
            }
            set
            {
                OnManagerIDChanging(value);
                ReportPropertyChanging("ManagerID");
                _ManagerID = StructuralObject.SetValidValue(value, "ManagerID");
                ReportPropertyChanged("ManagerID");
                OnManagerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerID;
        partial void OnManagerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TeamLeadID
        {
            get
            {
                return _TeamLeadID;
            }
            set
            {
                OnTeamLeadIDChanging(value);
                ReportPropertyChanging("TeamLeadID");
                _TeamLeadID = StructuralObject.SetValidValue(value, "TeamLeadID");
                ReportPropertyChanged("TeamLeadID");
                OnTeamLeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TeamLeadID;
        partial void OnTeamLeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnTeamLeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PolicyLimit
        {
            get
            {
                return _PolicyLimit;
            }
            set
            {
                OnPolicyLimitChanging(value);
                ReportPropertyChanging("PolicyLimit");
                _PolicyLimit = StructuralObject.SetValidValue(value, "PolicyLimit");
                ReportPropertyChanged("PolicyLimit");
                OnPolicyLimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _PolicyLimit;
        partial void OnPolicyLimitChanging(Nullable<global::System.Decimal> value);
        partial void OnPolicyLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value, "EffectiveDate");
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectiveDate;
        partial void OnEffectiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value, "ExpirationDate");
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDate;
        partial void OnExpirationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InitialCoverageDate
        {
            get
            {
                return _InitialCoverageDate;
            }
            set
            {
                OnInitialCoverageDateChanging(value);
                ReportPropertyChanging("InitialCoverageDate");
                _InitialCoverageDate = StructuralObject.SetValidValue(value, "InitialCoverageDate");
                ReportPropertyChanged("InitialCoverageDate");
                OnInitialCoverageDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InitialCoverageDate;
        partial void OnInitialCoverageDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInitialCoverageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AgentID
        {
            get
            {
                return _AgentID;
            }
            set
            {
                OnAgentIDChanging(value);
                ReportPropertyChanging("AgentID");
                _AgentID = StructuralObject.SetValidValue(value, "AgentID");
                ReportPropertyChanged("AgentID");
                OnAgentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AgentID;
        partial void OnAgentIDChanging(Nullable<global::System.Int32> value);
        partial void OnAgentIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_Adjuster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.fk_LeadPolicy_Adjuster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.fk_LeadPolicy_Adjuster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.fk_LeadPolicy_Adjuster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.fk_LeadPolicy_Adjuster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolictyCityMaster", "CityMaster")]
        public CityMaster CityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_LeadPolictyCityMaster", "CityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_LeadPolictyCityMaster", "CityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityMaster> CityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_LeadPolictyCityMaster", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityMaster>("CRMModel.fk_LeadPolictyCityMaster", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolictyState", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_LeadPolictyState", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_LeadPolictyState", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_LeadPolictyState", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.fk_LeadPolictyState", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_LeadPolicyType", "LeadPolicyType")]
        public LeadPolicyType LeadPolicyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicyType>("CRMModel.fk_LeadPolicy_LeadPolicyType", "LeadPolicyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicyType>("CRMModel.fk_LeadPolicy_LeadPolicyType", "LeadPolicyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicyType> LeadPolicyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicyType>("CRMModel.fk_LeadPolicy_LeadPolicyType", "LeadPolicyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicyType>("CRMModel.fk_LeadPolicy_LeadPolicyType", "LeadPolicyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_SubLimitOfLiabilityMaster", "SubLimitOfLiabilityMaster")]
        public SubLimitOfLiabilityMaster SubLimitOfLiabilityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubLimitOfLiabilityMaster>("CRMModel.fk_LeadPolicy_SubLimitOfLiabilityMaster", "SubLimitOfLiabilityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubLimitOfLiabilityMaster>("CRMModel.fk_LeadPolicy_SubLimitOfLiabilityMaster", "SubLimitOfLiabilityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubLimitOfLiabilityMaster> SubLimitOfLiabilityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubLimitOfLiabilityMaster>("CRMModel.fk_LeadPolicy_SubLimitOfLiabilityMaster", "SubLimitOfLiabilityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubLimitOfLiabilityMaster>("CRMModel.fk_LeadPolicy_SubLimitOfLiabilityMaster", "SubLimitOfLiabilityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicyDamageType")]
        public EntityCollection<LeadPolicyDamageType> LeadPolicyDamageTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicyDamageType>("CRMModel.FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicyDamageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicyDamageType>("CRMModel.FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicyDamageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicyStatus", "StatusMaster")]
        public StatusMaster StatusMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.fk_LeadPolicyStatus", "StatusMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.fk_LeadPolicyStatus", "StatusMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StatusMaster> StatusMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StatusMaster>("CRMModel.fk_LeadPolicyStatus", "StatusMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StatusMaster>("CRMModel.fk_LeadPolicyStatus", "StatusMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicySubStatus", "SubStatusMaster")]
        public SubStatusMaster SubStatusMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.fk_LeadPolicySubStatus", "SubStatusMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.fk_LeadPolicySubStatus", "SubStatusMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubStatusMaster> SubStatusMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubStatusMaster>("CRMModel.fk_LeadPolicySubStatus", "SubStatusMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubStatusMaster>("CRMModel.fk_LeadPolicySubStatus", "SubStatusMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_Mortgagee", "Mortgagee")]
        public Mortgagee Mortgagee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicy_Mortgagee", "Mortgagee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicy_Mortgagee", "Mortgagee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mortgagee> MortgageeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicy_Mortgagee", "Mortgagee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicy_Mortgagee", "Mortgagee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_TypeOfDamageMaster", "TypeOfDamageMaster")]
        public TypeOfDamageMaster TypeOfDamageMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfDamageMaster>("CRMModel.fk_LeadPolicy_TypeOfDamageMaster", "TypeOfDamageMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfDamageMaster>("CRMModel.fk_LeadPolicy_TypeOfDamageMaster", "TypeOfDamageMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeOfDamageMaster> TypeOfDamageMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfDamageMaster>("CRMModel.fk_LeadPolicy_TypeOfDamageMaster", "TypeOfDamageMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeOfDamageMaster>("CRMModel.fk_LeadPolicy_TypeOfDamageMaster", "TypeOfDamageMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_Carrier", "Carrier")]
        public Carrier Carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.fk_LeadPolicy_Carrier", "Carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.fk_LeadPolicy_Carrier", "Carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Carrier> CarrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Carrier>("CRMModel.fk_LeadPolicy_Carrier", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Carrier>("CRMModel.fk_LeadPolicy_Carrier", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadInvoice_LeadPolicy", "LeadInvoice")]
        public EntityCollection<LeadInvoice> LeadInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_LeadPolicy", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadInvoice>("CRMModel.FK_LeadInvoice_LeadPolicy", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyPropertyLimit_LeadPolicy", "PolicyLimit")]
        public EntityCollection<PolicyLimit> PolicyLimits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLimit>("CRMModel.FK_PolicyPropertyLimit_LeadPolicy", "PolicyLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLimit>("CRMModel.FK_PolicyPropertyLimit_LeadPolicy", "PolicyLimit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicySubLimit_LeadPolicy", "PolicySubLimit")]
        public EntityCollection<PolicySubLimit> PolicySubLimits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicySubLimit>("CRMModel.FK_PolicySubLimit_LeadPolicy", "PolicySubLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicySubLimit>("CRMModel.FK_PolicySubLimit_LeadPolicy", "PolicySubLimit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicty", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadPolicty", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadPolicty", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadPolicty", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.fk_LeadPolicty", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyLienholder_LeadPolicy", "PolicyLienholder")]
        public EntityCollection<PolicyLienholder> PolicyLienholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLienholder>("CRMModel.FK_PolicyLienholder_LeadPolicy", "PolicyLienholder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLienholder>("CRMModel.FK_PolicyLienholder_LeadPolicy", "PolicyLienholder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_LeadPolicy", "Claim")]
        public EntityCollection<Claim> Claims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Claim>("CRMModel.FK_Claim_LeadPolicy", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Claim>("CRMModel.FK_Claim_LeadPolicy", "Claim", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyNote_LeadPolicy", "PolicyNote")]
        public EntityCollection<PolicyNote> PolicyNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyNote>("CRMModel.FK_PolicyNote_LeadPolicy", "PolicyNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyNote>("CRMModel.FK_PolicyNote_LeadPolicy", "PolicyNote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadPolicyDamageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadPolicyDamageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadPolicyDamageType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        /// <param name="typeOfDamageId">Initial value of the TypeOfDamageId property.</param>
        public static LeadPolicyDamageType CreateLeadPolicyDamageType(global::System.Int32 id, global::System.Int32 policyID, global::System.Int32 typeOfDamageId)
        {
            LeadPolicyDamageType leadPolicyDamageType = new LeadPolicyDamageType();
            leadPolicyDamageType.ID = id;
            leadPolicyDamageType.PolicyID = policyID;
            leadPolicyDamageType.TypeOfDamageId = typeOfDamageId;
            return leadPolicyDamageType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeOfDamageId
        {
            get
            {
                return _TypeOfDamageId;
            }
            set
            {
                OnTypeOfDamageIdChanging(value);
                ReportPropertyChanging("TypeOfDamageId");
                _TypeOfDamageId = StructuralObject.SetValidValue(value, "TypeOfDamageId");
                ReportPropertyChanged("TypeOfDamageId");
                OnTypeOfDamageIdChanged();
            }
        }
        private global::System.Int32 _TypeOfDamageId;
        partial void OnTypeOfDamageIdChanging(global::System.Int32 value);
        partial void OnTypeOfDamageIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadPolicyDamageType_TypeOfDamageMaster", "TypeOfDamageMaster")]
        public TypeOfDamageMaster TypeOfDamageMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfDamageMaster>("CRMModel.FK_LeadPolicyDamageType_TypeOfDamageMaster", "TypeOfDamageMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfDamageMaster>("CRMModel.FK_LeadPolicyDamageType_TypeOfDamageMaster", "TypeOfDamageMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeOfDamageMaster> TypeOfDamageMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeOfDamageMaster>("CRMModel.FK_LeadPolicyDamageType_TypeOfDamageMaster", "TypeOfDamageMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeOfDamageMaster>("CRMModel.FK_LeadPolicyDamageType_TypeOfDamageMaster", "TypeOfDamageMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicy")]
        public LeadPolicy LeadPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicy> LeadPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicy>("CRMModel.FK_LeadPolicyDamageType_LeadPolicy", "LeadPolicy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadPolicyLienholder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadPolicyLienholder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadPolicyLienholder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LeadPolicyLienholder CreateLeadPolicyLienholder(global::System.Int32 id)
        {
            LeadPolicyLienholder leadPolicyLienholder = new LeadPolicyLienholder();
            leadPolicyLienholder.ID = id;
            return leadPolicyLienholder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadID
        {
            get
            {
                return _LeadID;
            }
            set
            {
                OnLeadIDChanging(value);
                ReportPropertyChanging("LeadID");
                _LeadID = StructuralObject.SetValidValue(value, "LeadID");
                ReportPropertyChanged("LeadID");
                OnLeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadID;
        partial void OnLeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MortgageeID
        {
            get
            {
                return _MortgageeID;
            }
            set
            {
                OnMortgageeIDChanging(value);
                ReportPropertyChanging("MortgageeID");
                _MortgageeID = StructuralObject.SetValidValue(value, "MortgageeID");
                ReportPropertyChanged("MortgageeID");
                OnMortgageeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MortgageeID;
        partial void OnMortgageeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMortgageeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicyLienholder_Mortgagee", "Mortgagee")]
        public Mortgagee Mortgagee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicyLienholder_Mortgagee", "Mortgagee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicyLienholder_Mortgagee", "Mortgagee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mortgagee> MortgageeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicyLienholder_Mortgagee", "Mortgagee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mortgagee>("CRMModel.fk_LeadPolicyLienholder_Mortgagee", "Mortgagee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicyLienholder_Lead", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadPolicyLienholder_Lead", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadPolicyLienholder_Lead", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_LeadPolicyLienholder_Lead", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.fk_LeadPolicyLienholder_Lead", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadPolicyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadPolicyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadPolicyType object.
        /// </summary>
        /// <param name="leadPolicyTypeID">Initial value of the LeadPolicyTypeID property.</param>
        public static LeadPolicyType CreateLeadPolicyType(global::System.Int32 leadPolicyTypeID)
        {
            LeadPolicyType leadPolicyType = new LeadPolicyType();
            leadPolicyType.LeadPolicyTypeID = leadPolicyTypeID;
            return leadPolicyType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadPolicyTypeID
        {
            get
            {
                return _LeadPolicyTypeID;
            }
            set
            {
                if (_LeadPolicyTypeID != value)
                {
                    OnLeadPolicyTypeIDChanging(value);
                    ReportPropertyChanging("LeadPolicyTypeID");
                    _LeadPolicyTypeID = StructuralObject.SetValidValue(value, "LeadPolicyTypeID");
                    ReportPropertyChanged("LeadPolicyTypeID");
                    OnLeadPolicyTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _LeadPolicyTypeID;
        partial void OnLeadPolicyTypeIDChanging(global::System.Int32 value);
        partial void OnLeadPolicyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterHandleClaimType_LeadPolicyType", "AdjusterHandleClaimType")]
        public EntityCollection<AdjusterHandleClaimType> AdjusterHandleClaimTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterHandleClaimType>("CRMModel.FK_AdjusterHandleClaimType_LeadPolicyType", "AdjusterHandleClaimType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterHandleClaimType>("CRMModel.FK_AdjusterHandleClaimType_LeadPolicyType", "AdjusterHandleClaimType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_LeadPolicyType", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_LeadPolicyType", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_LeadPolicyType", "LeadPolicy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadReportGenerateLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadReportGenerateLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadReportGenerateLog object.
        /// </summary>
        /// <param name="leadReportGenerateId">Initial value of the LeadReportGenerateId property.</param>
        public static LeadReportGenerateLog CreateLeadReportGenerateLog(global::System.Int32 leadReportGenerateId)
        {
            LeadReportGenerateLog leadReportGenerateLog = new LeadReportGenerateLog();
            leadReportGenerateLog.LeadReportGenerateId = leadReportGenerateId;
            return leadReportGenerateLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadReportGenerateId
        {
            get
            {
                return _LeadReportGenerateId;
            }
            set
            {
                if (_LeadReportGenerateId != value)
                {
                    OnLeadReportGenerateIdChanging(value);
                    ReportPropertyChanging("LeadReportGenerateId");
                    _LeadReportGenerateId = StructuralObject.SetValidValue(value, "LeadReportGenerateId");
                    ReportPropertyChanged("LeadReportGenerateId");
                    OnLeadReportGenerateIdChanged();
                }
            }
        }
        private global::System.Int32 _LeadReportGenerateId;
        partial void OnLeadReportGenerateIdChanging(global::System.Int32 value);
        partial void OnLeadReportGenerateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                OnLeadIdChanging(value);
                ReportPropertyChanging("LeadId");
                _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                ReportPropertyChanged("LeadId");
                OnLeadIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadId;
        partial void OnLeadIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GenerateDate
        {
            get
            {
                return _GenerateDate;
            }
            set
            {
                OnGenerateDateChanging(value);
                ReportPropertyChanging("GenerateDate");
                _GenerateDate = StructuralObject.SetValidValue(value, "GenerateDate");
                ReportPropertyChanged("GenerateDate");
                OnGenerateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _GenerateDate;
        partial void OnGenerateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnGenerateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Generatedby
        {
            get
            {
                return _Generatedby;
            }
            set
            {
                OnGeneratedbyChanging(value);
                ReportPropertyChanging("Generatedby");
                _Generatedby = StructuralObject.SetValidValue(value, "Generatedby");
                ReportPropertyChanged("Generatedby");
                OnGeneratedbyChanged();
            }
        }
        private Nullable<global::System.Int32> _Generatedby;
        partial void OnGeneratedbyChanging(Nullable<global::System.Int32> value);
        partial void OnGeneratedbyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadsDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadsDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadsDocument object.
        /// </summary>
        /// <param name="leadDocumentId">Initial value of the LeadDocumentId property.</param>
        public static LeadsDocument CreateLeadsDocument(global::System.Int32 leadDocumentId)
        {
            LeadsDocument leadsDocument = new LeadsDocument();
            leadsDocument.LeadDocumentId = leadDocumentId;
            return leadsDocument;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadDocumentId
        {
            get
            {
                return _LeadDocumentId;
            }
            set
            {
                if (_LeadDocumentId != value)
                {
                    OnLeadDocumentIdChanging(value);
                    ReportPropertyChanging("LeadDocumentId");
                    _LeadDocumentId = StructuralObject.SetValidValue(value, "LeadDocumentId");
                    ReportPropertyChanged("LeadDocumentId");
                    OnLeadDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _LeadDocumentId;
        partial void OnLeadDocumentIdChanging(global::System.Int32 value);
        partial void OnLeadDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                OnLeadIdChanging(value);
                ReportPropertyChanging("LeadId");
                _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                ReportPropertyChanged("LeadId");
                OnLeadIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadId;
        partial void OnLeadIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, true, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineInfo
        {
            get
            {
                return _UpdateMachineInfo;
            }
            set
            {
                OnUpdateMachineInfoChanging(value);
                ReportPropertyChanging("UpdateMachineInfo");
                _UpdateMachineInfo = StructuralObject.SetValidValue(value, true, "UpdateMachineInfo");
                ReportPropertyChanged("UpdateMachineInfo");
                OnUpdateMachineInfoChanged();
            }
        }
        private global::System.String _UpdateMachineInfo;
        partial void OnUpdateMachineInfoChanging(global::System.String value);
        partial void OnUpdateMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyTypeID
        {
            get
            {
                return _PolicyTypeID;
            }
            set
            {
                OnPolicyTypeIDChanging(value);
                ReportPropertyChanging("PolicyTypeID");
                _PolicyTypeID = StructuralObject.SetValidValue(value, "PolicyTypeID");
                ReportPropertyChanged("PolicyTypeID");
                OnPolicyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyTypeID;
        partial void OnPolicyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrint
        {
            get
            {
                return _IsPrint;
            }
            set
            {
                OnIsPrintChanging(value);
                ReportPropertyChanging("IsPrint");
                _IsPrint = StructuralObject.SetValidValue(value, "IsPrint");
                ReportPropertyChanged("IsPrint");
                OnIsPrintChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrint;
        partial void OnIsPrintChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrintChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadsDocument", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_LeadsDocument", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_LeadsDocument", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_LeadsDocument", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.FK_LeadsDocument", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadsImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadsImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadsImage object.
        /// </summary>
        /// <param name="leadImageId">Initial value of the LeadImageId property.</param>
        /// <param name="leadId">Initial value of the LeadId property.</param>
        public static LeadsImage CreateLeadsImage(global::System.Int32 leadImageId, global::System.Int32 leadId)
        {
            LeadsImage leadsImage = new LeadsImage();
            leadsImage.LeadImageId = leadImageId;
            leadsImage.LeadId = leadId;
            return leadsImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadImageId
        {
            get
            {
                return _LeadImageId;
            }
            set
            {
                if (_LeadImageId != value)
                {
                    OnLeadImageIdChanging(value);
                    ReportPropertyChanging("LeadImageId");
                    _LeadImageId = StructuralObject.SetValidValue(value, "LeadImageId");
                    ReportPropertyChanged("LeadImageId");
                    OnLeadImageIdChanged();
                }
            }
        }
        private global::System.Int32 _LeadImageId;
        partial void OnLeadImageIdChanging(global::System.Int32 value);
        partial void OnLeadImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                OnLeadIdChanging(value);
                ReportPropertyChanging("LeadId");
                _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                ReportPropertyChanged("LeadId");
                OnLeadIdChanged();
            }
        }
        private global::System.Int32 _LeadId;
        partial void OnLeadIdChanging(global::System.Int32 value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, true, "ImageName");
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineInfo
        {
            get
            {
                return _UpdateMachineInfo;
            }
            set
            {
                OnUpdateMachineInfoChanging(value);
                ReportPropertyChanging("UpdateMachineInfo");
                _UpdateMachineInfo = StructuralObject.SetValidValue(value, true, "UpdateMachineInfo");
                ReportPropertyChanged("UpdateMachineInfo");
                OnUpdateMachineInfoChanged();
            }
        }
        private global::System.String _UpdateMachineInfo;
        partial void OnUpdateMachineInfoChanging(global::System.String value);
        partial void OnUpdateMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName2
        {
            get
            {
                return _ImageName2;
            }
            set
            {
                OnImageName2Changing(value);
                ReportPropertyChanging("ImageName2");
                _ImageName2 = StructuralObject.SetValidValue(value, true, "ImageName2");
                ReportPropertyChanged("ImageName2");
                OnImageName2Changed();
            }
        }
        private global::System.String _ImageName2;
        partial void OnImageName2Changing(global::System.String value);
        partial void OnImageName2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName3
        {
            get
            {
                return _ImageName3;
            }
            set
            {
                OnImageName3Changing(value);
                ReportPropertyChanging("ImageName3");
                _ImageName3 = StructuralObject.SetValidValue(value, true, "ImageName3");
                ReportPropertyChanged("ImageName3");
                OnImageName3Changed();
            }
        }
        private global::System.String _ImageName3;
        partial void OnImageName3Changing(global::System.String value);
        partial void OnImageName3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName4
        {
            get
            {
                return _ImageName4;
            }
            set
            {
                OnImageName4Changing(value);
                ReportPropertyChanging("ImageName4");
                _ImageName4 = StructuralObject.SetValidValue(value, true, "ImageName4");
                ReportPropertyChanged("ImageName4");
                OnImageName4Changed();
            }
        }
        private global::System.String _ImageName4;
        partial void OnImageName4Changing(global::System.String value);
        partial void OnImageName4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImageName5
        {
            get
            {
                return _ImageName5;
            }
            set
            {
                OnImageName5Changing(value);
                ReportPropertyChanging("ImageName5");
                _ImageName5 = StructuralObject.SetValidValue(value, true, "ImageName5");
                ReportPropertyChanged("ImageName5");
                OnImageName5Changed();
            }
        }
        private global::System.String _ImageName5;
        partial void OnImageName5Changing(global::System.String value);
        partial void OnImageName5Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> policyTypeID
        {
            get
            {
                return _policyTypeID;
            }
            set
            {
                OnpolicyTypeIDChanging(value);
                ReportPropertyChanging("policyTypeID");
                _policyTypeID = StructuralObject.SetValidValue(value, "policyTypeID");
                ReportPropertyChanged("policyTypeID");
                OnpolicyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _policyTypeID;
        partial void OnpolicyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnpolicyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPrint
        {
            get
            {
                return _isPrint;
            }
            set
            {
                OnisPrintChanging(value);
                ReportPropertyChanging("isPrint");
                _isPrint = StructuralObject.SetValidValue(value, "isPrint");
                ReportPropertyChanged("isPrint");
                OnisPrintChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPrint;
        partial void OnisPrintChanging(Nullable<global::System.Boolean> value);
        partial void OnisPrintChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadsImage", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_LeadsImage", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_LeadsImage", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_LeadsImage", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.FK_LeadsImage", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="LeadSourceMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeadSourceMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeadSourceMaster object.
        /// </summary>
        /// <param name="leadSourceId">Initial value of the LeadSourceId property.</param>
        public static LeadSourceMaster CreateLeadSourceMaster(global::System.Int32 leadSourceId)
        {
            LeadSourceMaster leadSourceMaster = new LeadSourceMaster();
            leadSourceMaster.LeadSourceId = leadSourceId;
            return leadSourceMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadSourceId
        {
            get
            {
                return _LeadSourceId;
            }
            set
            {
                if (_LeadSourceId != value)
                {
                    OnLeadSourceIdChanging(value);
                    ReportPropertyChanging("LeadSourceId");
                    _LeadSourceId = StructuralObject.SetValidValue(value, "LeadSourceId");
                    ReportPropertyChanged("LeadSourceId");
                    OnLeadSourceIdChanged();
                }
            }
        }
        private global::System.Int32 _LeadSourceId;
        partial void OnLeadSourceIdChanging(global::System.Int32 value);
        partial void OnLeadSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeadSourceName
        {
            get
            {
                return _LeadSourceName;
            }
            set
            {
                OnLeadSourceNameChanging(value);
                ReportPropertyChanging("LeadSourceName");
                _LeadSourceName = StructuralObject.SetValidValue(value, true, "LeadSourceName");
                ReportPropertyChanged("LeadSourceName");
                OnLeadSourceNameChanged();
            }
        }
        private global::System.String _LeadSourceName;
        partial void OnLeadSourceNameChanging(global::System.String value);
        partial void OnLeadSourceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadSource", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadSource", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadSource", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Ledger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ledger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ledger object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Ledger CreateLedger(global::System.Int32 id)
        {
            Ledger ledger = new Ledger();
            ledger.ID = id;
            return ledger;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadID
        {
            get
            {
                return _LeadID;
            }
            set
            {
                OnLeadIDChanging(value);
                ReportPropertyChanging("LeadID");
                _LeadID = StructuralObject.SetValidValue(value, "LeadID");
                ReportPropertyChanged("LeadID");
                OnLeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadID;
        partial void OnLeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                OnInvoiceIDChanging(value);
                ReportPropertyChanging("InvoiceID");
                _InvoiceID = StructuralObject.SetValidValue(value, "InvoiceID");
                ReportPropertyChanged("InvoiceID");
                OnInvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceID;
        partial void OnInvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ClientPaid
        {
            get
            {
                return _ClientPaid;
            }
            set
            {
                OnClientPaidChanging(value);
                ReportPropertyChanging("ClientPaid");
                _ClientPaid = StructuralObject.SetValidValue(value, "ClientPaid");
                ReportPropertyChanged("ClientPaid");
                OnClientPaidChanged();
            }
        }
        private Nullable<global::System.DateTime> _ClientPaid;
        partial void OnClientPaidChanging(Nullable<global::System.DateTime> value);
        partial void OnClientPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AdjusterPaidDate
        {
            get
            {
                return _AdjusterPaidDate;
            }
            set
            {
                OnAdjusterPaidDateChanging(value);
                ReportPropertyChanging("AdjusterPaidDate");
                _AdjusterPaidDate = StructuralObject.SetValidValue(value, "AdjusterPaidDate");
                ReportPropertyChanged("AdjusterPaidDate");
                OnAdjusterPaidDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AdjusterPaidDate;
        partial void OnAdjusterPaidDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdjusterPaidDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionTotal
        {
            get
            {
                return _CommissionTotal;
            }
            set
            {
                OnCommissionTotalChanging(value);
                ReportPropertyChanging("CommissionTotal");
                _CommissionTotal = StructuralObject.SetValidValue(value, "CommissionTotal");
                ReportPropertyChanged("CommissionTotal");
                OnCommissionTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionTotal;
        partial void OnCommissionTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalExpenses
        {
            get
            {
                return _TotalExpenses;
            }
            set
            {
                OnTotalExpensesChanging(value);
                ReportPropertyChanging("TotalExpenses");
                _TotalExpenses = StructuralObject.SetValidValue(value, "TotalExpenses");
                ReportPropertyChanged("TotalExpenses");
                OnTotalExpensesChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalExpenses;
        partial void OnTotalExpensesChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalExpensesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, true, "ClientName");
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AdjusterNet
        {
            get
            {
                return _AdjusterNet;
            }
            set
            {
                OnAdjusterNetChanging(value);
                ReportPropertyChanging("AdjusterNet");
                _AdjusterNet = StructuralObject.SetValidValue(value, "AdjusterNet");
                ReportPropertyChanged("AdjusterNet");
                OnAdjusterNetChanged();
            }
        }
        private Nullable<global::System.Decimal> _AdjusterNet;
        partial void OnAdjusterNetChanging(Nullable<global::System.Decimal> value);
        partial void OnAdjusterNetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvoiceTotal
        {
            get
            {
                return _InvoiceTotal;
            }
            set
            {
                OnInvoiceTotalChanging(value);
                ReportPropertyChanging("InvoiceTotal");
                _InvoiceTotal = StructuralObject.SetValidValue(value, "InvoiceTotal");
                ReportPropertyChanged("InvoiceTotal");
                OnInvoiceTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvoiceTotal;
        partial void OnInvoiceTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnInvoiceTotalChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Ledger_AdjusterMaster", "AdjusterMaster")]
        public AdjusterMaster AdjusterMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_Ledger_AdjusterMaster", "AdjusterMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_Ledger_AdjusterMaster", "AdjusterMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdjusterMaster> AdjusterMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdjusterMaster>("CRMModel.FK_Ledger_AdjusterMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdjusterMaster>("CRMModel.FK_Ledger_AdjusterMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Ledger_LeadInvoice", "LeadInvoice")]
        public LeadInvoice LeadInvoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadInvoice>("CRMModel.FK_Ledger_LeadInvoice", "LeadInvoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadInvoice>("CRMModel.FK_Ledger_LeadInvoice", "LeadInvoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadInvoice> LeadInvoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadInvoice>("CRMModel.FK_Ledger_LeadInvoice", "LeadInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadInvoice>("CRMModel.FK_Ledger_LeadInvoice", "LeadInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Ledger_Leads", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_Ledger_Leads", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_Ledger_Leads", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.FK_Ledger_Leads", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.FK_Ledger_Leads", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Limit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Limit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Limit object.
        /// </summary>
        /// <param name="limitID">Initial value of the LimitID property.</param>
        /// <param name="limitLetter">Initial value of the LimitLetter property.</param>
        /// <param name="limitType">Initial value of the LimitType property.</param>
        /// <param name="limitDescription">Initial value of the LimitDescription property.</param>
        public static Limit CreateLimit(global::System.Int32 limitID, global::System.String limitLetter, global::System.Int32 limitType, global::System.String limitDescription)
        {
            Limit limit = new Limit();
            limit.LimitID = limitID;
            limit.LimitLetter = limitLetter;
            limit.LimitType = limitType;
            limit.LimitDescription = limitDescription;
            return limit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitID
        {
            get
            {
                return _LimitID;
            }
            set
            {
                if (_LimitID != value)
                {
                    OnLimitIDChanging(value);
                    ReportPropertyChanging("LimitID");
                    _LimitID = StructuralObject.SetValidValue(value, "LimitID");
                    ReportPropertyChanged("LimitID");
                    OnLimitIDChanged();
                }
            }
        }
        private global::System.Int32 _LimitID;
        partial void OnLimitIDChanging(global::System.Int32 value);
        partial void OnLimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LimitLetter
        {
            get
            {
                return _LimitLetter;
            }
            set
            {
                OnLimitLetterChanging(value);
                ReportPropertyChanging("LimitLetter");
                _LimitLetter = StructuralObject.SetValidValue(value, false, "LimitLetter");
                ReportPropertyChanged("LimitLetter");
                OnLimitLetterChanged();
            }
        }
        private global::System.String _LimitLetter;
        partial void OnLimitLetterChanging(global::System.String value);
        partial void OnLimitLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitType
        {
            get
            {
                return _LimitType;
            }
            set
            {
                OnLimitTypeChanging(value);
                ReportPropertyChanging("LimitType");
                _LimitType = StructuralObject.SetValidValue(value, "LimitType");
                ReportPropertyChanged("LimitType");
                OnLimitTypeChanged();
            }
        }
        private global::System.Int32 _LimitType;
        partial void OnLimitTypeChanging(global::System.Int32 value);
        partial void OnLimitTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LimitDescription
        {
            get
            {
                return _LimitDescription;
            }
            set
            {
                OnLimitDescriptionChanging(value);
                ReportPropertyChanging("LimitDescription");
                _LimitDescription = StructuralObject.SetValidValue(value, false, "LimitDescription");
                ReportPropertyChanged("LimitDescription");
                OnLimitDescriptionChanged();
            }
        }
        private global::System.String _LimitDescription;
        partial void OnLimitDescriptionChanging(global::System.String value);
        partial void OnLimitDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyLimit_Limit", "PolicyLimit")]
        public EntityCollection<PolicyLimit> PolicyLimits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLimit>("CRMModel.FK_PolicyLimit_Limit", "PolicyLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLimit>("CRMModel.FK_PolicyLimit_Limit", "PolicyLimit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimLimit_Limit", "ClaimLimit")]
        public EntityCollection<ClaimLimit> ClaimLimits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimLimit>("CRMModel.FK_ClaimLimit_Limit", "ClaimLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimLimit>("CRMModel.FK_ClaimLimit_Limit", "ClaimLimit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Mortgagee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mortgagee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mortgagee object.
        /// </summary>
        /// <param name="mortgageeID">Initial value of the MortgageeID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Mortgagee CreateMortgagee(global::System.Int32 mortgageeID, global::System.Boolean status)
        {
            Mortgagee mortgagee = new Mortgagee();
            mortgagee.MortgageeID = mortgageeID;
            mortgagee.Status = status;
            return mortgagee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MortgageeID
        {
            get
            {
                return _MortgageeID;
            }
            set
            {
                if (_MortgageeID != value)
                {
                    OnMortgageeIDChanging(value);
                    ReportPropertyChanging("MortgageeID");
                    _MortgageeID = StructuralObject.SetValidValue(value, "MortgageeID");
                    ReportPropertyChanged("MortgageeID");
                    OnMortgageeIDChanged();
                }
            }
        }
        private global::System.Int32 _MortgageeID;
        partial void OnMortgageeIDChanging(global::System.Int32 value);
        partial void OnMortgageeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MortageeName
        {
            get
            {
                return _MortageeName;
            }
            set
            {
                OnMortageeNameChanging(value);
                ReportPropertyChanging("MortageeName");
                _MortageeName = StructuralObject.SetValidValue(value, true, "MortageeName");
                ReportPropertyChanged("MortageeName");
                OnMortageeNameChanged();
            }
        }
        private global::System.String _MortageeName;
        partial void OnMortageeNameChanging(global::System.String value);
        partial void OnMortageeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine1
        {
            get
            {
                return _AddressLine1;
            }
            set
            {
                OnAddressLine1Changing(value);
                ReportPropertyChanging("AddressLine1");
                _AddressLine1 = StructuralObject.SetValidValue(value, true, "AddressLine1");
                ReportPropertyChanged("AddressLine1");
                OnAddressLine1Changed();
            }
        }
        private global::System.String _AddressLine1;
        partial void OnAddressLine1Changing(global::System.String value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddressLine2
        {
            get
            {
                return _AddressLine2;
            }
            set
            {
                OnAddressLine2Changing(value);
                ReportPropertyChanging("AddressLine2");
                _AddressLine2 = StructuralObject.SetValidValue(value, true, "AddressLine2");
                ReportPropertyChanged("AddressLine2");
                OnAddressLine2Changed();
            }
        }
        private global::System.String _AddressLine2;
        partial void OnAddressLine2Changing(global::System.String value);
        partial void OnAddressLine2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZipCodeID
        {
            get
            {
                return _ZipCodeID;
            }
            set
            {
                OnZipCodeIDChanging(value);
                ReportPropertyChanging("ZipCodeID");
                _ZipCodeID = StructuralObject.SetValidValue(value, "ZipCodeID");
                ReportPropertyChanged("ZipCodeID");
                OnZipCodeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ZipCodeID;
        partial void OnZipCodeIDChanging(Nullable<global::System.Int32> value);
        partial void OnZipCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true, "Fax");
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true, "ContactName");
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrimaryContact
        {
            get
            {
                return _PrimaryContact;
            }
            set
            {
                OnPrimaryContactChanging(value);
                ReportPropertyChanging("PrimaryContact");
                _PrimaryContact = StructuralObject.SetValidValue(value, true, "PrimaryContact");
                ReportPropertyChanged("PrimaryContact");
                OnPrimaryContactChanged();
            }
        }
        private global::System.String _PrimaryContact;
        partial void OnPrimaryContactChanging(global::System.String value);
        partial void OnPrimaryContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, "CountryID");
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicyLienholder_Mortgagee", "LeadPolicyLienholder")]
        public EntityCollection<LeadPolicyLienholder> LeadPolicyLienholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicyLienholder>("CRMModel.fk_LeadPolicyLienholder_Mortgagee", "LeadPolicyLienholder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicyLienholder>("CRMModel.fk_LeadPolicyLienholder_Mortgagee", "LeadPolicyLienholder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Mortgagee_CityMaster", "CityMaster")]
        public CityMaster CityMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Mortgagee_CityMaster", "CityMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Mortgagee_CityMaster", "CityMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityMaster> CityMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityMaster>("CRMModel.fk_Mortgagee_CityMaster", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityMaster>("CRMModel.fk_Mortgagee_CityMaster", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Mortgagee_StateMaster", "StateMaster")]
        public StateMaster StateMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Mortgagee_StateMaster", "StateMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Mortgagee_StateMaster", "StateMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateMaster> StateMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateMaster>("CRMModel.fk_Mortgagee_StateMaster", "StateMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateMaster>("CRMModel.fk_Mortgagee_StateMaster", "StateMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Mortgagee_ZipCodeMaster", "ZipCodeMaster")]
        public ZipCodeMaster ZipCodeMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZipCodeMaster>("CRMModel.fk_Mortgagee_ZipCodeMaster", "ZipCodeMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZipCodeMaster>("CRMModel.fk_Mortgagee_ZipCodeMaster", "ZipCodeMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ZipCodeMaster> ZipCodeMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ZipCodeMaster>("CRMModel.fk_Mortgagee_ZipCodeMaster", "ZipCodeMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ZipCodeMaster>("CRMModel.fk_Mortgagee_ZipCodeMaster", "ZipCodeMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_Mortgagee", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_Mortgagee", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_Mortgagee", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyLienholder_Mortgagee", "PolicyLienholder")]
        public EntityCollection<PolicyLienholder> PolicyLienholders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyLienholder>("CRMModel.FK_PolicyLienholder_Mortgagee", "PolicyLienholder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyLienholder>("CRMModel.FK_PolicyLienholder_Mortgagee", "PolicyLienholder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="OtherSourceMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OtherSourceMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OtherSourceMaster object.
        /// </summary>
        /// <param name="otherSourceId">Initial value of the OtherSourceId property.</param>
        public static OtherSourceMaster CreateOtherSourceMaster(global::System.Int32 otherSourceId)
        {
            OtherSourceMaster otherSourceMaster = new OtherSourceMaster();
            otherSourceMaster.OtherSourceId = otherSourceId;
            return otherSourceMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OtherSourceId
        {
            get
            {
                return _OtherSourceId;
            }
            set
            {
                if (_OtherSourceId != value)
                {
                    OnOtherSourceIdChanging(value);
                    ReportPropertyChanging("OtherSourceId");
                    _OtherSourceId = StructuralObject.SetValidValue(value, "OtherSourceId");
                    ReportPropertyChanged("OtherSourceId");
                    OnOtherSourceIdChanged();
                }
            }
        }
        private global::System.Int32 _OtherSourceId;
        partial void OnOtherSourceIdChanging(global::System.Int32 value);
        partial void OnOtherSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherSource
        {
            get
            {
                return _OtherSource;
            }
            set
            {
                OnOtherSourceChanging(value);
                ReportPropertyChanging("OtherSource");
                _OtherSource = StructuralObject.SetValidValue(value, true, "OtherSource");
                ReportPropertyChanged("OtherSource");
                OnOtherSourceChanged();
            }
        }
        private global::System.String _OtherSource;
        partial void OnOtherSourceChanging(global::System.String value);
        partial void OnOtherSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadOtherSource", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadOtherSource", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadOtherSource", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="OwnerSameMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OwnerSameMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OwnerSameMaster object.
        /// </summary>
        /// <param name="ownerSameId">Initial value of the OwnerSameId property.</param>
        public static OwnerSameMaster CreateOwnerSameMaster(global::System.Int32 ownerSameId)
        {
            OwnerSameMaster ownerSameMaster = new OwnerSameMaster();
            ownerSameMaster.OwnerSameId = ownerSameId;
            return ownerSameMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OwnerSameId
        {
            get
            {
                return _OwnerSameId;
            }
            set
            {
                if (_OwnerSameId != value)
                {
                    OnOwnerSameIdChanging(value);
                    ReportPropertyChanging("OwnerSameId");
                    _OwnerSameId = StructuralObject.SetValidValue(value, "OwnerSameId");
                    ReportPropertyChanged("OwnerSameId");
                    OnOwnerSameIdChanged();
                }
            }
        }
        private global::System.Int32 _OwnerSameId;
        partial void OnOwnerSameIdChanging(global::System.Int32 value);
        partial void OnOwnerSameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerSame
        {
            get
            {
                return _OwnerSame;
            }
            set
            {
                OnOwnerSameChanging(value);
                ReportPropertyChanging("OwnerSame");
                _OwnerSame = StructuralObject.SetValidValue(value, true, "OwnerSame");
                ReportPropertyChanged("OwnerSame");
                OnOwnerSameChanged();
            }
        }
        private global::System.String _OwnerSame;
        partial void OnOwnerSameChanging(global::System.String value);
        partial void OnOwnerSameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadOwnerSame", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadOwnerSame", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadOwnerSame", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="PolicyLienholder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyLienholder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyLienholder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        /// <param name="mortgageeID">Initial value of the MortgageeID property.</param>
        public static PolicyLienholder CreatePolicyLienholder(global::System.Int32 id, global::System.Int32 policyID, global::System.Int32 mortgageeID)
        {
            PolicyLienholder policyLienholder = new PolicyLienholder();
            policyLienholder.ID = id;
            policyLienholder.PolicyID = policyID;
            policyLienholder.MortgageeID = mortgageeID;
            return policyLienholder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MortgageeID
        {
            get
            {
                return _MortgageeID;
            }
            set
            {
                OnMortgageeIDChanging(value);
                ReportPropertyChanging("MortgageeID");
                _MortgageeID = StructuralObject.SetValidValue(value, "MortgageeID");
                ReportPropertyChanged("MortgageeID");
                OnMortgageeIDChanged();
            }
        }
        private global::System.Int32 _MortgageeID;
        partial void OnMortgageeIDChanging(global::System.Int32 value);
        partial void OnMortgageeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoanNumber
        {
            get
            {
                return _LoanNumber;
            }
            set
            {
                OnLoanNumberChanging(value);
                ReportPropertyChanging("LoanNumber");
                _LoanNumber = StructuralObject.SetValidValue(value, true, "LoanNumber");
                ReportPropertyChanged("LoanNumber");
                OnLoanNumberChanged();
            }
        }
        private global::System.String _LoanNumber;
        partial void OnLoanNumberChanging(global::System.String value);
        partial void OnLoanNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyLienholder_LeadPolicy", "LeadPolicy")]
        public LeadPolicy LeadPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyLienholder_LeadPolicy", "LeadPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyLienholder_LeadPolicy", "LeadPolicy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicy> LeadPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyLienholder_LeadPolicy", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicy>("CRMModel.FK_PolicyLienholder_LeadPolicy", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyLienholder_Mortgagee", "Mortgagee")]
        public Mortgagee Mortgagee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.FK_PolicyLienholder_Mortgagee", "Mortgagee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.FK_PolicyLienholder_Mortgagee", "Mortgagee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mortgagee> MortgageeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mortgagee>("CRMModel.FK_PolicyLienholder_Mortgagee", "Mortgagee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mortgagee>("CRMModel.FK_PolicyLienholder_Mortgagee", "Mortgagee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="PolicyLimit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyLimit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyLimit object.
        /// </summary>
        /// <param name="policyLimitID">Initial value of the PolicyLimitID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        /// <param name="limitID">Initial value of the LimitID property.</param>
        public static PolicyLimit CreatePolicyLimit(global::System.Int32 policyLimitID, global::System.Int32 policyID, global::System.Int32 limitID)
        {
            PolicyLimit policyLimit = new PolicyLimit();
            policyLimit.PolicyLimitID = policyLimitID;
            policyLimit.PolicyID = policyID;
            policyLimit.LimitID = limitID;
            return policyLimit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyLimitID
        {
            get
            {
                return _PolicyLimitID;
            }
            set
            {
                if (_PolicyLimitID != value)
                {
                    OnPolicyLimitIDChanging(value);
                    ReportPropertyChanging("PolicyLimitID");
                    _PolicyLimitID = StructuralObject.SetValidValue(value, "PolicyLimitID");
                    ReportPropertyChanged("PolicyLimitID");
                    OnPolicyLimitIDChanged();
                }
            }
        }
        private global::System.Int32 _PolicyLimitID;
        partial void OnPolicyLimitIDChanging(global::System.Int32 value);
        partial void OnPolicyLimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitID
        {
            get
            {
                return _LimitID;
            }
            set
            {
                OnLimitIDChanging(value);
                ReportPropertyChanging("LimitID");
                _LimitID = StructuralObject.SetValidValue(value, "LimitID");
                ReportPropertyChanged("LimitID");
                OnLimitIDChanged();
            }
        }
        private global::System.Int32 _LimitID;
        partial void OnLimitIDChanging(global::System.Int32 value);
        partial void OnLimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LimitAmount
        {
            get
            {
                return _LimitAmount;
            }
            set
            {
                OnLimitAmountChanging(value);
                ReportPropertyChanging("LimitAmount");
                _LimitAmount = StructuralObject.SetValidValue(value, "LimitAmount");
                ReportPropertyChanged("LimitAmount");
                OnLimitAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LimitAmount;
        partial void OnLimitAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnLimitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LimitDeductible
        {
            get
            {
                return _LimitDeductible;
            }
            set
            {
                OnLimitDeductibleChanging(value);
                ReportPropertyChanging("LimitDeductible");
                _LimitDeductible = StructuralObject.SetValidValue(value, "LimitDeductible");
                ReportPropertyChanged("LimitDeductible");
                OnLimitDeductibleChanged();
            }
        }
        private Nullable<global::System.Decimal> _LimitDeductible;
        partial void OnLimitDeductibleChanging(Nullable<global::System.Decimal> value);
        partial void OnLimitDeductibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATDeductible
        {
            get
            {
                return _CATDeductible;
            }
            set
            {
                OnCATDeductibleChanging(value);
                ReportPropertyChanging("CATDeductible");
                _CATDeductible = StructuralObject.SetValidValue(value, true, "CATDeductible");
                ReportPropertyChanged("CATDeductible");
                OnCATDeductibleChanged();
            }
        }
        private global::System.String _CATDeductible;
        partial void OnCATDeductibleChanging(global::System.String value);
        partial void OnCATDeductibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettlementType
        {
            get
            {
                return _SettlementType;
            }
            set
            {
                OnSettlementTypeChanging(value);
                ReportPropertyChanging("SettlementType");
                _SettlementType = StructuralObject.SetValidValue(value, true, "SettlementType");
                ReportPropertyChanged("SettlementType");
                OnSettlementTypeChanged();
            }
        }
        private global::System.String _SettlementType;
        partial void OnSettlementTypeChanging(global::System.String value);
        partial void OnSettlementTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConInsuranceLimit
        {
            get
            {
                return _ConInsuranceLimit;
            }
            set
            {
                OnConInsuranceLimitChanging(value);
                ReportPropertyChanging("ConInsuranceLimit");
                _ConInsuranceLimit = StructuralObject.SetValidValue(value, "ConInsuranceLimit");
                ReportPropertyChanged("ConInsuranceLimit");
                OnConInsuranceLimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConInsuranceLimit;
        partial void OnConInsuranceLimitChanging(Nullable<global::System.Decimal> value);
        partial void OnConInsuranceLimitChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyPropertyLimit_LeadPolicy", "LeadPolicy")]
        public LeadPolicy LeadPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyPropertyLimit_LeadPolicy", "LeadPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyPropertyLimit_LeadPolicy", "LeadPolicy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicy> LeadPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyPropertyLimit_LeadPolicy", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicy>("CRMModel.FK_PolicyPropertyLimit_LeadPolicy", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyLimit_Limit", "Limit")]
        public Limit Limit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Limit>("CRMModel.FK_PolicyLimit_Limit", "Limit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Limit>("CRMModel.FK_PolicyLimit_Limit", "Limit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Limit> LimitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Limit>("CRMModel.FK_PolicyLimit_Limit", "Limit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Limit>("CRMModel.FK_PolicyLimit_Limit", "Limit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="PolicyNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicyNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicyNote object.
        /// </summary>
        /// <param name="policyNoteID">Initial value of the PolicyNoteID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        public static PolicyNote CreatePolicyNote(global::System.Int32 policyNoteID, global::System.Int32 policyID)
        {
            PolicyNote policyNote = new PolicyNote();
            policyNote.PolicyNoteID = policyNoteID;
            policyNote.PolicyID = policyID;
            return policyNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyNoteID
        {
            get
            {
                return _PolicyNoteID;
            }
            set
            {
                if (_PolicyNoteID != value)
                {
                    OnPolicyNoteIDChanging(value);
                    ReportPropertyChanging("PolicyNoteID");
                    _PolicyNoteID = StructuralObject.SetValidValue(value, "PolicyNoteID");
                    ReportPropertyChanged("PolicyNoteID");
                    OnPolicyNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _PolicyNoteID;
        partial void OnPolicyNoteIDChanging(global::System.Int32 value);
        partial void OnPolicyNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NoteDate
        {
            get
            {
                return _NoteDate;
            }
            set
            {
                OnNoteDateChanging(value);
                ReportPropertyChanging("NoteDate");
                _NoteDate = StructuralObject.SetValidValue(value, "NoteDate");
                ReportPropertyChanged("NoteDate");
                OnNoteDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NoteDate;
        partial void OnNoteDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNoteDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyNote_LeadPolicy", "LeadPolicy")]
        public LeadPolicy LeadPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyNote_LeadPolicy", "LeadPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyNote_LeadPolicy", "LeadPolicy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicy> LeadPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicyNote_LeadPolicy", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicy>("CRMModel.FK_PolicyNote_LeadPolicy", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyNote_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_PolicyNote_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_PolicyNote_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_PolicyNote_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_PolicyNote_SecUser", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="PolicySubLimit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PolicySubLimit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PolicySubLimit object.
        /// </summary>
        /// <param name="policySublimitID">Initial value of the PolicySublimitID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        /// <param name="limitType">Initial value of the LimitType property.</param>
        public static PolicySubLimit CreatePolicySubLimit(global::System.Int32 policySublimitID, global::System.Int32 policyID, global::System.Int32 limitType)
        {
            PolicySubLimit policySubLimit = new PolicySubLimit();
            policySubLimit.PolicySublimitID = policySublimitID;
            policySubLimit.PolicyID = policyID;
            policySubLimit.LimitType = limitType;
            return policySubLimit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicySublimitID
        {
            get
            {
                return _PolicySublimitID;
            }
            set
            {
                if (_PolicySublimitID != value)
                {
                    OnPolicySublimitIDChanging(value);
                    ReportPropertyChanging("PolicySublimitID");
                    _PolicySublimitID = StructuralObject.SetValidValue(value, "PolicySublimitID");
                    ReportPropertyChanged("PolicySublimitID");
                    OnPolicySublimitIDChanged();
                }
            }
        }
        private global::System.Int32 _PolicySublimitID;
        partial void OnPolicySublimitIDChanging(global::System.Int32 value);
        partial void OnPolicySublimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitType
        {
            get
            {
                return _LimitType;
            }
            set
            {
                OnLimitTypeChanging(value);
                ReportPropertyChanging("LimitType");
                _LimitType = StructuralObject.SetValidValue(value, "LimitType");
                ReportPropertyChanged("LimitType");
                OnLimitTypeChanged();
            }
        }
        private global::System.Int32 _LimitType;
        partial void OnLimitTypeChanging(global::System.Int32 value);
        partial void OnLimitTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SublimitDescription
        {
            get
            {
                return _SublimitDescription;
            }
            set
            {
                OnSublimitDescriptionChanging(value);
                ReportPropertyChanging("SublimitDescription");
                _SublimitDescription = StructuralObject.SetValidValue(value, true, "SublimitDescription");
                ReportPropertyChanged("SublimitDescription");
                OnSublimitDescriptionChanged();
            }
        }
        private global::System.String _SublimitDescription;
        partial void OnSublimitDescriptionChanging(global::System.String value);
        partial void OnSublimitDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Sublimit
        {
            get
            {
                return _Sublimit;
            }
            set
            {
                OnSublimitChanging(value);
                ReportPropertyChanging("Sublimit");
                _Sublimit = StructuralObject.SetValidValue(value, "Sublimit");
                ReportPropertyChanged("Sublimit");
                OnSublimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _Sublimit;
        partial void OnSublimitChanging(Nullable<global::System.Decimal> value);
        partial void OnSublimitChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicySubLimit_LeadPolicy", "LeadPolicy")]
        public LeadPolicy LeadPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicySubLimit_LeadPolicy", "LeadPolicy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicySubLimit_LeadPolicy", "LeadPolicy").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeadPolicy> LeadPolicyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeadPolicy>("CRMModel.FK_PolicySubLimit_LeadPolicy", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeadPolicy>("CRMModel.FK_PolicySubLimit_LeadPolicy", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimSubLimit_PolicySubLimit", "ClaimSubLimit")]
        public EntityCollection<ClaimSubLimit> ClaimSubLimits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimSubLimit>("CRMModel.FK_ClaimSubLimit_PolicySubLimit", "ClaimSubLimit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimSubLimit>("CRMModel.FK_ClaimSubLimit_PolicySubLimit", "ClaimSubLimit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ProducerMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProducerMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProducerMaster object.
        /// </summary>
        /// <param name="producerId">Initial value of the ProducerId property.</param>
        public static ProducerMaster CreateProducerMaster(global::System.Int32 producerId)
        {
            ProducerMaster producerMaster = new ProducerMaster();
            producerMaster.ProducerId = producerId;
            return producerMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProducerId
        {
            get
            {
                return _ProducerId;
            }
            set
            {
                if (_ProducerId != value)
                {
                    OnProducerIdChanging(value);
                    ReportPropertyChanging("ProducerId");
                    _ProducerId = StructuralObject.SetValidValue(value, "ProducerId");
                    ReportPropertyChanged("ProducerId");
                    OnProducerIdChanged();
                }
            }
        }
        private global::System.Int32 _ProducerId;
        partial void OnProducerIdChanging(global::System.Int32 value);
        partial void OnProducerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProducerName
        {
            get
            {
                return _ProducerName;
            }
            set
            {
                OnProducerNameChanging(value);
                ReportPropertyChanging("ProducerName");
                _ProducerName = StructuralObject.SetValidValue(value, true, "ProducerName");
                ReportPropertyChanged("ProducerName");
                OnProducerNameChanged();
            }
        }
        private global::System.String _ProducerName;
        partial void OnProducerNameChanging(global::System.String value);
        partial void OnProducerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_PrimaryProducerId", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_PrimaryProducerId", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_PrimaryProducerId", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ProgressStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProgressStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProgressStatus object.
        /// </summary>
        /// <param name="progressStatusID">Initial value of the ProgressStatusID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ProgressStatus CreateProgressStatus(global::System.Int32 progressStatusID, global::System.Boolean isActive)
        {
            ProgressStatus progressStatus = new ProgressStatus();
            progressStatus.ProgressStatusID = progressStatusID;
            progressStatus.IsActive = isActive;
            return progressStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProgressStatusID
        {
            get
            {
                return _ProgressStatusID;
            }
            set
            {
                if (_ProgressStatusID != value)
                {
                    OnProgressStatusIDChanging(value);
                    ReportPropertyChanging("ProgressStatusID");
                    _ProgressStatusID = StructuralObject.SetValidValue(value, "ProgressStatusID");
                    ReportPropertyChanged("ProgressStatusID");
                    OnProgressStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ProgressStatusID;
        partial void OnProgressStatusIDChanging(global::System.Int32 value);
        partial void OnProgressStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProgressDescription
        {
            get
            {
                return _ProgressDescription;
            }
            set
            {
                OnProgressDescriptionChanging(value);
                ReportPropertyChanging("ProgressDescription");
                _ProgressDescription = StructuralObject.SetValidValue(value, true, "ProgressDescription");
                ReportPropertyChanged("ProgressDescription");
                OnProgressDescriptionChanged();
            }
        }
        private global::System.String _ProgressDescription;
        partial void OnProgressDescriptionChanging(global::System.String value);
        partial void OnProgressDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Recurrence")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recurrence : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Recurrence object.
        /// </summary>
        /// <param name="recurringID">Initial value of the RecurringID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Recurrence CreateRecurrence(global::System.Int32 recurringID, global::System.Boolean isActive)
        {
            Recurrence recurrence = new Recurrence();
            recurrence.RecurringID = recurringID;
            recurrence.IsActive = isActive;
            return recurrence;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecurringID
        {
            get
            {
                return _RecurringID;
            }
            set
            {
                if (_RecurringID != value)
                {
                    OnRecurringIDChanging(value);
                    ReportPropertyChanging("RecurringID");
                    _RecurringID = StructuralObject.SetValidValue(value, "RecurringID");
                    ReportPropertyChanged("RecurringID");
                    OnRecurringIDChanged();
                }
            }
        }
        private global::System.Int32 _RecurringID;
        partial void OnRecurringIDChanging(global::System.Int32 value);
        partial void OnRecurringIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskID;
        partial void OnTaskIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value, "EventID");
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EventID;
        partial void OnEventIDChanging(Nullable<global::System.Int32> value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value, "DateStart");
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStart;
        partial void OnDateStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value, "DateEnd");
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatFrequencyID
        {
            get
            {
                return _RepeatFrequencyID;
            }
            set
            {
                OnRepeatFrequencyIDChanging(value);
                ReportPropertyChanging("RepeatFrequencyID");
                _RepeatFrequencyID = StructuralObject.SetValidValue(value, "RepeatFrequencyID");
                ReportPropertyChanged("RepeatFrequencyID");
                OnRepeatFrequencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatFrequencyID;
        partial void OnRepeatFrequencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatFrequencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatDailyEveryDay
        {
            get
            {
                return _IsRepeatDailyEveryDay;
            }
            set
            {
                OnIsRepeatDailyEveryDayChanging(value);
                ReportPropertyChanging("IsRepeatDailyEveryDay");
                _IsRepeatDailyEveryDay = StructuralObject.SetValidValue(value, "IsRepeatDailyEveryDay");
                ReportPropertyChanged("IsRepeatDailyEveryDay");
                OnIsRepeatDailyEveryDayChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatDailyEveryDay;
        partial void OnIsRepeatDailyEveryDayChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatDailyEveryDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatDailyForEveryNDays
        {
            get
            {
                return _IsRepeatDailyForEveryNDays;
            }
            set
            {
                OnIsRepeatDailyForEveryNDaysChanging(value);
                ReportPropertyChanging("IsRepeatDailyForEveryNDays");
                _IsRepeatDailyForEveryNDays = StructuralObject.SetValidValue(value, "IsRepeatDailyForEveryNDays");
                ReportPropertyChanged("IsRepeatDailyForEveryNDays");
                OnIsRepeatDailyForEveryNDaysChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatDailyForEveryNDays;
        partial void OnIsRepeatDailyForEveryNDaysChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatDailyForEveryNDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatDailyForEveryNDays
        {
            get
            {
                return _RepeatDailyForEveryNDays;
            }
            set
            {
                OnRepeatDailyForEveryNDaysChanging(value);
                ReportPropertyChanging("RepeatDailyForEveryNDays");
                _RepeatDailyForEveryNDays = StructuralObject.SetValidValue(value, "RepeatDailyForEveryNDays");
                ReportPropertyChanged("RepeatDailyForEveryNDays");
                OnRepeatDailyForEveryNDaysChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatDailyForEveryNDays;
        partial void OnRepeatDailyForEveryNDaysChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatDailyForEveryNDaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatWeeklyEveryNWeeks
        {
            get
            {
                return _RepeatWeeklyEveryNWeeks;
            }
            set
            {
                OnRepeatWeeklyEveryNWeeksChanging(value);
                ReportPropertyChanging("RepeatWeeklyEveryNWeeks");
                _RepeatWeeklyEveryNWeeks = StructuralObject.SetValidValue(value, "RepeatWeeklyEveryNWeeks");
                ReportPropertyChanged("RepeatWeeklyEveryNWeeks");
                OnRepeatWeeklyEveryNWeeksChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatWeeklyEveryNWeeks;
        partial void OnRepeatWeeklyEveryNWeeksChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatWeeklyEveryNWeeksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatWeeklyEveryNWeeksMon
        {
            get
            {
                return _IsRepeatWeeklyEveryNWeeksMon;
            }
            set
            {
                OnIsRepeatWeeklyEveryNWeeksMonChanging(value);
                ReportPropertyChanging("IsRepeatWeeklyEveryNWeeksMon");
                _IsRepeatWeeklyEveryNWeeksMon = StructuralObject.SetValidValue(value, "IsRepeatWeeklyEveryNWeeksMon");
                ReportPropertyChanged("IsRepeatWeeklyEveryNWeeksMon");
                OnIsRepeatWeeklyEveryNWeeksMonChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatWeeklyEveryNWeeksMon;
        partial void OnIsRepeatWeeklyEveryNWeeksMonChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatWeeklyEveryNWeeksMonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatWeeklyEveryNWeeksTue
        {
            get
            {
                return _IsRepeatWeeklyEveryNWeeksTue;
            }
            set
            {
                OnIsRepeatWeeklyEveryNWeeksTueChanging(value);
                ReportPropertyChanging("IsRepeatWeeklyEveryNWeeksTue");
                _IsRepeatWeeklyEveryNWeeksTue = StructuralObject.SetValidValue(value, "IsRepeatWeeklyEveryNWeeksTue");
                ReportPropertyChanged("IsRepeatWeeklyEveryNWeeksTue");
                OnIsRepeatWeeklyEveryNWeeksTueChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatWeeklyEveryNWeeksTue;
        partial void OnIsRepeatWeeklyEveryNWeeksTueChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatWeeklyEveryNWeeksTueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatWeeklyEveryNWeeksWed
        {
            get
            {
                return _IsRepeatWeeklyEveryNWeeksWed;
            }
            set
            {
                OnIsRepeatWeeklyEveryNWeeksWedChanging(value);
                ReportPropertyChanging("IsRepeatWeeklyEveryNWeeksWed");
                _IsRepeatWeeklyEveryNWeeksWed = StructuralObject.SetValidValue(value, "IsRepeatWeeklyEveryNWeeksWed");
                ReportPropertyChanged("IsRepeatWeeklyEveryNWeeksWed");
                OnIsRepeatWeeklyEveryNWeeksWedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatWeeklyEveryNWeeksWed;
        partial void OnIsRepeatWeeklyEveryNWeeksWedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatWeeklyEveryNWeeksWedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatWeeklyEveryNWeeksThur
        {
            get
            {
                return _IsRepeatWeeklyEveryNWeeksThur;
            }
            set
            {
                OnIsRepeatWeeklyEveryNWeeksThurChanging(value);
                ReportPropertyChanging("IsRepeatWeeklyEveryNWeeksThur");
                _IsRepeatWeeklyEveryNWeeksThur = StructuralObject.SetValidValue(value, "IsRepeatWeeklyEveryNWeeksThur");
                ReportPropertyChanged("IsRepeatWeeklyEveryNWeeksThur");
                OnIsRepeatWeeklyEveryNWeeksThurChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatWeeklyEveryNWeeksThur;
        partial void OnIsRepeatWeeklyEveryNWeeksThurChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatWeeklyEveryNWeeksThurChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatWeeklyEveryNWeeksFri
        {
            get
            {
                return _IsRepeatWeeklyEveryNWeeksFri;
            }
            set
            {
                OnIsRepeatWeeklyEveryNWeeksFriChanging(value);
                ReportPropertyChanging("IsRepeatWeeklyEveryNWeeksFri");
                _IsRepeatWeeklyEveryNWeeksFri = StructuralObject.SetValidValue(value, "IsRepeatWeeklyEveryNWeeksFri");
                ReportPropertyChanged("IsRepeatWeeklyEveryNWeeksFri");
                OnIsRepeatWeeklyEveryNWeeksFriChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatWeeklyEveryNWeeksFri;
        partial void OnIsRepeatWeeklyEveryNWeeksFriChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatWeeklyEveryNWeeksFriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatWeeklyEveryNWeeksSat
        {
            get
            {
                return _IsRepeatWeeklyEveryNWeeksSat;
            }
            set
            {
                OnIsRepeatWeeklyEveryNWeeksSatChanging(value);
                ReportPropertyChanging("IsRepeatWeeklyEveryNWeeksSat");
                _IsRepeatWeeklyEveryNWeeksSat = StructuralObject.SetValidValue(value, "IsRepeatWeeklyEveryNWeeksSat");
                ReportPropertyChanged("IsRepeatWeeklyEveryNWeeksSat");
                OnIsRepeatWeeklyEveryNWeeksSatChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatWeeklyEveryNWeeksSat;
        partial void OnIsRepeatWeeklyEveryNWeeksSatChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatWeeklyEveryNWeeksSatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatWeeklyEveryNWeeksSun
        {
            get
            {
                return _IsRepeatWeeklyEveryNWeeksSun;
            }
            set
            {
                OnIsRepeatWeeklyEveryNWeeksSunChanging(value);
                ReportPropertyChanging("IsRepeatWeeklyEveryNWeeksSun");
                _IsRepeatWeeklyEveryNWeeksSun = StructuralObject.SetValidValue(value, "IsRepeatWeeklyEveryNWeeksSun");
                ReportPropertyChanged("IsRepeatWeeklyEveryNWeeksSun");
                OnIsRepeatWeeklyEveryNWeeksSunChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatWeeklyEveryNWeeksSun;
        partial void OnIsRepeatWeeklyEveryNWeeksSunChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatWeeklyEveryNWeeksSunChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatMonthlyOnDay
        {
            get
            {
                return _IsRepeatMonthlyOnDay;
            }
            set
            {
                OnIsRepeatMonthlyOnDayChanging(value);
                ReportPropertyChanging("IsRepeatMonthlyOnDay");
                _IsRepeatMonthlyOnDay = StructuralObject.SetValidValue(value, "IsRepeatMonthlyOnDay");
                ReportPropertyChanged("IsRepeatMonthlyOnDay");
                OnIsRepeatMonthlyOnDayChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatMonthlyOnDay;
        partial void OnIsRepeatMonthlyOnDayChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatMonthlyOnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatMonthlyOnDay
        {
            get
            {
                return _RepeatMonthlyOnDay;
            }
            set
            {
                OnRepeatMonthlyOnDayChanging(value);
                ReportPropertyChanging("RepeatMonthlyOnDay");
                _RepeatMonthlyOnDay = StructuralObject.SetValidValue(value, "RepeatMonthlyOnDay");
                ReportPropertyChanged("RepeatMonthlyOnDay");
                OnRepeatMonthlyOnDayChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatMonthlyOnDay;
        partial void OnRepeatMonthlyOnDayChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatMonthlyOnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatMonthlyOnDayEvery
        {
            get
            {
                return _RepeatMonthlyOnDayEvery;
            }
            set
            {
                OnRepeatMonthlyOnDayEveryChanging(value);
                ReportPropertyChanging("RepeatMonthlyOnDayEvery");
                _RepeatMonthlyOnDayEvery = StructuralObject.SetValidValue(value, "RepeatMonthlyOnDayEvery");
                ReportPropertyChanged("RepeatMonthlyOnDayEvery");
                OnRepeatMonthlyOnDayEveryChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatMonthlyOnDayEvery;
        partial void OnRepeatMonthlyOnDayEveryChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatMonthlyOnDayEveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatMonthlyOn
        {
            get
            {
                return _IsRepeatMonthlyOn;
            }
            set
            {
                OnIsRepeatMonthlyOnChanging(value);
                ReportPropertyChanging("IsRepeatMonthlyOn");
                _IsRepeatMonthlyOn = StructuralObject.SetValidValue(value, "IsRepeatMonthlyOn");
                ReportPropertyChanged("IsRepeatMonthlyOn");
                OnIsRepeatMonthlyOnChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatMonthlyOn;
        partial void OnIsRepeatMonthlyOnChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatMonthlyOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatMonthlyOn
        {
            get
            {
                return _RepeatMonthlyOn;
            }
            set
            {
                OnRepeatMonthlyOnChanging(value);
                ReportPropertyChanging("RepeatMonthlyOn");
                _RepeatMonthlyOn = StructuralObject.SetValidValue(value, "RepeatMonthlyOn");
                ReportPropertyChanged("RepeatMonthlyOn");
                OnRepeatMonthlyOnChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatMonthlyOn;
        partial void OnRepeatMonthlyOnChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatMonthlyOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatMonthlyOnWeekDay
        {
            get
            {
                return _RepeatMonthlyOnWeekDay;
            }
            set
            {
                OnRepeatMonthlyOnWeekDayChanging(value);
                ReportPropertyChanging("RepeatMonthlyOnWeekDay");
                _RepeatMonthlyOnWeekDay = StructuralObject.SetValidValue(value, "RepeatMonthlyOnWeekDay");
                ReportPropertyChanged("RepeatMonthlyOnWeekDay");
                OnRepeatMonthlyOnWeekDayChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatMonthlyOnWeekDay;
        partial void OnRepeatMonthlyOnWeekDayChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatMonthlyOnWeekDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatMonthlyOnEvery
        {
            get
            {
                return _RepeatMonthlyOnEvery;
            }
            set
            {
                OnRepeatMonthlyOnEveryChanging(value);
                ReportPropertyChanging("RepeatMonthlyOnEvery");
                _RepeatMonthlyOnEvery = StructuralObject.SetValidValue(value, "RepeatMonthlyOnEvery");
                ReportPropertyChanged("RepeatMonthlyOnEvery");
                OnRepeatMonthlyOnEveryChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatMonthlyOnEvery;
        partial void OnRepeatMonthlyOnEveryChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatMonthlyOnEveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatYearlyOnEvery
        {
            get
            {
                return _IsRepeatYearlyOnEvery;
            }
            set
            {
                OnIsRepeatYearlyOnEveryChanging(value);
                ReportPropertyChanging("IsRepeatYearlyOnEvery");
                _IsRepeatYearlyOnEvery = StructuralObject.SetValidValue(value, "IsRepeatYearlyOnEvery");
                ReportPropertyChanged("IsRepeatYearlyOnEvery");
                OnIsRepeatYearlyOnEveryChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatYearlyOnEvery;
        partial void OnIsRepeatYearlyOnEveryChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatYearlyOnEveryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatYearlyMonth
        {
            get
            {
                return _RepeatYearlyMonth;
            }
            set
            {
                OnRepeatYearlyMonthChanging(value);
                ReportPropertyChanging("RepeatYearlyMonth");
                _RepeatYearlyMonth = StructuralObject.SetValidValue(value, "RepeatYearlyMonth");
                ReportPropertyChanged("RepeatYearlyMonth");
                OnRepeatYearlyMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatYearlyMonth;
        partial void OnRepeatYearlyMonthChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatYearlyMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatYearlyMonthDay
        {
            get
            {
                return _RepeatYearlyMonthDay;
            }
            set
            {
                OnRepeatYearlyMonthDayChanging(value);
                ReportPropertyChanging("RepeatYearlyMonthDay");
                _RepeatYearlyMonthDay = StructuralObject.SetValidValue(value, "RepeatYearlyMonthDay");
                ReportPropertyChanged("RepeatYearlyMonthDay");
                OnRepeatYearlyMonthDayChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatYearlyMonthDay;
        partial void OnRepeatYearlyMonthDayChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatYearlyMonthDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsRepeatYearlyOn
        {
            get
            {
                return _IsRepeatYearlyOn;
            }
            set
            {
                OnIsRepeatYearlyOnChanging(value);
                ReportPropertyChanging("IsRepeatYearlyOn");
                _IsRepeatYearlyOn = StructuralObject.SetValidValue(value, "IsRepeatYearlyOn");
                ReportPropertyChanged("IsRepeatYearlyOn");
                OnIsRepeatYearlyOnChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsRepeatYearlyOn;
        partial void OnIsRepeatYearlyOnChanging(Nullable<global::System.Boolean> value);
        partial void OnIsRepeatYearlyOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatYearlyOn
        {
            get
            {
                return _RepeatYearlyOn;
            }
            set
            {
                OnRepeatYearlyOnChanging(value);
                ReportPropertyChanging("RepeatYearlyOn");
                _RepeatYearlyOn = StructuralObject.SetValidValue(value, "RepeatYearlyOn");
                ReportPropertyChanged("RepeatYearlyOn");
                OnRepeatYearlyOnChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatYearlyOn;
        partial void OnRepeatYearlyOnChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatYearlyOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatYearlyOnWeekDay
        {
            get
            {
                return _RepeatYearlyOnWeekDay;
            }
            set
            {
                OnRepeatYearlyOnWeekDayChanging(value);
                ReportPropertyChanging("RepeatYearlyOnWeekDay");
                _RepeatYearlyOnWeekDay = StructuralObject.SetValidValue(value, "RepeatYearlyOnWeekDay");
                ReportPropertyChanged("RepeatYearlyOnWeekDay");
                OnRepeatYearlyOnWeekDayChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatYearlyOnWeekDay;
        partial void OnRepeatYearlyOnWeekDayChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatYearlyOnWeekDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatYearlyOnMonth
        {
            get
            {
                return _RepeatYearlyOnMonth;
            }
            set
            {
                OnRepeatYearlyOnMonthChanging(value);
                ReportPropertyChanging("RepeatYearlyOnMonth");
                _RepeatYearlyOnMonth = StructuralObject.SetValidValue(value, "RepeatYearlyOnMonth");
                ReportPropertyChanged("RepeatYearlyOnMonth");
                OnRepeatYearlyOnMonthChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatYearlyOnMonth;
        partial void OnRepeatYearlyOnMonthChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatYearlyOnMonthChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Task_Recurrence", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CRMModel.FK_Task_Recurrence", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CRMModel.FK_Task_Recurrence", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Reminder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reminder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reminder object.
        /// </summary>
        /// <param name="reminderID">Initial value of the ReminderID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Reminder CreateReminder(global::System.Int32 reminderID, global::System.Boolean isActive)
        {
            Reminder reminder = new Reminder();
            reminder.ReminderID = reminderID;
            reminder.IsActive = isActive;
            return reminder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReminderID
        {
            get
            {
                return _ReminderID;
            }
            set
            {
                if (_ReminderID != value)
                {
                    OnReminderIDChanging(value);
                    ReportPropertyChanging("ReminderID");
                    _ReminderID = StructuralObject.SetValidValue(value, "ReminderID");
                    ReportPropertyChanged("ReminderID");
                    OnReminderIDChanged();
                }
            }
        }
        private global::System.Int32 _ReminderID;
        partial void OnReminderIDChanging(global::System.Int32 value);
        partial void OnReminderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                OnTaskIDChanging(value);
                ReportPropertyChanging("TaskID");
                _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                ReportPropertyChanged("TaskID");
                OnTaskIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskID;
        partial void OnTaskIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReminderDate
        {
            get
            {
                return _ReminderDate;
            }
            set
            {
                OnReminderDateChanging(value);
                ReportPropertyChanging("ReminderDate");
                _ReminderDate = StructuralObject.SetValidValue(value, "ReminderDate");
                ReportPropertyChanged("ReminderDate");
                OnReminderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReminderDate;
        partial void OnReminderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReminderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RepeatFrequencyID
        {
            get
            {
                return _RepeatFrequencyID;
            }
            set
            {
                OnRepeatFrequencyIDChanging(value);
                ReportPropertyChanging("RepeatFrequencyID");
                _RepeatFrequencyID = StructuralObject.SetValidValue(value, "RepeatFrequencyID");
                ReportPropertyChanged("RepeatFrequencyID");
                OnRepeatFrequencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RepeatFrequencyID;
        partial void OnRepeatFrequencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnRepeatFrequencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AlertTypeID
        {
            get
            {
                return _AlertTypeID;
            }
            set
            {
                OnAlertTypeIDChanging(value);
                ReportPropertyChanging("AlertTypeID");
                _AlertTypeID = StructuralObject.SetValidValue(value, "AlertTypeID");
                ReportPropertyChanged("AlertTypeID");
                OnAlertTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AlertTypeID;
        partial void OnAlertTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnAlertTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReminderWhen
        {
            get
            {
                return _ReminderWhen;
            }
            set
            {
                OnReminderWhenChanging(value);
                ReportPropertyChanging("ReminderWhen");
                _ReminderWhen = StructuralObject.SetValidValue(value, "ReminderWhen");
                ReportPropertyChanged("ReminderWhen");
                OnReminderWhenChanged();
            }
        }
        private Nullable<global::System.Int32> _ReminderWhen;
        partial void OnReminderWhenChanging(Nullable<global::System.Int32> value);
        partial void OnReminderWhenChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Reminder_Task", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CRMModel.FK_Reminder_Task", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CRMModel.FK_Reminder_Task", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("CRMModel.FK_Reminder_Task", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("CRMModel.FK_Reminder_Task", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ReminderMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReminderMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReminderMaster object.
        /// </summary>
        /// <param name="reminderID">Initial value of the ReminderID property.</param>
        public static ReminderMaster CreateReminderMaster(global::System.Int32 reminderID)
        {
            ReminderMaster reminderMaster = new ReminderMaster();
            reminderMaster.ReminderID = reminderID;
            return reminderMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value, "Duration");
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private Nullable<global::System.Int32> _Duration;
        partial void OnDurationChanging(Nullable<global::System.Int32> value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReminderID
        {
            get
            {
                return _ReminderID;
            }
            set
            {
                if (_ReminderID != value)
                {
                    OnReminderIDChanging(value);
                    ReportPropertyChanging("ReminderID");
                    _ReminderID = StructuralObject.SetValidValue(value, "ReminderID");
                    ReportPropertyChanged("ReminderID");
                    OnReminderIDChanged();
                }
            }
        }
        private global::System.Int32 _ReminderID;
        partial void OnReminderIDChanging(global::System.Int32 value);
        partial void OnReminderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DurationType
        {
            get
            {
                return _DurationType;
            }
            set
            {
                OnDurationTypeChanging(value);
                ReportPropertyChanging("DurationType");
                _DurationType = StructuralObject.SetValidValue(value, "DurationType");
                ReportPropertyChanged("DurationType");
                OnDurationTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _DurationType;
        partial void OnDurationTypeChanging(Nullable<global::System.Int32> value);
        partial void OnDurationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActive
        {
            get
            {
                return _isActive;
            }
            set
            {
                OnisActiveChanging(value);
                ReportPropertyChanging("isActive");
                _isActive = StructuralObject.SetValidValue(value, "isActive");
                ReportPropertyChanged("isActive");
                OnisActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActive;
        partial void OnisActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnisActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> clientID
        {
            get
            {
                return _clientID;
            }
            set
            {
                OnclientIDChanging(value);
                ReportPropertyChanging("clientID");
                _clientID = StructuralObject.SetValidValue(value, "clientID");
                ReportPropertyChanged("clientID");
                OnclientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _clientID;
        partial void OnclientIDChanging(Nullable<global::System.Int32> value);
        partial void OnclientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_ReminderMaster_StatusMaster", "StatusMaster")]
        public EntityCollection<StatusMaster> StatusMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StatusMaster>("CRMModel.fk_ReminderMaster_StatusMaster", "StatusMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StatusMaster>("CRMModel.fk_ReminderMaster_StatusMaster", "StatusMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ReportedToInsurerMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportedToInsurerMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportedToInsurerMaster object.
        /// </summary>
        /// <param name="reportedToInsurerId">Initial value of the ReportedToInsurerId property.</param>
        public static ReportedToInsurerMaster CreateReportedToInsurerMaster(global::System.Int32 reportedToInsurerId)
        {
            ReportedToInsurerMaster reportedToInsurerMaster = new ReportedToInsurerMaster();
            reportedToInsurerMaster.ReportedToInsurerId = reportedToInsurerId;
            return reportedToInsurerMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportedToInsurerId
        {
            get
            {
                return _ReportedToInsurerId;
            }
            set
            {
                if (_ReportedToInsurerId != value)
                {
                    OnReportedToInsurerIdChanging(value);
                    ReportPropertyChanging("ReportedToInsurerId");
                    _ReportedToInsurerId = StructuralObject.SetValidValue(value, "ReportedToInsurerId");
                    ReportPropertyChanged("ReportedToInsurerId");
                    OnReportedToInsurerIdChanged();
                }
            }
        }
        private global::System.Int32 _ReportedToInsurerId;
        partial void OnReportedToInsurerIdChanging(global::System.Int32 value);
        partial void OnReportedToInsurerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportedToInsurer
        {
            get
            {
                return _ReportedToInsurer;
            }
            set
            {
                OnReportedToInsurerChanging(value);
                ReportPropertyChanging("ReportedToInsurer");
                _ReportedToInsurer = StructuralObject.SetValidValue(value, true, "ReportedToInsurer");
                ReportPropertyChanged("ReportedToInsurer");
                OnReportedToInsurerChanged();
            }
        }
        private global::System.String _ReportedToInsurer;
        partial void OnReportedToInsurerChanging(global::System.String value);
        partial void OnReportedToInsurerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadReporterToInsurer", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadReporterToInsurer", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadReporterToInsurer", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="RoleAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleAction object.
        /// </summary>
        /// <param name="roleActionID">Initial value of the RoleActionID property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="actionID">Initial value of the ActionID property.</param>
        public static RoleAction CreateRoleAction(global::System.Int32 roleActionID, global::System.Int32 clientID, global::System.Int32 roleID, global::System.Int32 actionID)
        {
            RoleAction roleAction = new RoleAction();
            roleAction.RoleActionID = roleActionID;
            roleAction.ClientID = clientID;
            roleAction.RoleID = roleID;
            roleAction.ActionID = actionID;
            return roleAction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleActionID
        {
            get
            {
                return _RoleActionID;
            }
            set
            {
                if (_RoleActionID != value)
                {
                    OnRoleActionIDChanging(value);
                    ReportPropertyChanging("RoleActionID");
                    _RoleActionID = StructuralObject.SetValidValue(value, "RoleActionID");
                    ReportPropertyChanged("RoleActionID");
                    OnRoleActionIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleActionID;
        partial void OnRoleActionIDChanging(global::System.Int32 value);
        partial void OnRoleActionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionID
        {
            get
            {
                return _ActionID;
            }
            set
            {
                OnActionIDChanging(value);
                ReportPropertyChanging("ActionID");
                _ActionID = StructuralObject.SetValidValue(value, "ActionID");
                ReportPropertyChanged("ActionID");
                OnActionIDChanged();
            }
        }
        private global::System.Int32 _ActionID;
        partial void OnActionIDChanging(global::System.Int32 value);
        partial void OnActionIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Rule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rule object.
        /// </summary>
        /// <param name="ruleID">Initial value of the RuleID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Rule CreateRule(global::System.Int32 ruleID, global::System.Boolean isActive)
        {
            Rule rule = new Rule();
            rule.RuleID = ruleID;
            rule.IsActive = isActive;
            return rule;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleID
        {
            get
            {
                return _RuleID;
            }
            set
            {
                if (_RuleID != value)
                {
                    OnRuleIDChanging(value);
                    ReportPropertyChanging("RuleID");
                    _RuleID = StructuralObject.SetValidValue(value, "RuleID");
                    ReportPropertyChanged("RuleID");
                    OnRuleIDChanged();
                }
            }
        }
        private global::System.Int32 _RuleID;
        partial void OnRuleIDChanging(global::System.Int32 value);
        partial void OnRuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuleName
        {
            get
            {
                return _RuleName;
            }
            set
            {
                OnRuleNameChanging(value);
                ReportPropertyChanging("RuleName");
                _RuleName = StructuralObject.SetValidValue(value, true, "RuleName");
                ReportPropertyChanged("RuleName");
                OnRuleNameChanged();
            }
        }
        private global::System.String _RuleName;
        partial void OnRuleNameChanging(global::System.String value);
        partial void OnRuleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RuleDescription
        {
            get
            {
                return _RuleDescription;
            }
            set
            {
                OnRuleDescriptionChanging(value);
                ReportPropertyChanging("RuleDescription");
                _RuleDescription = StructuralObject.SetValidValue(value, true, "RuleDescription");
                ReportPropertyChanged("RuleDescription");
                OnRuleDescriptionChanged();
            }
        }
        private global::System.String _RuleDescription;
        partial void OnRuleDescriptionChanging(global::System.String value);
        partial void OnRuleDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_BusinessRule_Rule", "BusinessRule")]
        public EntityCollection<BusinessRule> BusinessRules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusinessRule>("CRMModel.FK_BusinessRule_Rule", "BusinessRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusinessRule>("CRMModel.FK_BusinessRule_Rule", "BusinessRule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="RuleException")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RuleException : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RuleException object.
        /// </summary>
        /// <param name="ruleExceptionID">Initial value of the RuleExceptionID property.</param>
        /// <param name="exceptionDate">Initial value of the ExceptionDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static RuleException CreateRuleException(global::System.Int32 ruleExceptionID, global::System.DateTime exceptionDate, global::System.Boolean isActive)
        {
            RuleException ruleException = new RuleException();
            ruleException.RuleExceptionID = ruleExceptionID;
            ruleException.ExceptionDate = exceptionDate;
            ruleException.IsActive = isActive;
            return ruleException;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RuleExceptionID
        {
            get
            {
                return _RuleExceptionID;
            }
            set
            {
                if (_RuleExceptionID != value)
                {
                    OnRuleExceptionIDChanging(value);
                    ReportPropertyChanging("RuleExceptionID");
                    _RuleExceptionID = StructuralObject.SetValidValue(value, "RuleExceptionID");
                    ReportPropertyChanged("RuleExceptionID");
                    OnRuleExceptionIDChanged();
                }
            }
        }
        private global::System.Int32 _RuleExceptionID;
        partial void OnRuleExceptionIDChanging(global::System.Int32 value);
        partial void OnRuleExceptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BusinessRuleID
        {
            get
            {
                return _BusinessRuleID;
            }
            set
            {
                OnBusinessRuleIDChanging(value);
                ReportPropertyChanging("BusinessRuleID");
                _BusinessRuleID = StructuralObject.SetValidValue(value, "BusinessRuleID");
                ReportPropertyChanged("BusinessRuleID");
                OnBusinessRuleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _BusinessRuleID;
        partial void OnBusinessRuleIDChanging(Nullable<global::System.Int32> value);
        partial void OnBusinessRuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExceptionDate
        {
            get
            {
                return _ExceptionDate;
            }
            set
            {
                OnExceptionDateChanging(value);
                ReportPropertyChanging("ExceptionDate");
                _ExceptionDate = StructuralObject.SetValidValue(value, "ExceptionDate");
                ReportPropertyChanged("ExceptionDate");
                OnExceptionDateChanged();
            }
        }
        private global::System.DateTime _ExceptionDate;
        partial void OnExceptionDateChanging(global::System.DateTime value);
        partial void OnExceptionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                OnObjectIDChanging(value);
                ReportPropertyChanging("ObjectID");
                _ObjectID = StructuralObject.SetValidValue(value, "ObjectID");
                ReportPropertyChanged("ObjectID");
                OnObjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectID;
        partial void OnObjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                OnObjectTypeIDChanging(value);
                ReportPropertyChanging("ObjectTypeID");
                _ObjectTypeID = StructuralObject.SetValidValue(value, "ObjectTypeID");
                ReportPropertyChanged("ObjectTypeID");
                OnObjectTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectTypeID;
        partial void OnObjectTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_BusinessRule", "BusinessRule")]
        public BusinessRule BusinessRule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessRule>("CRMModel.FK_RuleException_BusinessRule", "BusinessRule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessRule>("CRMModel.FK_RuleException_BusinessRule", "BusinessRule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessRule> BusinessRuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessRule>("CRMModel.FK_RuleException_BusinessRule", "BusinessRule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessRule>("CRMModel.FK_RuleException_BusinessRule", "BusinessRule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_RuleException_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_RuleException_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_RuleException_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.FK_RuleException_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_SecUser", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_RuleException_SecUser", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_RuleException_SecUser", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.FK_RuleException_SecUser", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.FK_RuleException_SecUser", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_RuleException", "RuleException1")]
        public RuleException RuleException1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RuleException> RuleException1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_RuleException", "RuleException")]
        public RuleException RuleException2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RuleException> RuleException2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RuleException>("CRMModel.FK_RuleException_RuleException", "RuleException", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_RuleObject", "RuleObject")]
        public RuleObject RuleObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleObject>("CRMModel.FK_RuleException_RuleObject", "RuleObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleObject>("CRMModel.FK_RuleException_RuleObject", "RuleObject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RuleObject> RuleObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RuleObject>("CRMModel.FK_RuleException_RuleObject", "RuleObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RuleObject>("CRMModel.FK_RuleException_RuleObject", "RuleObject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="RuleObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RuleObject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RuleObject object.
        /// </summary>
        /// <param name="objectTypeID">Initial value of the ObjectTypeID property.</param>
        public static RuleObject CreateRuleObject(global::System.Int32 objectTypeID)
        {
            RuleObject ruleObject = new RuleObject();
            ruleObject.ObjectTypeID = objectTypeID;
            return ruleObject;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectTypeID
        {
            get
            {
                return _ObjectTypeID;
            }
            set
            {
                if (_ObjectTypeID != value)
                {
                    OnObjectTypeIDChanging(value);
                    ReportPropertyChanging("ObjectTypeID");
                    _ObjectTypeID = StructuralObject.SetValidValue(value, "ObjectTypeID");
                    ReportPropertyChanged("ObjectTypeID");
                    OnObjectTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ObjectTypeID;
        partial void OnObjectTypeIDChanging(global::System.Int32 value);
        partial void OnObjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectName
        {
            get
            {
                return _ObjectName;
            }
            set
            {
                OnObjectNameChanging(value);
                ReportPropertyChanging("ObjectName");
                _ObjectName = StructuralObject.SetValidValue(value, true, "ObjectName");
                ReportPropertyChanged("ObjectName");
                OnObjectNameChanged();
            }
        }
        private global::System.String _ObjectName;
        partial void OnObjectNameChanging(global::System.String value);
        partial void OnObjectNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_RuleObject", "RuleException")]
        public EntityCollection<RuleException> RuleExceptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleException>("CRMModel.FK_RuleException_RuleObject", "RuleException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleException>("CRMModel.FK_RuleException_RuleObject", "RuleException", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecLoginLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecLoginLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecLoginLog object.
        /// </summary>
        /// <param name="logId">Initial value of the LogId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="loginId">Initial value of the LoginId property.</param>
        /// <param name="loginTime">Initial value of the LoginTime property.</param>
        /// <param name="logoutTime">Initial value of the LogoutTime property.</param>
        /// <param name="sucess">Initial value of the Sucess property.</param>
        public static SecLoginLog CreateSecLoginLog(global::System.Int32 logId, global::System.Int32 userId, global::System.String loginId, global::System.DateTime loginTime, global::System.DateTime logoutTime, global::System.Boolean sucess)
        {
            SecLoginLog secLoginLog = new SecLoginLog();
            secLoginLog.LogId = logId;
            secLoginLog.UserId = userId;
            secLoginLog.LoginId = loginId;
            secLoginLog.LoginTime = loginTime;
            secLoginLog.LogoutTime = logoutTime;
            secLoginLog.Sucess = sucess;
            return secLoginLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogId
        {
            get
            {
                return _LogId;
            }
            set
            {
                if (_LogId != value)
                {
                    OnLogIdChanging(value);
                    ReportPropertyChanging("LogId");
                    _LogId = StructuralObject.SetValidValue(value, "LogId");
                    ReportPropertyChanged("LogId");
                    OnLogIdChanged();
                }
            }
        }
        private global::System.Int32 _LogId;
        partial void OnLogIdChanging(global::System.Int32 value);
        partial void OnLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginId
        {
            get
            {
                return _LoginId;
            }
            set
            {
                OnLoginIdChanging(value);
                ReportPropertyChanging("LoginId");
                _LoginId = StructuralObject.SetValidValue(value, false, "LoginId");
                ReportPropertyChanged("LoginId");
                OnLoginIdChanged();
            }
        }
        private global::System.String _LoginId;
        partial void OnLoginIdChanging(global::System.String value);
        partial void OnLoginIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value, "LoginTime");
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.DateTime _LoginTime;
        partial void OnLoginTimeChanging(global::System.DateTime value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogoutTime
        {
            get
            {
                return _LogoutTime;
            }
            set
            {
                OnLogoutTimeChanging(value);
                ReportPropertyChanging("LogoutTime");
                _LogoutTime = StructuralObject.SetValidValue(value, "LogoutTime");
                ReportPropertyChanged("LogoutTime");
                OnLogoutTimeChanged();
            }
        }
        private global::System.DateTime _LogoutTime;
        partial void OnLogoutTimeChanging(global::System.DateTime value);
        partial void OnLogoutTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sucess
        {
            get
            {
                return _Sucess;
            }
            set
            {
                OnSucessChanging(value);
                ReportPropertyChanging("Sucess");
                _Sucess = StructuralObject.SetValidValue(value, "Sucess");
                ReportPropertyChanged("Sucess");
                OnSucessChanged();
            }
        }
        private global::System.Boolean _Sucess;
        partial void OnSucessChanging(global::System.Boolean value);
        partial void OnSucessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedMachineIP
        {
            get
            {
                return _CreatedMachineIP;
            }
            set
            {
                OnCreatedMachineIPChanging(value);
                ReportPropertyChanging("CreatedMachineIP");
                _CreatedMachineIP = StructuralObject.SetValidValue(value, true, "CreatedMachineIP");
                ReportPropertyChanged("CreatedMachineIP");
                OnCreatedMachineIPChanged();
            }
        }
        private global::System.String _CreatedMachineIP;
        partial void OnCreatedMachineIPChanging(global::System.String value);
        partial void OnCreatedMachineIPChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecModule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecModule object.
        /// </summary>
        /// <param name="moduleId">Initial value of the ModuleId property.</param>
        /// <param name="moduleName">Initial value of the ModuleName property.</param>
        /// <param name="moduleDesc">Initial value of the ModuleDesc property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="moduleType">Initial value of the ModuleType property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        public static SecModule CreateSecModule(global::System.Int32 moduleId, global::System.String moduleName, global::System.String moduleDesc, global::System.String url, global::System.Int32 moduleType, global::System.Boolean status, global::System.DateTime createdOn, global::System.Int32 createdBy, global::System.DateTime updatedOn, global::System.Int32 updatedBy)
        {
            SecModule secModule = new SecModule();
            secModule.ModuleId = moduleId;
            secModule.ModuleName = moduleName;
            secModule.ModuleDesc = moduleDesc;
            secModule.Url = url;
            secModule.ModuleType = moduleType;
            secModule.Status = status;
            secModule.CreatedOn = createdOn;
            secModule.CreatedBy = createdBy;
            secModule.UpdatedOn = updatedOn;
            secModule.UpdatedBy = updatedBy;
            return secModule;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleId
        {
            get
            {
                return _ModuleId;
            }
            set
            {
                if (_ModuleId != value)
                {
                    OnModuleIdChanging(value);
                    ReportPropertyChanging("ModuleId");
                    _ModuleId = StructuralObject.SetValidValue(value, "ModuleId");
                    ReportPropertyChanged("ModuleId");
                    OnModuleIdChanged();
                }
            }
        }
        private global::System.Int32 _ModuleId;
        partial void OnModuleIdChanging(global::System.Int32 value);
        partial void OnModuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, false, "ModuleName");
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleDesc
        {
            get
            {
                return _ModuleDesc;
            }
            set
            {
                OnModuleDescChanging(value);
                ReportPropertyChanging("ModuleDesc");
                _ModuleDesc = StructuralObject.SetValidValue(value, false, "ModuleDesc");
                ReportPropertyChanged("ModuleDesc");
                OnModuleDescChanged();
            }
        }
        private global::System.String _ModuleDesc;
        partial void OnModuleDescChanging(global::System.String value);
        partial void OnModuleDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value, "ParentId");
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false, "Url");
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleType
        {
            get
            {
                return _ModuleType;
            }
            set
            {
                OnModuleTypeChanging(value);
                ReportPropertyChanging("ModuleType");
                _ModuleType = StructuralObject.SetValidValue(value, "ModuleType");
                ReportPropertyChanged("ModuleType");
                OnModuleTypeChanged();
            }
        }
        private global::System.Int32 _ModuleType;
        partial void OnModuleTypeChanging(global::System.Int32 value);
        partial void OnModuleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasNew
        {
            get
            {
                return _HasNew;
            }
            set
            {
                OnHasNewChanging(value);
                ReportPropertyChanging("HasNew");
                _HasNew = StructuralObject.SetValidValue(value, "HasNew");
                ReportPropertyChanged("HasNew");
                OnHasNewChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasNew;
        partial void OnHasNewChanging(Nullable<global::System.Boolean> value);
        partial void OnHasNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasEdit
        {
            get
            {
                return _HasEdit;
            }
            set
            {
                OnHasEditChanging(value);
                ReportPropertyChanging("HasEdit");
                _HasEdit = StructuralObject.SetValidValue(value, "HasEdit");
                ReportPropertyChanged("HasEdit");
                OnHasEditChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasEdit;
        partial void OnHasEditChanging(Nullable<global::System.Boolean> value);
        partial void OnHasEditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasDelete
        {
            get
            {
                return _HasDelete;
            }
            set
            {
                OnHasDeleteChanging(value);
                ReportPropertyChanging("HasDelete");
                _HasDelete = StructuralObject.SetValidValue(value, "HasDelete");
                ReportPropertyChanged("HasDelete");
                OnHasDeleteChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasDelete;
        partial void OnHasDeleteChanging(Nullable<global::System.Boolean> value);
        partial void OnHasDeleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value, "CreatedOn");
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedMachineIP
        {
            get
            {
                return _CreatedMachineIP;
            }
            set
            {
                OnCreatedMachineIPChanging(value);
                ReportPropertyChanging("CreatedMachineIP");
                _CreatedMachineIP = StructuralObject.SetValidValue(value, true, "CreatedMachineIP");
                ReportPropertyChanged("CreatedMachineIP");
                OnCreatedMachineIPChanged();
            }
        }
        private global::System.String _CreatedMachineIP;
        partial void OnCreatedMachineIPChanging(global::System.String value);
        partial void OnCreatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value, "UpdatedOn");
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, "UpdatedBy");
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int32 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int32 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedMachineIP
        {
            get
            {
                return _UpdatedMachineIP;
            }
            set
            {
                OnUpdatedMachineIPChanging(value);
                ReportPropertyChanging("UpdatedMachineIP");
                _UpdatedMachineIP = StructuralObject.SetValidValue(value, true, "UpdatedMachineIP");
                ReportPropertyChanged("UpdatedMachineIP");
                OnUpdatedMachineIPChanged();
            }
        }
        private global::System.String _UpdatedMachineIP;
        partial void OnUpdatedMachineIPChanging(global::System.String value);
        partial void OnUpdatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int16> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> VersionNumber
        {
            get
            {
                return _VersionNumber;
            }
            set
            {
                OnVersionNumberChanging(value);
                ReportPropertyChanging("VersionNumber");
                _VersionNumber = StructuralObject.SetValidValue(value, "VersionNumber");
                ReportPropertyChanged("VersionNumber");
                OnVersionNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _VersionNumber;
        partial void OnVersionNumberChanging(Nullable<global::System.Int32> value);
        partial void OnVersionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSystem
        {
            get
            {
                return _IsSystem;
            }
            set
            {
                OnIsSystemChanging(value);
                ReportPropertyChanging("IsSystem");
                _IsSystem = StructuralObject.SetValidValue(value, "IsSystem");
                ReportPropertyChanged("IsSystem");
                OnIsSystemChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSystem;
        partial void OnIsSystemChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSystemChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecModule_SecModule", "SecModule1")]
        public EntityCollection<SecModule> SecModule1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecModule>("CRMModel.FK_SecModule_SecModule", "SecModule1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecModule>("CRMModel.FK_SecModule_SecModule", "SecModule1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecModule_SecModule", "SecModule")]
        public SecModule ParentModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecModule>("CRMModel.FK_SecModule_SecModule", "SecModule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecModule>("CRMModel.FK_SecModule_SecModule", "SecModule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecModule> ParentModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecModule>("CRMModel.FK_SecModule_SecModule", "SecModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecModule>("CRMModel.FK_SecModule_SecModule", "SecModule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleModule_SecModule", "SecRoleModule")]
        public EntityCollection<SecRoleModule> SecRoleModules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecRoleModule>("CRMModel.FK_SecRoleModule_SecModule", "SecRoleModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecRoleModule>("CRMModel.FK_SecRoleModule_SecModule", "SecRoleModule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecondaryProducerMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecondaryProducerMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecondaryProducerMaster object.
        /// </summary>
        /// <param name="secondaryProduceId">Initial value of the SecondaryProduceId property.</param>
        public static SecondaryProducerMaster CreateSecondaryProducerMaster(global::System.Int32 secondaryProduceId)
        {
            SecondaryProducerMaster secondaryProducerMaster = new SecondaryProducerMaster();
            secondaryProducerMaster.SecondaryProduceId = secondaryProduceId;
            return secondaryProducerMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecondaryProduceId
        {
            get
            {
                return _SecondaryProduceId;
            }
            set
            {
                if (_SecondaryProduceId != value)
                {
                    OnSecondaryProduceIdChanging(value);
                    ReportPropertyChanging("SecondaryProduceId");
                    _SecondaryProduceId = StructuralObject.SetValidValue(value, "SecondaryProduceId");
                    ReportPropertyChanged("SecondaryProduceId");
                    OnSecondaryProduceIdChanged();
                }
            }
        }
        private global::System.Int32 _SecondaryProduceId;
        partial void OnSecondaryProduceIdChanging(global::System.Int32 value);
        partial void OnSecondaryProduceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecondaryProduceName
        {
            get
            {
                return _SecondaryProduceName;
            }
            set
            {
                OnSecondaryProduceNameChanging(value);
                ReportPropertyChanging("SecondaryProduceName");
                _SecondaryProduceName = StructuralObject.SetValidValue(value, true, "SecondaryProduceName");
                ReportPropertyChanged("SecondaryProduceName");
                OnSecondaryProduceNameChanged();
            }
        }
        private global::System.String _SecondaryProduceName;
        partial void OnSecondaryProduceNameChanging(global::System.String value);
        partial void OnSecondaryProduceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_SecondaryProducerId", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_SecondaryProducerId", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_SecondaryProducerId", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecRole object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="roleDescription">Initial value of the RoleDescription property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        public static SecRole CreateSecRole(global::System.Int32 roleId, global::System.String roleName, global::System.String roleDescription, global::System.Boolean status, global::System.DateTime createdOn, global::System.Int32 createdBy, global::System.DateTime updatedOn, global::System.Int32 updatedBy)
        {
            SecRole secRole = new SecRole();
            secRole.RoleId = roleId;
            secRole.RoleName = roleName;
            secRole.RoleDescription = roleDescription;
            secRole.Status = status;
            secRole.CreatedOn = createdOn;
            secRole.CreatedBy = createdBy;
            secRole.UpdatedOn = updatedOn;
            secRole.UpdatedBy = updatedBy;
            return secRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, false, "RoleDescription");
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value, "CreatedOn");
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedMachineIP
        {
            get
            {
                return _CreatedMachineIP;
            }
            set
            {
                OnCreatedMachineIPChanging(value);
                ReportPropertyChanging("CreatedMachineIP");
                _CreatedMachineIP = StructuralObject.SetValidValue(value, true, "CreatedMachineIP");
                ReportPropertyChanged("CreatedMachineIP");
                OnCreatedMachineIPChanged();
            }
        }
        private global::System.String _CreatedMachineIP;
        partial void OnCreatedMachineIPChanging(global::System.String value);
        partial void OnCreatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value, "UpdatedOn");
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, "UpdatedBy");
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int32 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int32 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedMachineIP
        {
            get
            {
                return _UpdatedMachineIP;
            }
            set
            {
                OnUpdatedMachineIPChanging(value);
                ReportPropertyChanging("UpdatedMachineIP");
                _UpdatedMachineIP = StructuralObject.SetValidValue(value, true, "UpdatedMachineIP");
                ReportPropertyChanged("UpdatedMachineIP");
                OnUpdatedMachineIPChanged();
            }
        }
        private global::System.String _UpdatedMachineIP;
        partial void OnUpdatedMachineIPChanging(global::System.String value);
        partial void OnUpdatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isClient
        {
            get
            {
                return _isClient;
            }
            set
            {
                OnisClientChanging(value);
                ReportPropertyChanging("isClient");
                _isClient = StructuralObject.SetValidValue(value, "isClient");
                ReportPropertyChanged("isClient");
                OnisClientChanged();
            }
        }
        private Nullable<global::System.Boolean> _isClient;
        partial void OnisClientChanging(Nullable<global::System.Boolean> value);
        partial void OnisClientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleModule_SecRole", "SecRoleModule")]
        public EntityCollection<SecRoleModule> SecRoleModules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecRoleModule>("CRMModel.FK_SecRoleModule_SecRole", "SecRoleModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecRoleModule>("CRMModel.FK_SecRoleModule_SecRole", "SecRoleModule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleInvoiceApprovalRule_SecRole", "SecRoleInvoiceApprovalPermission")]
        public EntityCollection<SecRoleInvoiceApprovalPermission> SecRoleInvoiceApprovalPermissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecRoleInvoiceApprovalPermission>("CRMModel.FK_SecRoleInvoiceApprovalRule_SecRole", "SecRoleInvoiceApprovalPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecRoleInvoiceApprovalPermission>("CRMModel.FK_SecRoleInvoiceApprovalRule_SecRole", "SecRoleInvoiceApprovalPermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LotteryUser_LotteryRole", "SecUser")]
        public EntityCollection<SecUser> SecUsers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecUser>("CRMModel.FK_LotteryUser_LotteryRole", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecUser>("CRMModel.FK_LotteryUser_LotteryRole", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecRoleInvoiceApprovalPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecRoleInvoiceApprovalPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecRoleInvoiceApprovalPermission object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="amountFrom">Initial value of the AmountFrom property.</param>
        /// <param name="amountTo">Initial value of the AmountTo property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        public static SecRoleInvoiceApprovalPermission CreateSecRoleInvoiceApprovalPermission(global::System.Int32 id, global::System.Int32 roleID, global::System.Decimal amountFrom, global::System.Decimal amountTo, global::System.Int32 clientID)
        {
            SecRoleInvoiceApprovalPermission secRoleInvoiceApprovalPermission = new SecRoleInvoiceApprovalPermission();
            secRoleInvoiceApprovalPermission.ID = id;
            secRoleInvoiceApprovalPermission.RoleID = roleID;
            secRoleInvoiceApprovalPermission.AmountFrom = amountFrom;
            secRoleInvoiceApprovalPermission.AmountTo = amountTo;
            secRoleInvoiceApprovalPermission.ClientID = clientID;
            return secRoleInvoiceApprovalPermission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountFrom
        {
            get
            {
                return _AmountFrom;
            }
            set
            {
                OnAmountFromChanging(value);
                ReportPropertyChanging("AmountFrom");
                _AmountFrom = StructuralObject.SetValidValue(value, "AmountFrom");
                ReportPropertyChanged("AmountFrom");
                OnAmountFromChanged();
            }
        }
        private global::System.Decimal _AmountFrom;
        partial void OnAmountFromChanging(global::System.Decimal value);
        partial void OnAmountFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AmountTo
        {
            get
            {
                return _AmountTo;
            }
            set
            {
                OnAmountToChanging(value);
                ReportPropertyChanging("AmountTo");
                _AmountTo = StructuralObject.SetValidValue(value, "AmountTo");
                ReportPropertyChanged("AmountTo");
                OnAmountToChanged();
            }
        }
        private global::System.Decimal _AmountTo;
        partial void OnAmountToChanging(global::System.Decimal value);
        partial void OnAmountToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int32 _ClientID;
        partial void OnClientIDChanging(global::System.Int32 value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleInvoiceApprovalRule_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_SecRoleInvoiceApprovalRule_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_SecRoleInvoiceApprovalRule_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.FK_SecRoleInvoiceApprovalRule_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.FK_SecRoleInvoiceApprovalRule_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleInvoiceApprovalRule_SecRole", "SecRole")]
        public SecRole SecRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_SecRoleInvoiceApprovalRule_SecRole", "SecRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_SecRoleInvoiceApprovalRule_SecRole", "SecRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecRole> SecRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_SecRoleInvoiceApprovalRule_SecRole", "SecRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecRole>("CRMModel.FK_SecRoleInvoiceApprovalRule_SecRole", "SecRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecRoleModule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecRoleModule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecRoleModule object.
        /// </summary>
        /// <param name="roleModuleId">Initial value of the RoleModuleId property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static SecRoleModule CreateSecRoleModule(global::System.Int32 roleModuleId, global::System.Int32 roleID)
        {
            SecRoleModule secRoleModule = new SecRoleModule();
            secRoleModule.RoleModuleId = roleModuleId;
            secRoleModule.RoleID = roleID;
            return secRoleModule;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleModuleId
        {
            get
            {
                return _RoleModuleId;
            }
            set
            {
                if (_RoleModuleId != value)
                {
                    OnRoleModuleIdChanging(value);
                    ReportPropertyChanging("RoleModuleId");
                    _RoleModuleId = StructuralObject.SetValidValue(value, "RoleModuleId");
                    ReportPropertyChanged("RoleModuleId");
                    OnRoleModuleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleModuleId;
        partial void OnRoleModuleIdChanging(global::System.Int32 value);
        partial void OnRoleModuleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModuleID
        {
            get
            {
                return _ModuleID;
            }
            set
            {
                OnModuleIDChanging(value);
                ReportPropertyChanging("ModuleID");
                _ModuleID = StructuralObject.SetValidValue(value, "ModuleID");
                ReportPropertyChanged("ModuleID");
                OnModuleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ModuleID;
        partial void OnModuleIDChanging(Nullable<global::System.Int32> value);
        partial void OnModuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ViewPermission
        {
            get
            {
                return _ViewPermission;
            }
            set
            {
                OnViewPermissionChanging(value);
                ReportPropertyChanging("ViewPermission");
                _ViewPermission = StructuralObject.SetValidValue(value, "ViewPermission");
                ReportPropertyChanged("ViewPermission");
                OnViewPermissionChanged();
            }
        }
        private Nullable<global::System.Boolean> _ViewPermission;
        partial void OnViewPermissionChanging(Nullable<global::System.Boolean> value);
        partial void OnViewPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AddPermssion
        {
            get
            {
                return _AddPermssion;
            }
            set
            {
                OnAddPermssionChanging(value);
                ReportPropertyChanging("AddPermssion");
                _AddPermssion = StructuralObject.SetValidValue(value, "AddPermssion");
                ReportPropertyChanged("AddPermssion");
                OnAddPermssionChanged();
            }
        }
        private Nullable<global::System.Boolean> _AddPermssion;
        partial void OnAddPermssionChanging(Nullable<global::System.Boolean> value);
        partial void OnAddPermssionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> EditPermission
        {
            get
            {
                return _EditPermission;
            }
            set
            {
                OnEditPermissionChanging(value);
                ReportPropertyChanging("EditPermission");
                _EditPermission = StructuralObject.SetValidValue(value, "EditPermission");
                ReportPropertyChanged("EditPermission");
                OnEditPermissionChanged();
            }
        }
        private Nullable<global::System.Boolean> _EditPermission;
        partial void OnEditPermissionChanging(Nullable<global::System.Boolean> value);
        partial void OnEditPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DeletePermission
        {
            get
            {
                return _DeletePermission;
            }
            set
            {
                OnDeletePermissionChanging(value);
                ReportPropertyChanging("DeletePermission");
                _DeletePermission = StructuralObject.SetValidValue(value, "DeletePermission");
                ReportPropertyChanged("DeletePermission");
                OnDeletePermissionChanged();
            }
        }
        private Nullable<global::System.Boolean> _DeletePermission;
        partial void OnDeletePermissionChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletePermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value, "CreatedOn");
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedOn;
        partial void OnCreatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedMachineIP
        {
            get
            {
                return _CreatedMachineIP;
            }
            set
            {
                OnCreatedMachineIPChanging(value);
                ReportPropertyChanging("CreatedMachineIP");
                _CreatedMachineIP = StructuralObject.SetValidValue(value, true, "CreatedMachineIP");
                ReportPropertyChanged("CreatedMachineIP");
                OnCreatedMachineIPChanged();
            }
        }
        private global::System.String _CreatedMachineIP;
        partial void OnCreatedMachineIPChanging(global::System.String value);
        partial void OnCreatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value, "UpdatedOn");
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedOn;
        partial void OnUpdatedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, "UpdatedBy");
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatedBy;
        partial void OnUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedMachineIP
        {
            get
            {
                return _UpdatedMachineIP;
            }
            set
            {
                OnUpdatedMachineIPChanging(value);
                ReportPropertyChanging("UpdatedMachineIP");
                _UpdatedMachineIP = StructuralObject.SetValidValue(value, true, "UpdatedMachineIP");
                ReportPropertyChanged("UpdatedMachineIP");
                OnUpdatedMachineIPChanged();
            }
        }
        private global::System.String _UpdatedMachineIP;
        partial void OnUpdatedMachineIPChanging(global::System.String value);
        partial void OnUpdatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleModule_SecModule", "SecModule")]
        public SecModule SecModule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecModule>("CRMModel.FK_SecRoleModule_SecModule", "SecModule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecModule>("CRMModel.FK_SecRoleModule_SecModule", "SecModule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecModule> SecModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecModule>("CRMModel.FK_SecRoleModule_SecModule", "SecModule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecModule>("CRMModel.FK_SecRoleModule_SecModule", "SecModule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_SecRoleModule_SecRole", "SecRole")]
        public SecRole SecRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_SecRoleModule_SecRole", "SecRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_SecRoleModule_SecRole", "SecRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecRole> SecRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_SecRoleModule_SecRole", "SecRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecRole>("CRMModel.FK_SecRoleModule_SecRole", "SecRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecUser object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        public static SecUser CreateSecUser(global::System.Int32 userId, global::System.String userName, global::System.String password, global::System.Int32 roleId, global::System.Boolean status, global::System.String email, global::System.DateTime createdOn, global::System.Int32 createdBy, global::System.DateTime updatedOn, global::System.Int32 updatedBy)
        {
            SecUser secUser = new SecUser();
            secUser.UserId = userId;
            secUser.UserName = userName;
            secUser.Password = password;
            secUser.RoleId = roleId;
            secUser.Status = status;
            secUser.Email = email;
            secUser.CreatedOn = createdOn;
            secUser.CreatedBy = createdBy;
            secUser.UpdatedOn = updatedOn;
            secUser.UpdatedBy = updatedBy;
            return secUser;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Blocked
        {
            get
            {
                return _Blocked;
            }
            set
            {
                OnBlockedChanging(value);
                ReportPropertyChanging("Blocked");
                _Blocked = StructuralObject.SetValidValue(value, "Blocked");
                ReportPropertyChanged("Blocked");
                OnBlockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Blocked;
        partial void OnBlockedChanging(Nullable<global::System.Boolean> value);
        partial void OnBlockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Boolean _Status;
        partial void OnStatusChanging(global::System.Boolean value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value, "CreatedOn");
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedMachineIP
        {
            get
            {
                return _CreatedMachineIP;
            }
            set
            {
                OnCreatedMachineIPChanging(value);
                ReportPropertyChanging("CreatedMachineIP");
                _CreatedMachineIP = StructuralObject.SetValidValue(value, true, "CreatedMachineIP");
                ReportPropertyChanged("CreatedMachineIP");
                OnCreatedMachineIPChanged();
            }
        }
        private global::System.String _CreatedMachineIP;
        partial void OnCreatedMachineIPChanging(global::System.String value);
        partial void OnCreatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value, "UpdatedOn");
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, "UpdatedBy");
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int32 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int32 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedMachineIP
        {
            get
            {
                return _UpdatedMachineIP;
            }
            set
            {
                OnUpdatedMachineIPChanging(value);
                ReportPropertyChanging("UpdatedMachineIP");
                _UpdatedMachineIP = StructuralObject.SetValidValue(value, true, "UpdatedMachineIP");
                ReportPropertyChanged("UpdatedMachineIP");
                OnUpdatedMachineIPChanged();
            }
        }
        private global::System.String _UpdatedMachineIP;
        partial void OnUpdatedMachineIPChanging(global::System.String value);
        partial void OnUpdatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emailPassword
        {
            get
            {
                return _emailPassword;
            }
            set
            {
                OnemailPasswordChanging(value);
                ReportPropertyChanging("emailPassword");
                _emailPassword = StructuralObject.SetValidValue(value, true, "emailPassword");
                ReportPropertyChanged("emailPassword");
                OnemailPasswordChanged();
            }
        }
        private global::System.String _emailPassword;
        partial void OnemailPasswordChanging(global::System.String value);
        partial void OnemailPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emailSignature
        {
            get
            {
                return _emailSignature;
            }
            set
            {
                OnemailSignatureChanging(value);
                ReportPropertyChanging("emailSignature");
                _emailSignature = StructuralObject.SetValidValue(value, true, "emailSignature");
                ReportPropertyChanged("emailSignature");
                OnemailSignatureChanged();
            }
        }
        private global::System.String _emailSignature;
        partial void OnemailSignatureChanging(global::System.String value);
        partial void OnemailSignatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emailHost
        {
            get
            {
                return _emailHost;
            }
            set
            {
                OnemailHostChanging(value);
                ReportPropertyChanging("emailHost");
                _emailHost = StructuralObject.SetValidValue(value, true, "emailHost");
                ReportPropertyChanged("emailHost");
                OnemailHostChanged();
            }
        }
        private global::System.String _emailHost;
        partial void OnemailHostChanging(global::System.String value);
        partial void OnemailHostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String emailHostPort
        {
            get
            {
                return _emailHostPort;
            }
            set
            {
                OnemailHostPortChanging(value);
                ReportPropertyChanging("emailHostPort");
                _emailHostPort = StructuralObject.SetValidValue(value, true, "emailHostPort");
                ReportPropertyChanged("emailHostPort");
                OnemailHostPortChanged();
            }
        }
        private global::System.String _emailHostPort;
        partial void OnemailHostPortChanging(global::System.String value);
        partial void OnemailHostPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isSSL
        {
            get
            {
                return _isSSL;
            }
            set
            {
                OnisSSLChanging(value);
                ReportPropertyChanging("isSSL");
                _isSSL = StructuralObject.SetValidValue(value, "isSSL");
                ReportPropertyChanged("isSSL");
                OnisSSLChanged();
            }
        }
        private Nullable<global::System.Boolean> _isSSL;
        partial void OnisSSLChanging(Nullable<global::System.Boolean> value);
        partial void OnisSSLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isDeleted
        {
            get
            {
                return _isDeleted;
            }
            set
            {
                OnisDeletedChanging(value);
                ReportPropertyChanging("isDeleted");
                _isDeleted = StructuralObject.SetValidValue(value, "isDeleted");
                ReportPropertyChanged("isDeleted");
                OnisDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isDeleted;
        partial void OnisDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnisDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isViewAllClaims
        {
            get
            {
                return _isViewAllClaims;
            }
            set
            {
                OnisViewAllClaimsChanging(value);
                ReportPropertyChanging("isViewAllClaims");
                _isViewAllClaims = StructuralObject.SetValidValue(value, "isViewAllClaims");
                ReportPropertyChanged("isViewAllClaims");
                OnisViewAllClaimsChanged();
            }
        }
        private Nullable<global::System.Boolean> _isViewAllClaims;
        partial void OnisViewAllClaimsChanging(Nullable<global::System.Boolean> value);
        partial void OnisViewAllClaimsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XactNetUserID
        {
            get
            {
                return _XactNetUserID;
            }
            set
            {
                OnXactNetUserIDChanging(value);
                ReportPropertyChanging("XactNetUserID");
                _XactNetUserID = StructuralObject.SetValidValue(value, true, "XactNetUserID");
                ReportPropertyChanged("XactNetUserID");
                OnXactNetUserIDChanged();
            }
        }
        private global::System.String _XactNetUserID;
        partial void OnXactNetUserIDChanging(global::System.String value);
        partial void OnXactNetUserIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterNote_SecUser", "AdjusterNote")]
        public EntityCollection<AdjusterNote> AdjusterNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterNote>("CRMModel.FK_AdjusterNote_SecUser", "AdjusterNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterNote>("CRMModel.FK_AdjusterNote_SecUser", "AdjusterNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierComment_SecUser", "CarrierComment")]
        public EntityCollection<CarrierComment> CarrierComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierComment>("CRMModel.FK_CarrierComment_SecUser", "CarrierComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierComment>("CRMModel.FK_CarrierComment_SecUser", "CarrierComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimComment_SecUser", "ClaimComment")]
        public EntityCollection<ClaimComment> ClaimComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimComment>("CRMModel.FK_ClaimComment_SecUser", "ClaimComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimComment>("CRMModel.FK_ClaimComment_SecUser", "ClaimComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimImage_SecUser", "ClaimImage")]
        public EntityCollection<ClaimImage> ClaimImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimImage>("CRMModel.FK_ClaimImage_SecUser", "ClaimImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimImage>("CRMModel.FK_ClaimImage_SecUser", "ClaimImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Client_SecUser", "Client")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("CRMModel.FK_Client_SecUser", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("CRMModel.FK_Client_SecUser", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_ClientSecUSer", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_ClientSecUSer", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_ClientSecUSer", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("CRMModel.fk_ClientSecUSer", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("CRMModel.fk_ClientSecUSer", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadCommentUserId", "LeadComment")]
        public EntityCollection<LeadComment> LeadComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadComment>("CRMModel.fk_LeadCommentUserId", "LeadComment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadComment>("CRMModel.fk_LeadCommentUserId", "LeadComment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadUserId", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadUserId", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadUserId", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LotteryUser_LotteryRole", "SecRole")]
        public SecRole SecRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_LotteryUser_LotteryRole", "SecRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_LotteryUser_LotteryRole", "SecRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecRole> SecRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecRole>("CRMModel.FK_LotteryUser_LotteryRole", "SecRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecRole>("CRMModel.FK_LotteryUser_LotteryRole", "SecRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_SecUSer", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CRMModel.fk_SecUSer", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CRMModel.fk_SecUSer", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_UserId", "SecUserLock")]
        public EntityCollection<SecUserLock> SecUserLocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecUserLock>("CRMModel.fk_UserId", "SecUserLock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecUserLock>("CRMModel.fk_UserId", "SecUserLock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Contact_SecUser", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("CRMModel.FK_Contact_SecUser", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("CRMModel.FK_Contact_SecUser", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimExpense_SecUser", "ClaimExpense")]
        public EntityCollection<ClaimExpense> ClaimExpenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimExpense>("CRMModel.FK_ClaimExpense_SecUser", "ClaimExpense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimExpense>("CRMModel.FK_ClaimExpense_SecUser", "ClaimExpense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_ClaimService_SecUser", "ClaimService")]
        public EntityCollection<ClaimService> ClaimServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_SecUser", "ClaimService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClaimService>("CRMModel.FK_ClaimService_SecUser", "ClaimService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_SecUser", "Invitee")]
        public EntityCollection<Invitee> Invitees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitee>("CRMModel.FK_Invitee_SecUser", "Invitee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitee>("CRMModel.FK_Invitee_SecUser", "Invitee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_PolicyNote_SecUser", "PolicyNote")]
        public EntityCollection<PolicyNote> PolicyNotes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PolicyNote>("CRMModel.FK_PolicyNote_SecUser", "PolicyNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PolicyNote>("CRMModel.FK_PolicyNote_SecUser", "PolicyNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_RuleException_SecUser", "RuleException")]
        public EntityCollection<RuleException> RuleExceptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RuleException>("CRMModel.FK_RuleException_SecUser", "RuleException");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RuleException>("CRMModel.FK_RuleException_SecUser", "RuleException", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SecUserLock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecUserLock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecUserLock object.
        /// </summary>
        /// <param name="lockId">Initial value of the LockId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="updatedOn">Initial value of the UpdatedOn property.</param>
        /// <param name="updatedBy">Initial value of the UpdatedBy property.</param>
        public static SecUserLock CreateSecUserLock(global::System.Int32 lockId, global::System.DateTime createdOn, global::System.Int32 createdBy, global::System.DateTime updatedOn, global::System.Int32 updatedBy)
        {
            SecUserLock secUserLock = new SecUserLock();
            secUserLock.LockId = lockId;
            secUserLock.CreatedOn = createdOn;
            secUserLock.CreatedBy = createdBy;
            secUserLock.UpdatedOn = updatedOn;
            secUserLock.UpdatedBy = updatedBy;
            return secUserLock;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LockId
        {
            get
            {
                return _LockId;
            }
            set
            {
                if (_LockId != value)
                {
                    OnLockIdChanging(value);
                    ReportPropertyChanging("LockId");
                    _LockId = StructuralObject.SetValidValue(value, "LockId");
                    ReportPropertyChanged("LockId");
                    OnLockIdChanged();
                }
            }
        }
        private global::System.Int32 _LockId;
        partial void OnLockIdChanging(global::System.Int32 value);
        partial void OnLockIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value, "IsLocked");
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLocked;
        partial void OnIsLockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value, "DateFrom");
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFrom;
        partial void OnDateFromChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value, "DateTo");
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateTo;
        partial void OnDateToChanging(Nullable<global::System.DateTime> value);
        partial void OnDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value, "CreatedOn");
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, "CreatedBy");
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedMachineIP
        {
            get
            {
                return _CreatedMachineIP;
            }
            set
            {
                OnCreatedMachineIPChanging(value);
                ReportPropertyChanging("CreatedMachineIP");
                _CreatedMachineIP = StructuralObject.SetValidValue(value, true, "CreatedMachineIP");
                ReportPropertyChanged("CreatedMachineIP");
                OnCreatedMachineIPChanged();
            }
        }
        private global::System.String _CreatedMachineIP;
        partial void OnCreatedMachineIPChanging(global::System.String value);
        partial void OnCreatedMachineIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdatedOn
        {
            get
            {
                return _UpdatedOn;
            }
            set
            {
                OnUpdatedOnChanging(value);
                ReportPropertyChanging("UpdatedOn");
                _UpdatedOn = StructuralObject.SetValidValue(value, "UpdatedOn");
                ReportPropertyChanged("UpdatedOn");
                OnUpdatedOnChanged();
            }
        }
        private global::System.DateTime _UpdatedOn;
        partial void OnUpdatedOnChanging(global::System.DateTime value);
        partial void OnUpdatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatedBy
        {
            get
            {
                return _UpdatedBy;
            }
            set
            {
                OnUpdatedByChanging(value);
                ReportPropertyChanging("UpdatedBy");
                _UpdatedBy = StructuralObject.SetValidValue(value, "UpdatedBy");
                ReportPropertyChanged("UpdatedBy");
                OnUpdatedByChanged();
            }
        }
        private global::System.Int32 _UpdatedBy;
        partial void OnUpdatedByChanging(global::System.Int32 value);
        partial void OnUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdatedMachineIP
        {
            get
            {
                return _UpdatedMachineIP;
            }
            set
            {
                OnUpdatedMachineIPChanging(value);
                ReportPropertyChanging("UpdatedMachineIP");
                _UpdatedMachineIP = StructuralObject.SetValidValue(value, true, "UpdatedMachineIP");
                ReportPropertyChanged("UpdatedMachineIP");
                OnUpdatedMachineIPChanged();
            }
        }
        private global::System.String _UpdatedMachineIP;
        partial void OnUpdatedMachineIPChanging(global::System.String value);
        partial void OnUpdatedMachineIPChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_UserId", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_UserId", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_UserId", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_UserId", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.fk_UserId", "SecUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SiteInspectionCompleteMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SiteInspectionCompleteMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SiteInspectionCompleteMaster object.
        /// </summary>
        /// <param name="siteInspectionCompleteId">Initial value of the SiteInspectionCompleteId property.</param>
        public static SiteInspectionCompleteMaster CreateSiteInspectionCompleteMaster(global::System.Int32 siteInspectionCompleteId)
        {
            SiteInspectionCompleteMaster siteInspectionCompleteMaster = new SiteInspectionCompleteMaster();
            siteInspectionCompleteMaster.SiteInspectionCompleteId = siteInspectionCompleteId;
            return siteInspectionCompleteMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SiteInspectionCompleteId
        {
            get
            {
                return _SiteInspectionCompleteId;
            }
            set
            {
                if (_SiteInspectionCompleteId != value)
                {
                    OnSiteInspectionCompleteIdChanging(value);
                    ReportPropertyChanging("SiteInspectionCompleteId");
                    _SiteInspectionCompleteId = StructuralObject.SetValidValue(value, "SiteInspectionCompleteId");
                    ReportPropertyChanged("SiteInspectionCompleteId");
                    OnSiteInspectionCompleteIdChanged();
                }
            }
        }
        private global::System.Int32 _SiteInspectionCompleteId;
        partial void OnSiteInspectionCompleteIdChanging(global::System.Int32 value);
        partial void OnSiteInspectionCompleteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SiteInspectionCompleteName
        {
            get
            {
                return _SiteInspectionCompleteName;
            }
            set
            {
                OnSiteInspectionCompleteNameChanging(value);
                ReportPropertyChanging("SiteInspectionCompleteName");
                _SiteInspectionCompleteName = StructuralObject.SetValidValue(value, true, "SiteInspectionCompleteName");
                ReportPropertyChanged("SiteInspectionCompleteName");
                OnSiteInspectionCompleteNameChanged();
            }
        }
        private global::System.String _SiteInspectionCompleteName;
        partial void OnSiteInspectionCompleteNameChanging(global::System.String value);
        partial void OnSiteInspectionCompleteNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadSiteInspectionCompleted", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadSiteInspectionCompleted", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadSiteInspectionCompleted", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="StateMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateMaster object.
        /// </summary>
        /// <param name="stateId">Initial value of the StateId property.</param>
        public static StateMaster CreateStateMaster(global::System.Int32 stateId)
        {
            StateMaster stateMaster = new StateMaster();
            stateMaster.StateId = stateId;
            return stateMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                if (_StateId != value)
                {
                    OnStateIdChanging(value);
                    ReportPropertyChanging("StateId");
                    _StateId = StructuralObject.SetValidValue(value, "StateId");
                    ReportPropertyChanged("StateId");
                    OnStateIdChanged();
                }
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, true, "StateName");
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateCode
        {
            get
            {
                return _StateCode;
            }
            set
            {
                OnStateCodeChanging(value);
                ReportPropertyChanging("StateCode");
                _StateCode = StructuralObject.SetValidValue(value, true, "StateCode");
                ReportPropertyChanged("StateCode");
                OnStateCodeChanged();
            }
        }
        private global::System.String _StateCode;
        partial void OnStateCodeChanging(global::System.String value);
        partial void OnStateCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineInfo
        {
            get
            {
                return _UpdateMachineInfo;
            }
            set
            {
                OnUpdateMachineInfoChanging(value);
                ReportPropertyChanging("UpdateMachineInfo");
                _UpdateMachineInfo = StructuralObject.SetValidValue(value, true, "UpdateMachineInfo");
                ReportPropertyChanged("UpdateMachineInfo");
                OnUpdateMachineInfoChanged();
            }
        }
        private global::System.String _UpdateMachineInfo;
        partial void OnUpdateMachineInfoChanging(global::System.String value);
        partial void OnUpdateMachineInfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CityMaster_StateMaster", "CityMaster")]
        public EntityCollection<CityMaster> CityMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CityMaster>("CRMModel.FK_CityMaster_StateMaster", "CityMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CityMaster>("CRMModel.FK_CityMaster_StateMaster", "CityMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Client_StateMaster", "Client")]
        public EntityCollection<Client> Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("CRMModel.FK_Client_StateMaster", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("CRMModel.FK_Client_StateMaster", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Mortgagee_StateMaster", "Mortgagee")]
        public EntityCollection<Mortgagee> Mortgagees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Mortgagee>("CRMModel.fk_Mortgagee_StateMaster", "Mortgagee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Mortgagee>("CRMModel.fk_Mortgagee_StateMaster", "Mortgagee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_AdjusterServiceArea_StateMaster", "AdjusterServiceArea")]
        public EntityCollection<AdjusterServiceArea> AdjusterServiceAreas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterServiceArea>("CRMModel.FK_AdjusterServiceArea_StateMaster", "AdjusterServiceArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterServiceArea>("CRMModel.FK_AdjusterServiceArea_StateMaster", "AdjusterServiceArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_AdjusterMaster_StateMaster", "AdjusterMaster")]
        public EntityCollection<AdjusterMaster> AdjusterMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterMaster>("CRMModel.fk_AdjusterMaster_StateMaster", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterMaster>("CRMModel.fk_AdjusterMaster_StateMaster", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolictyState", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolictyState", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolictyState", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_AdjusterMaster_DeploymentState", "AdjusterMaster")]
        public EntityCollection<AdjusterMaster> AdjusterMasters1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdjusterMaster>("CRMModel.fk_AdjusterMaster_DeploymentState", "AdjusterMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdjusterMaster>("CRMModel.fk_AdjusterMaster_DeploymentState", "AdjusterMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_stateMaster", "Carrier")]
        public EntityCollection<Carrier> Carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carrier>("CRMModel.fk_Carrier_stateMaster", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carrier>("CRMModel.fk_Carrier_stateMaster", "Carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_CarrierLocation_StateMaster", "CarrierLocation")]
        public EntityCollection<CarrierLocation> CarrierLocations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_StateMaster", "CarrierLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CarrierLocation>("CRMModel.FK_CarrierLocation_StateMaster", "CarrierLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Contact_StateMaster", "Contact")]
        public EntityCollection<Contact> Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("CRMModel.fk_Contact_StateMaster", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("CRMModel.fk_Contact_StateMaster", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadStateId", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadStateId", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadStateId", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="StatusMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StatusMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StatusMaster object.
        /// </summary>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static StatusMaster CreateStatusMaster(global::System.Int32 statusId)
        {
            StatusMaster statusMaster = new StatusMaster();
            statusMaster.StatusId = statusId;
            return statusMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                if (_StatusId != value)
                {
                    OnStatusIdChanging(value);
                    ReportPropertyChanging("StatusId");
                    _StatusId = StructuralObject.SetValidValue(value, "StatusId");
                    ReportPropertyChanged("StatusId");
                    OnStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, true, "StatusName");
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReminderID
        {
            get
            {
                return _ReminderID;
            }
            set
            {
                OnReminderIDChanging(value);
                ReportPropertyChanging("ReminderID");
                _ReminderID = StructuralObject.SetValidValue(value, "ReminderID");
                ReportPropertyChanged("ReminderID");
                OnReminderIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReminderID;
        partial void OnReminderIDChanging(Nullable<global::System.Int32> value);
        partial void OnReminderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> clientID
        {
            get
            {
                return _clientID;
            }
            set
            {
                OnclientIDChanging(value);
                ReportPropertyChanging("clientID");
                _clientID = StructuralObject.SetValidValue(value, "clientID");
                ReportPropertyChanged("clientID");
                OnclientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _clientID;
        partial void OnclientIDChanging(Nullable<global::System.Int32> value);
        partial void OnclientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isCountable
        {
            get
            {
                return _isCountable;
            }
            set
            {
                OnisCountableChanging(value);
                ReportPropertyChanging("isCountable");
                _isCountable = StructuralObject.SetValidValue(value, "isCountable");
                ReportPropertyChanged("isCountable");
                OnisCountableChanged();
            }
        }
        private Nullable<global::System.Boolean> _isCountable;
        partial void OnisCountableChanging(Nullable<global::System.Boolean> value);
        partial void OnisCountableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isCountAsOpen
        {
            get
            {
                return _isCountAsOpen;
            }
            set
            {
                OnisCountAsOpenChanging(value);
                ReportPropertyChanging("isCountAsOpen");
                _isCountAsOpen = StructuralObject.SetValidValue(value, "isCountAsOpen");
                ReportPropertyChanged("isCountAsOpen");
                OnisCountAsOpenChanged();
            }
        }
        private Nullable<global::System.Boolean> _isCountAsOpen;
        partial void OnisCountAsOpenChanging(Nullable<global::System.Boolean> value);
        partial void OnisCountAsOpenChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_ReminderMaster_StatusMaster", "ReminderMaster")]
        public ReminderMaster ReminderMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderMaster>("CRMModel.fk_ReminderMaster_StatusMaster", "ReminderMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderMaster>("CRMModel.fk_ReminderMaster_StatusMaster", "ReminderMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReminderMaster> ReminderMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderMaster>("CRMModel.fk_ReminderMaster_StatusMaster", "ReminderMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReminderMaster>("CRMModel.fk_ReminderMaster_StatusMaster", "ReminderMaster", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicyStatus", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicyStatus", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicyStatus", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Status", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_Lead_Status", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_Lead_Status", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_StatusMaster", "Claim")]
        public EntityCollection<Claim> Claims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Claim>("CRMModel.FK_Claim_StatusMaster", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Claim>("CRMModel.FK_Claim_StatusMaster", "Claim", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SubLimitOfLiabilityMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubLimitOfLiabilityMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubLimitOfLiabilityMaster object.
        /// </summary>
        /// <param name="sublimitLiabilityID">Initial value of the SublimitLiabilityID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static SubLimitOfLiabilityMaster CreateSubLimitOfLiabilityMaster(global::System.Int32 sublimitLiabilityID, global::System.Boolean isActive)
        {
            SubLimitOfLiabilityMaster subLimitOfLiabilityMaster = new SubLimitOfLiabilityMaster();
            subLimitOfLiabilityMaster.SublimitLiabilityID = sublimitLiabilityID;
            subLimitOfLiabilityMaster.IsActive = isActive;
            return subLimitOfLiabilityMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SublimitLiabilityID
        {
            get
            {
                return _SublimitLiabilityID;
            }
            set
            {
                if (_SublimitLiabilityID != value)
                {
                    OnSublimitLiabilityIDChanging(value);
                    ReportPropertyChanging("SublimitLiabilityID");
                    _SublimitLiabilityID = StructuralObject.SetValidValue(value, "SublimitLiabilityID");
                    ReportPropertyChanged("SublimitLiabilityID");
                    OnSublimitLiabilityIDChanged();
                }
            }
        }
        private global::System.Int32 _SublimitLiabilityID;
        partial void OnSublimitLiabilityIDChanging(global::System.Int32 value);
        partial void OnSublimitLiabilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_SubLimitOfLiabilityMaster", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_SubLimitOfLiabilityMaster", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_SubLimitOfLiabilityMaster", "LeadPolicy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="SubStatusMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubStatusMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubStatusMaster object.
        /// </summary>
        /// <param name="subStatusId">Initial value of the SubStatusId property.</param>
        public static SubStatusMaster CreateSubStatusMaster(global::System.Int32 subStatusId)
        {
            SubStatusMaster subStatusMaster = new SubStatusMaster();
            subStatusMaster.SubStatusId = subStatusId;
            return subStatusMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubStatusId
        {
            get
            {
                return _SubStatusId;
            }
            set
            {
                if (_SubStatusId != value)
                {
                    OnSubStatusIdChanging(value);
                    ReportPropertyChanging("SubStatusId");
                    _SubStatusId = StructuralObject.SetValidValue(value, "SubStatusId");
                    ReportPropertyChanged("SubStatusId");
                    OnSubStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _SubStatusId;
        partial void OnSubStatusIdChanging(global::System.Int32 value);
        partial void OnSubStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubStatusName
        {
            get
            {
                return _SubStatusName;
            }
            set
            {
                OnSubStatusNameChanging(value);
                ReportPropertyChanging("SubStatusName");
                _SubStatusName = StructuralObject.SetValidValue(value, true, "SubStatusName");
                ReportPropertyChanged("SubStatusName");
                OnSubStatusNameChanged();
            }
        }
        private global::System.String _SubStatusName;
        partial void OnSubStatusNameChanging(global::System.String value);
        partial void OnSubStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> clientID
        {
            get
            {
                return _clientID;
            }
            set
            {
                OnclientIDChanging(value);
                ReportPropertyChanging("clientID");
                _clientID = StructuralObject.SetValidValue(value, "clientID");
                ReportPropertyChanged("clientID");
                OnclientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _clientID;
        partial void OnclientIDChanging(Nullable<global::System.Int32> value);
        partial void OnclientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicySubStatus", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicySubStatus", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicySubStatus", "LeadPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadSubStatus", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadSubStatus", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadSubStatus", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Claim_SubStatusMaster", "Claim")]
        public EntityCollection<Claim> Claims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Claim>("CRMModel.FK_Claim_SubStatusMaster", "Claim");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Claim>("CRMModel.FK_Claim_SubStatusMaster", "Claim", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Task CreateTask(global::System.Int32 id)
        {
            Task task = new Task();
            task.id = id;
            return task;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true, "text");
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> start_date
        {
            get
            {
                return _start_date;
            }
            set
            {
                Onstart_dateChanging(value);
                ReportPropertyChanging("start_date");
                _start_date = StructuralObject.SetValidValue(value, "start_date");
                ReportPropertyChanged("start_date");
                Onstart_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _start_date;
        partial void Onstart_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstart_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> end_date
        {
            get
            {
                return _end_date;
            }
            set
            {
                Onend_dateChanging(value);
                ReportPropertyChanging("end_date");
                _end_date = StructuralObject.SetValidValue(value, "end_date");
                ReportPropertyChanged("end_date");
                Onend_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _end_date;
        partial void Onend_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onend_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String details
        {
            get
            {
                return _details;
            }
            set
            {
                OndetailsChanging(value);
                ReportPropertyChanging("details");
                _details = StructuralObject.SetValidValue(value, true, "details");
                ReportPropertyChanged("details");
                OndetailsChanged();
            }
        }
        private global::System.String _details;
        partial void OndetailsChanging(global::System.String value);
        partial void OndetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> creator_id
        {
            get
            {
                return _creator_id;
            }
            set
            {
                Oncreator_idChanging(value);
                ReportPropertyChanging("creator_id");
                _creator_id = StructuralObject.SetValidValue(value, "creator_id");
                ReportPropertyChanged("creator_id");
                Oncreator_idChanged();
            }
        }
        private Nullable<global::System.Int32> _creator_id;
        partial void Oncreator_idChanging(Nullable<global::System.Int32> value);
        partial void Oncreator_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> owner_id
        {
            get
            {
                return _owner_id;
            }
            set
            {
                Onowner_idChanging(value);
                ReportPropertyChanging("owner_id");
                _owner_id = StructuralObject.SetValidValue(value, "owner_id");
                ReportPropertyChanged("owner_id");
                Onowner_idChanged();
            }
        }
        private Nullable<global::System.Int32> _owner_id;
        partial void Onowner_idChanging(Nullable<global::System.Int32> value);
        partial void Onowner_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                Onstatus_idChanging(value);
                ReportPropertyChanging("status_id");
                _status_id = StructuralObject.SetValidValue(value, "status_id");
                ReportPropertyChanged("status_id");
                Onstatus_idChanged();
            }
        }
        private Nullable<global::System.Int32> _status_id;
        partial void Onstatus_idChanging(Nullable<global::System.Int32> value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> lead_id
        {
            get
            {
                return _lead_id;
            }
            set
            {
                Onlead_idChanging(value);
                ReportPropertyChanging("lead_id");
                _lead_id = StructuralObject.SetValidValue(value, "lead_id");
                ReportPropertyChanged("lead_id");
                Onlead_idChanged();
            }
        }
        private Nullable<global::System.Int32> _lead_id;
        partial void Onlead_idChanging(Nullable<global::System.Int32> value);
        partial void Onlead_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> master_status_id
        {
            get
            {
                return _master_status_id;
            }
            set
            {
                Onmaster_status_idChanging(value);
                ReportPropertyChanging("master_status_id");
                _master_status_id = StructuralObject.SetValidValue(value, "master_status_id");
                ReportPropertyChanged("master_status_id");
                Onmaster_status_idChanged();
            }
        }
        private Nullable<global::System.Int32> _master_status_id;
        partial void Onmaster_status_idChanging(Nullable<global::System.Int32> value);
        partial void Onmaster_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> lead_policy_id
        {
            get
            {
                return _lead_policy_id;
            }
            set
            {
                Onlead_policy_idChanging(value);
                ReportPropertyChanging("lead_policy_id");
                _lead_policy_id = StructuralObject.SetValidValue(value, "lead_policy_id");
                ReportPropertyChanged("lead_policy_id");
                Onlead_policy_idChanged();
            }
        }
        private Nullable<global::System.Int32> _lead_policy_id;
        partial void Onlead_policy_idChanging(Nullable<global::System.Int32> value);
        partial void Onlead_policy_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> policy_type
        {
            get
            {
                return _policy_type;
            }
            set
            {
                Onpolicy_typeChanging(value);
                ReportPropertyChanging("policy_type");
                _policy_type = StructuralObject.SetValidValue(value, "policy_type");
                ReportPropertyChanged("policy_type");
                Onpolicy_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _policy_type;
        partial void Onpolicy_typeChanging(Nullable<global::System.Int32> value);
        partial void Onpolicy_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                OnPriorityIDChanging(value);
                ReportPropertyChanging("PriorityID");
                _PriorityID = StructuralObject.SetValidValue(value, "PriorityID");
                ReportPropertyChanged("PriorityID");
                OnPriorityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PriorityID;
        partial void OnPriorityIDChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isAllDay
        {
            get
            {
                return _isAllDay;
            }
            set
            {
                OnisAllDayChanging(value);
                ReportPropertyChanging("isAllDay");
                _isAllDay = StructuralObject.SetValidValue(value, "isAllDay");
                ReportPropertyChanged("isAllDay");
                OnisAllDayChanged();
            }
        }
        private Nullable<global::System.Boolean> _isAllDay;
        partial void OnisAllDayChanging(Nullable<global::System.Boolean> value);
        partial void OnisAllDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReminderInterval
        {
            get
            {
                return _ReminderInterval;
            }
            set
            {
                OnReminderIntervalChanging(value);
                ReportPropertyChanging("ReminderInterval");
                _ReminderInterval = StructuralObject.SetValidValue(value, "ReminderInterval");
                ReportPropertyChanged("ReminderInterval");
                OnReminderIntervalChanged();
            }
        }
        private Nullable<global::System.Int32> _ReminderInterval;
        partial void OnReminderIntervalChanging(Nullable<global::System.Int32> value);
        partial void OnReminderIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReminder
        {
            get
            {
                return _IsReminder;
            }
            set
            {
                OnIsReminderChanging(value);
                ReportPropertyChanging("IsReminder");
                _IsReminder = StructuralObject.SetValidValue(value, "IsReminder");
                ReportPropertyChanged("IsReminder");
                OnIsReminderChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReminder;
        partial void OnIsReminderChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReminderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskType
        {
            get
            {
                return _TaskType;
            }
            set
            {
                OnTaskTypeChanging(value);
                ReportPropertyChanging("TaskType");
                _TaskType = StructuralObject.SetValidValue(value, "TaskType");
                ReportPropertyChanged("TaskType");
                OnTaskTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskType;
        partial void OnTaskTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTaskTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecurringID
        {
            get
            {
                return _RecurringID;
            }
            set
            {
                OnRecurringIDChanging(value);
                ReportPropertyChanging("RecurringID");
                _RecurringID = StructuralObject.SetValidValue(value, "RecurringID");
                ReportPropertyChanged("RecurringID");
                OnRecurringIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RecurringID;
        partial void OnRecurringIDChanging(Nullable<global::System.Int32> value);
        partial void OnRecurringIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_TaskStatus", "TaskStatus")]
        public TaskStatus TaskStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskStatus>("CRMModel.fk_TaskStatus", "TaskStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskStatus>("CRMModel.fk_TaskStatus", "TaskStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskStatus> TaskStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskStatus>("CRMModel.fk_TaskStatus", "TaskStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskStatus>("CRMModel.fk_TaskStatus", "TaskStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Task_TaskPriority", "TaskPriority")]
        public TaskPriority TaskPriority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskPriority>("CRMModel.fk_Task_TaskPriority", "TaskPriority").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskPriority>("CRMModel.fk_Task_TaskPriority", "TaskPriority").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaskPriority> TaskPriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaskPriority>("CRMModel.fk_Task_TaskPriority", "TaskPriority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaskPriority>("CRMModel.fk_Task_TaskPriority", "TaskPriority", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead", "Lead")]
        public Lead Lead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_Lead", "Lead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_Lead", "Lead").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lead> LeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lead>("CRMModel.fk_Lead", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lead>("CRMModel.fk_Lead", "Lead", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_SecUSer", "SecUser")]
        public SecUser SecUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_SecUSer", "SecUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_SecUSer", "SecUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecUser> SecUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecUser>("CRMModel.fk_SecUSer", "SecUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecUser>("CRMModel.fk_SecUSer", "SecUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Reminder_Task", "Reminder")]
        public EntityCollection<Reminder> Reminders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reminder>("CRMModel.FK_Reminder_Task", "Reminder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reminder>("CRMModel.FK_Reminder_Task", "Reminder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Invitee_Task", "Invitee")]
        public EntityCollection<Invitee> Invitees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitee>("CRMModel.FK_Invitee_Task", "Invitee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitee>("CRMModel.FK_Invitee_Task", "Invitee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_Task_Recurrence", "Recurrence")]
        public Recurrence Recurrence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recurrence>("CRMModel.FK_Task_Recurrence", "Recurrence").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recurrence>("CRMModel.FK_Task_Recurrence", "Recurrence").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recurrence> RecurrenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recurrence>("CRMModel.FK_Task_Recurrence", "Recurrence");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recurrence>("CRMModel.FK_Task_Recurrence", "Recurrence", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="TaskPriority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskPriority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskPriority object.
        /// </summary>
        /// <param name="priorityID">Initial value of the PriorityID property.</param>
        /// <param name="priorityName">Initial value of the PriorityName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TaskPriority CreateTaskPriority(global::System.Int32 priorityID, global::System.String priorityName, global::System.Boolean isActive)
        {
            TaskPriority taskPriority = new TaskPriority();
            taskPriority.PriorityID = priorityID;
            taskPriority.PriorityName = priorityName;
            taskPriority.IsActive = isActive;
            return taskPriority;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                if (_PriorityID != value)
                {
                    OnPriorityIDChanging(value);
                    ReportPropertyChanging("PriorityID");
                    _PriorityID = StructuralObject.SetValidValue(value, "PriorityID");
                    ReportPropertyChanged("PriorityID");
                    OnPriorityIDChanged();
                }
            }
        }
        private global::System.Int32 _PriorityID;
        partial void OnPriorityIDChanging(global::System.Int32 value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PriorityName
        {
            get
            {
                return _PriorityName;
            }
            set
            {
                OnPriorityNameChanging(value);
                ReportPropertyChanging("PriorityName");
                _PriorityName = StructuralObject.SetValidValue(value, false, "PriorityName");
                ReportPropertyChanged("PriorityName");
                OnPriorityNameChanged();
            }
        }
        private global::System.String _PriorityName;
        partial void OnPriorityNameChanging(global::System.String value);
        partial void OnPriorityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Task_TaskPriority", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("CRMModel.fk_Task_TaskPriority", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("CRMModel.fk_Task_TaskPriority", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="TaskReminderMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskReminderMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskReminderMaster object.
        /// </summary>
        /// <param name="taskReminderID">Initial value of the TaskReminderID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="interval">Initial value of the Interval property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TaskReminderMaster CreateTaskReminderMaster(global::System.Int32 taskReminderID, global::System.String description, global::System.Int32 interval, global::System.Boolean isActive)
        {
            TaskReminderMaster taskReminderMaster = new TaskReminderMaster();
            taskReminderMaster.TaskReminderID = taskReminderID;
            taskReminderMaster.Description = description;
            taskReminderMaster.Interval = interval;
            taskReminderMaster.IsActive = isActive;
            return taskReminderMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskReminderID
        {
            get
            {
                return _TaskReminderID;
            }
            set
            {
                if (_TaskReminderID != value)
                {
                    OnTaskReminderIDChanging(value);
                    ReportPropertyChanging("TaskReminderID");
                    _TaskReminderID = StructuralObject.SetValidValue(value, "TaskReminderID");
                    ReportPropertyChanged("TaskReminderID");
                    OnTaskReminderIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskReminderID;
        partial void OnTaskReminderIDChanging(global::System.Int32 value);
        partial void OnTaskReminderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Interval
        {
            get
            {
                return _Interval;
            }
            set
            {
                OnIntervalChanging(value);
                ReportPropertyChanging("Interval");
                _Interval = StructuralObject.SetValidValue(value, "Interval");
                ReportPropertyChanged("Interval");
                OnIntervalChanged();
            }
        }
        private global::System.Int32 _Interval;
        partial void OnIntervalChanging(global::System.Int32 value);
        partial void OnIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="TaskStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskStatus object.
        /// </summary>
        /// <param name="key">Initial value of the key property.</param>
        public static TaskStatus CreateTaskStatus(global::System.Int32 key)
        {
            TaskStatus taskStatus = new TaskStatus();
            taskStatus.key = key;
            return taskStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 key
        {
            get
            {
                return _key;
            }
            set
            {
                if (_key != value)
                {
                    OnkeyChanging(value);
                    ReportPropertyChanging("key");
                    _key = StructuralObject.SetValidValue(value, "key");
                    ReportPropertyChanged("key");
                    OnkeyChanged();
                }
            }
        }
        private global::System.Int32 _key;
        partial void OnkeyChanging(global::System.Int32 value);
        partial void OnkeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String label
        {
            get
            {
                return _label;
            }
            set
            {
                OnlabelChanging(value);
                ReportPropertyChanging("label");
                _label = StructuralObject.SetValidValue(value, true, "label");
                ReportPropertyChanged("label");
                OnlabelChanged();
            }
        }
        private global::System.String _label;
        partial void OnlabelChanging(global::System.String value);
        partial void OnlabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String color
        {
            get
            {
                return _color;
            }
            set
            {
                OncolorChanging(value);
                ReportPropertyChanging("color");
                _color = StructuralObject.SetValidValue(value, true, "color");
                ReportPropertyChanged("color");
                OncolorChanged();
            }
        }
        private global::System.String _color;
        partial void OncolorChanging(global::System.String value);
        partial void OncolorChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="TypeOfDamageMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeOfDamageMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeOfDamageMaster object.
        /// </summary>
        /// <param name="typeOfDamageId">Initial value of the TypeOfDamageId property.</param>
        public static TypeOfDamageMaster CreateTypeOfDamageMaster(global::System.Int32 typeOfDamageId)
        {
            TypeOfDamageMaster typeOfDamageMaster = new TypeOfDamageMaster();
            typeOfDamageMaster.TypeOfDamageId = typeOfDamageId;
            return typeOfDamageMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeOfDamageId
        {
            get
            {
                return _TypeOfDamageId;
            }
            set
            {
                if (_TypeOfDamageId != value)
                {
                    OnTypeOfDamageIdChanging(value);
                    ReportPropertyChanging("TypeOfDamageId");
                    _TypeOfDamageId = StructuralObject.SetValidValue(value, "TypeOfDamageId");
                    ReportPropertyChanged("TypeOfDamageId");
                    OnTypeOfDamageIdChanged();
                }
            }
        }
        private global::System.Int32 _TypeOfDamageId;
        partial void OnTypeOfDamageIdChanging(global::System.Int32 value);
        partial void OnTypeOfDamageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeOfDamage
        {
            get
            {
                return _TypeOfDamage;
            }
            set
            {
                OnTypeOfDamageChanging(value);
                ReportPropertyChanging("TypeOfDamage");
                _TypeOfDamage = StructuralObject.SetValidValue(value, true, "TypeOfDamage");
                ReportPropertyChanged("TypeOfDamage");
                OnTypeOfDamageChanged();
            }
        }
        private global::System.String _TypeOfDamage;
        partial void OnTypeOfDamageChanging(global::System.String value);
        partial void OnTypeOfDamageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Sort
        {
            get
            {
                return _Sort;
            }
            set
            {
                OnSortChanging(value);
                ReportPropertyChanging("Sort");
                _Sort = StructuralObject.SetValidValue(value, "Sort");
                ReportPropertyChanged("Sort");
                OnSortChanged();
            }
        }
        private Nullable<global::System.Byte> _Sort;
        partial void OnSortChanging(Nullable<global::System.Byte> value);
        partial void OnSortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsHidden
        {
            get
            {
                return _IsHidden;
            }
            set
            {
                OnIsHiddenChanging(value);
                ReportPropertyChanging("IsHidden");
                _IsHidden = StructuralObject.SetValidValue(value, "IsHidden");
                ReportPropertyChanged("IsHidden");
                OnIsHiddenChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsHidden;
        partial void OnIsHiddenChanging(Nullable<global::System.Boolean> value);
        partial void OnIsHiddenChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "FK_LeadPolicyDamageType_TypeOfDamageMaster", "LeadPolicyDamageType")]
        public EntityCollection<LeadPolicyDamageType> LeadPolicyDamageTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicyDamageType>("CRMModel.FK_LeadPolicyDamageType_TypeOfDamageMaster", "LeadPolicyDamageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicyDamageType>("CRMModel.FK_LeadPolicyDamageType_TypeOfDamageMaster", "LeadPolicyDamageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadPolicy_TypeOfDamageMaster", "LeadPolicy")]
        public EntityCollection<LeadPolicy> LeadPolicies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_TypeOfDamageMaster", "LeadPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeadPolicy>("CRMModel.fk_LeadPolicy_TypeOfDamageMaster", "LeadPolicy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="TypeOfPropertyMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeOfPropertyMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeOfPropertyMaster object.
        /// </summary>
        /// <param name="typeOfPropertyId">Initial value of the TypeOfPropertyId property.</param>
        public static TypeOfPropertyMaster CreateTypeOfPropertyMaster(global::System.Int32 typeOfPropertyId)
        {
            TypeOfPropertyMaster typeOfPropertyMaster = new TypeOfPropertyMaster();
            typeOfPropertyMaster.TypeOfPropertyId = typeOfPropertyId;
            return typeOfPropertyMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeOfPropertyId
        {
            get
            {
                return _TypeOfPropertyId;
            }
            set
            {
                if (_TypeOfPropertyId != value)
                {
                    OnTypeOfPropertyIdChanging(value);
                    ReportPropertyChanging("TypeOfPropertyId");
                    _TypeOfPropertyId = StructuralObject.SetValidValue(value, "TypeOfPropertyId");
                    ReportPropertyChanged("TypeOfPropertyId");
                    OnTypeOfPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _TypeOfPropertyId;
        partial void OnTypeOfPropertyIdChanging(global::System.Int32 value);
        partial void OnTypeOfPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeOfProperty
        {
            get
            {
                return _TypeOfProperty;
            }
            set
            {
                OnTypeOfPropertyChanging(value);
                ReportPropertyChanging("TypeOfProperty");
                _TypeOfProperty = StructuralObject.SetValidValue(value, true, "TypeOfProperty");
                ReportPropertyChanged("TypeOfProperty");
                OnTypeOfPropertyChanged();
            }
        }
        private global::System.String _TypeOfProperty;
        partial void OnTypeOfPropertyChanging(global::System.String value);
        partial void OnTypeOfPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsertMachineInfo
        {
            get
            {
                return _InsertMachineInfo;
            }
            set
            {
                OnInsertMachineInfoChanging(value);
                ReportPropertyChanging("InsertMachineInfo");
                _InsertMachineInfo = StructuralObject.SetValidValue(value, true, "InsertMachineInfo");
                ReportPropertyChanged("InsertMachineInfo");
                OnInsertMachineInfoChanged();
            }
        }
        private global::System.String _InsertMachineInfo;
        partial void OnInsertMachineInfoChanging(global::System.String value);
        partial void OnInsertMachineInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UpdateMachineIfo
        {
            get
            {
                return _UpdateMachineIfo;
            }
            set
            {
                OnUpdateMachineIfoChanging(value);
                ReportPropertyChanging("UpdateMachineIfo");
                _UpdateMachineIfo = StructuralObject.SetValidValue(value, true, "UpdateMachineIfo");
                ReportPropertyChanged("UpdateMachineIfo");
                OnUpdateMachineIfoChanged();
            }
        }
        private global::System.String _UpdateMachineIfo;
        partial void OnUpdateMachineIfoChanging(global::System.String value);
        partial void OnUpdateMachineIfoChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_LeadTypeofProperty", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_LeadTypeofProperty", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_LeadTypeofProperty", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="UmpireMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UmpireMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UmpireMaster object.
        /// </summary>
        /// <param name="umpireId">Initial value of the UmpireId property.</param>
        public static UmpireMaster CreateUmpireMaster(global::System.Int32 umpireId)
        {
            UmpireMaster umpireMaster = new UmpireMaster();
            umpireMaster.UmpireId = umpireId;
            return umpireMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UmpireId
        {
            get
            {
                return _UmpireId;
            }
            set
            {
                if (_UmpireId != value)
                {
                    OnUmpireIdChanging(value);
                    ReportPropertyChanging("UmpireId");
                    _UmpireId = StructuralObject.SetValidValue(value, "UmpireId");
                    ReportPropertyChanged("UmpireId");
                    OnUmpireIdChanged();
                }
            }
        }
        private global::System.Int32 _UmpireId;
        partial void OnUmpireIdChanging(global::System.Int32 value);
        partial void OnUmpireIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UmpireName
        {
            get
            {
                return _UmpireName;
            }
            set
            {
                OnUmpireNameChanging(value);
                ReportPropertyChanging("UmpireName");
                _UmpireName = StructuralObject.SetValidValue(value, true, "UmpireName");
                ReportPropertyChanged("UmpireName");
                OnUmpireNameChanged();
            }
        }
        private global::System.String _UmpireName;
        partial void OnUmpireNameChanging(global::System.String value);
        partial void OnUmpireNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InsertBy
        {
            get
            {
                return _InsertBy;
            }
            set
            {
                OnInsertByChanging(value);
                ReportPropertyChanging("InsertBy");
                _InsertBy = StructuralObject.SetValidValue(value, "InsertBy");
                ReportPropertyChanged("InsertBy");
                OnInsertByChanged();
            }
        }
        private Nullable<global::System.Int32> _InsertBy;
        partial void OnInsertByChanging(Nullable<global::System.Int32> value);
        partial void OnInsertByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InsertDate
        {
            get
            {
                return _InsertDate;
            }
            set
            {
                OnInsertDateChanging(value);
                ReportPropertyChanging("InsertDate");
                _InsertDate = StructuralObject.SetValidValue(value, "InsertDate");
                ReportPropertyChanged("InsertDate");
                OnInsertDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InsertDate;
        partial void OnInsertDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInsertDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdateBy
        {
            get
            {
                return _UpdateBy;
            }
            set
            {
                OnUpdateByChanging(value);
                ReportPropertyChanging("UpdateBy");
                _UpdateBy = StructuralObject.SetValidValue(value, "UpdateBy");
                ReportPropertyChanged("UpdateBy");
                OnUpdateByChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdateBy;
        partial void OnUpdateByChanging(Nullable<global::System.Int32> value);
        partial void OnUpdateByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FederalTaxID
        {
            get
            {
                return _FederalTaxID;
            }
            set
            {
                OnFederalTaxIDChanging(value);
                ReportPropertyChanging("FederalTaxID");
                _FederalTaxID = StructuralObject.SetValidValue(value, true, "FederalTaxID");
                ReportPropertyChanged("FederalTaxID");
                OnFederalTaxIDChanged();
            }
        }
        private global::System.String _FederalTaxID;
        partial void OnFederalTaxIDChanging(global::System.String value);
        partial void OnFederalTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true, "Address1");
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, true, "BusinessName");
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Lead_Umpire", "Lead")]
        public EntityCollection<Lead> Leads
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lead>("CRMModel.fk_Lead_Umpire", "Lead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lead>("CRMModel.fk_Lead_Umpire", "Lead", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_Adjuster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Adjuster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Adjuster object.
        /// </summary>
        /// <param name="adjusterId">Initial value of the AdjusterId property.</param>
        public static vw_Adjuster Createvw_Adjuster(global::System.Int32 adjusterId)
        {
            vw_Adjuster vw_Adjuster = new vw_Adjuster();
            vw_Adjuster.AdjusterId = adjusterId;
            return vw_Adjuster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjusterId
        {
            get
            {
                return _AdjusterId;
            }
            set
            {
                if (_AdjusterId != value)
                {
                    OnAdjusterIdChanging(value);
                    ReportPropertyChanging("AdjusterId");
                    _AdjusterId = StructuralObject.SetValidValue(value, "AdjusterId");
                    ReportPropertyChanged("AdjusterId");
                    OnAdjusterIdChanged();
                }
            }
        }
        private global::System.Int32 _AdjusterId;
        partial void OnAdjusterIdChanging(global::System.Int32 value);
        partial void OnAdjusterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterName
        {
            get
            {
                return _AdjusterName;
            }
            set
            {
                OnAdjusterNameChanging(value);
                ReportPropertyChanging("AdjusterName");
                _AdjusterName = StructuralObject.SetValidValue(value, true, "AdjusterName");
                ReportPropertyChanged("AdjusterName");
                OnAdjusterNameChanged();
            }
        }
        private global::System.String _AdjusterName;
        partial void OnAdjusterNameChanging(global::System.String value);
        partial void OnAdjusterNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_AdjusterPayout")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_AdjusterPayout : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_AdjusterPayout object.
        /// </summary>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="adjusterId">Initial value of the AdjusterId property.</param>
        public static vw_AdjusterPayout Createvw_AdjusterPayout(global::System.Int32 claimID, global::System.Int32 adjusterId)
        {
            vw_AdjusterPayout vw_AdjusterPayout = new vw_AdjusterPayout();
            vw_AdjusterPayout.ClaimID = claimID;
            vw_AdjusterPayout.AdjusterId = adjusterId;
            return vw_AdjusterPayout;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterClaimNumber
        {
            get
            {
                return _AdjusterClaimNumber;
            }
            set
            {
                OnAdjusterClaimNumberChanging(value);
                ReportPropertyChanging("AdjusterClaimNumber");
                _AdjusterClaimNumber = StructuralObject.SetValidValue(value, true, "AdjusterClaimNumber");
                ReportPropertyChanged("AdjusterClaimNumber");
                OnAdjusterClaimNumberChanged();
            }
        }
        private global::System.String _AdjusterClaimNumber;
        partial void OnAdjusterClaimNumberChanging(global::System.String value);
        partial void OnAdjusterClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                if (_ClaimID != value)
                {
                    OnClaimIDChanging(value);
                    ReportPropertyChanging("ClaimID");
                    _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                    ReportPropertyChanged("ClaimID");
                    OnClaimIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjusterId
        {
            get
            {
                return _AdjusterId;
            }
            set
            {
                if (_AdjusterId != value)
                {
                    OnAdjusterIdChanging(value);
                    ReportPropertyChanging("AdjusterId");
                    _AdjusterId = StructuralObject.SetValidValue(value, "AdjusterId");
                    ReportPropertyChanged("AdjusterId");
                    OnAdjusterIdChanged();
                }
            }
        }
        private global::System.Int32 _AdjusterId;
        partial void OnAdjusterIdChanging(global::System.Int32 value);
        partial void OnAdjusterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterName
        {
            get
            {
                return _AdjusterName;
            }
            set
            {
                OnAdjusterNameChanging(value);
                ReportPropertyChanging("AdjusterName");
                _AdjusterName = StructuralObject.SetValidValue(value, true, "AdjusterName");
                ReportPropertyChanged("AdjusterName");
                OnAdjusterNameChanged();
            }
        }
        private global::System.String _AdjusterName;
        partial void OnAdjusterNameChanging(global::System.String value);
        partial void OnAdjusterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpenseDate
        {
            get
            {
                return _ExpenseDate;
            }
            set
            {
                OnExpenseDateChanging(value);
                ReportPropertyChanging("ExpenseDate");
                _ExpenseDate = StructuralObject.SetValidValue(value, "ExpenseDate");
                ReportPropertyChanged("ExpenseDate");
                OnExpenseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpenseDate;
        partial void OnExpenseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpenseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExpenseAmount
        {
            get
            {
                return _ExpenseAmount;
            }
            set
            {
                OnExpenseAmountChanging(value);
                ReportPropertyChanging("ExpenseAmount");
                _ExpenseAmount = StructuralObject.SetValidValue(value, "ExpenseAmount");
                ReportPropertyChanged("ExpenseAmount");
                OnExpenseAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExpenseAmount;
        partial void OnExpenseAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnExpenseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, true, "StatusName");
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_AdjusterPayoutSubReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_AdjusterPayoutSubReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_AdjusterPayoutSubReport object.
        /// </summary>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        /// <param name="expenseAmount">Initial value of the ExpenseAmount property.</param>
        public static vw_AdjusterPayoutSubReport Createvw_AdjusterPayoutSubReport(global::System.Int32 claimID, global::System.Int32 policyID, global::System.Decimal expenseAmount)
        {
            vw_AdjusterPayoutSubReport vw_AdjusterPayoutSubReport = new vw_AdjusterPayoutSubReport();
            vw_AdjusterPayoutSubReport.ClaimID = claimID;
            vw_AdjusterPayoutSubReport.PolicyID = policyID;
            vw_AdjusterPayoutSubReport.ExpenseAmount = expenseAmount;
            return vw_AdjusterPayoutSubReport;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterClaimNumber
        {
            get
            {
                return _AdjusterClaimNumber;
            }
            set
            {
                OnAdjusterClaimNumberChanging(value);
                ReportPropertyChanging("AdjusterClaimNumber");
                _AdjusterClaimNumber = StructuralObject.SetValidValue(value, true, "AdjusterClaimNumber");
                ReportPropertyChanged("AdjusterClaimNumber");
                OnAdjusterClaimNumberChanged();
            }
        }
        private global::System.String _AdjusterClaimNumber;
        partial void OnAdjusterClaimNumberChanging(global::System.String value);
        partial void OnAdjusterClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                if (_ClaimID != value)
                {
                    OnClaimIDChanging(value);
                    ReportPropertyChanging("ClaimID");
                    _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                    ReportPropertyChanged("ClaimID");
                    OnClaimIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                if (_PolicyID != value)
                {
                    OnPolicyIDChanging(value);
                    ReportPropertyChanging("PolicyID");
                    _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                    ReportPropertyChanged("PolicyID");
                    OnPolicyIDChanged();
                }
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterName
        {
            get
            {
                return _AdjusterName;
            }
            set
            {
                OnAdjusterNameChanging(value);
                ReportPropertyChanging("AdjusterName");
                _AdjusterName = StructuralObject.SetValidValue(value, true, "AdjusterName");
                ReportPropertyChanged("AdjusterName");
                OnAdjusterNameChanged();
            }
        }
        private global::System.String _AdjusterName;
        partial void OnAdjusterNameChanging(global::System.String value);
        partial void OnAdjusterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExpenseAmount
        {
            get
            {
                return _ExpenseAmount;
            }
            set
            {
                if (_ExpenseAmount != value)
                {
                    OnExpenseAmountChanging(value);
                    ReportPropertyChanging("ExpenseAmount");
                    _ExpenseAmount = StructuralObject.SetValidValue(value, "ExpenseAmount");
                    ReportPropertyChanged("ExpenseAmount");
                    OnExpenseAmountChanged();
                }
            }
        }
        private global::System.Decimal _ExpenseAmount;
        partial void OnExpenseAmountChanging(global::System.Decimal value);
        partial void OnExpenseAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ServiceDate
        {
            get
            {
                return _ServiceDate;
            }
            set
            {
                OnServiceDateChanging(value);
                ReportPropertyChanging("ServiceDate");
                _ServiceDate = StructuralObject.SetValidValue(value, "ServiceDate");
                ReportPropertyChanged("ServiceDate");
                OnServiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ServiceDate;
        partial void OnServiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnServiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServiceDescription
        {
            get
            {
                return _ServiceDescription;
            }
            set
            {
                OnServiceDescriptionChanging(value);
                ReportPropertyChanging("ServiceDescription");
                _ServiceDescription = StructuralObject.SetValidValue(value, true, "ServiceDescription");
                ReportPropertyChanged("ServiceDescription");
                OnServiceDescriptionChanged();
            }
        }
        private global::System.String _ServiceDescription;
        partial void OnServiceDescriptionChanging(global::System.String value);
        partial void OnServiceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_ClaimLimit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_ClaimLimit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_ClaimLimit object.
        /// </summary>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="limitID">Initial value of the LimitID property.</param>
        /// <param name="limitLetter">Initial value of the LimitLetter property.</param>
        /// <param name="limitType">Initial value of the LimitType property.</param>
        /// <param name="limitDescription">Initial value of the LimitDescription property.</param>
        /// <param name="claimLimitID">Initial value of the ClaimLimitID property.</param>
        public static vw_ClaimLimit Createvw_ClaimLimit(global::System.Int32 claimID, global::System.Int32 limitID, global::System.String limitLetter, global::System.Int32 limitType, global::System.String limitDescription, global::System.Int32 claimLimitID)
        {
            vw_ClaimLimit vw_ClaimLimit = new vw_ClaimLimit();
            vw_ClaimLimit.ClaimID = claimID;
            vw_ClaimLimit.LimitID = limitID;
            vw_ClaimLimit.LimitLetter = limitLetter;
            vw_ClaimLimit.LimitType = limitType;
            vw_ClaimLimit.LimitDescription = limitDescription;
            vw_ClaimLimit.ClaimLimitID = claimLimitID;
            return vw_ClaimLimit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                OnClaimIDChanging(value);
                ReportPropertyChanging("ClaimID");
                _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                ReportPropertyChanged("ClaimID");
                OnClaimIDChanged();
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitID
        {
            get
            {
                return _LimitID;
            }
            set
            {
                if (_LimitID != value)
                {
                    OnLimitIDChanging(value);
                    ReportPropertyChanging("LimitID");
                    _LimitID = StructuralObject.SetValidValue(value, "LimitID");
                    ReportPropertyChanged("LimitID");
                    OnLimitIDChanged();
                }
            }
        }
        private global::System.Int32 _LimitID;
        partial void OnLimitIDChanging(global::System.Int32 value);
        partial void OnLimitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LimitLetter
        {
            get
            {
                return _LimitLetter;
            }
            set
            {
                if (_LimitLetter != value)
                {
                    OnLimitLetterChanging(value);
                    ReportPropertyChanging("LimitLetter");
                    _LimitLetter = StructuralObject.SetValidValue(value, false, "LimitLetter");
                    ReportPropertyChanged("LimitLetter");
                    OnLimitLetterChanged();
                }
            }
        }
        private global::System.String _LimitLetter;
        partial void OnLimitLetterChanging(global::System.String value);
        partial void OnLimitLetterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LimitType
        {
            get
            {
                return _LimitType;
            }
            set
            {
                if (_LimitType != value)
                {
                    OnLimitTypeChanging(value);
                    ReportPropertyChanging("LimitType");
                    _LimitType = StructuralObject.SetValidValue(value, "LimitType");
                    ReportPropertyChanged("LimitType");
                    OnLimitTypeChanged();
                }
            }
        }
        private global::System.Int32 _LimitType;
        partial void OnLimitTypeChanging(global::System.Int32 value);
        partial void OnLimitTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LimitDescription
        {
            get
            {
                return _LimitDescription;
            }
            set
            {
                if (_LimitDescription != value)
                {
                    OnLimitDescriptionChanging(value);
                    ReportPropertyChanging("LimitDescription");
                    _LimitDescription = StructuralObject.SetValidValue(value, false, "LimitDescription");
                    ReportPropertyChanged("LimitDescription");
                    OnLimitDescriptionChanged();
                }
            }
        }
        private global::System.String _LimitDescription;
        partial void OnLimitDescriptionChanging(global::System.String value);
        partial void OnLimitDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LimitAmount
        {
            get
            {
                return _LimitAmount;
            }
            set
            {
                OnLimitAmountChanging(value);
                ReportPropertyChanging("LimitAmount");
                _LimitAmount = StructuralObject.SetValidValue(value, "LimitAmount");
                ReportPropertyChanged("LimitAmount");
                OnLimitAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _LimitAmount;
        partial void OnLimitAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnLimitAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LimitDeductible
        {
            get
            {
                return _LimitDeductible;
            }
            set
            {
                OnLimitDeductibleChanging(value);
                ReportPropertyChanging("LimitDeductible");
                _LimitDeductible = StructuralObject.SetValidValue(value, "LimitDeductible");
                ReportPropertyChanged("LimitDeductible");
                OnLimitDeductibleChanged();
            }
        }
        private Nullable<global::System.Decimal> _LimitDeductible;
        partial void OnLimitDeductibleChanging(Nullable<global::System.Decimal> value);
        partial void OnLimitDeductibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATDeductible
        {
            get
            {
                return _CATDeductible;
            }
            set
            {
                OnCATDeductibleChanging(value);
                ReportPropertyChanging("CATDeductible");
                _CATDeductible = StructuralObject.SetValidValue(value, true, "CATDeductible");
                ReportPropertyChanged("CATDeductible");
                OnCATDeductibleChanged();
            }
        }
        private global::System.String _CATDeductible;
        partial void OnCATDeductibleChanging(global::System.String value);
        partial void OnCATDeductibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettlementType
        {
            get
            {
                return _SettlementType;
            }
            set
            {
                OnSettlementTypeChanging(value);
                ReportPropertyChanging("SettlementType");
                _SettlementType = StructuralObject.SetValidValue(value, true, "SettlementType");
                ReportPropertyChanged("SettlementType");
                OnSettlementTypeChanged();
            }
        }
        private global::System.String _SettlementType;
        partial void OnSettlementTypeChanging(global::System.String value);
        partial void OnSettlementTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ConInsuranceLimit
        {
            get
            {
                return _ConInsuranceLimit;
            }
            set
            {
                OnConInsuranceLimitChanging(value);
                ReportPropertyChanging("ConInsuranceLimit");
                _ConInsuranceLimit = StructuralObject.SetValidValue(value, "ConInsuranceLimit");
                ReportPropertyChanged("ConInsuranceLimit");
                OnConInsuranceLimitChanged();
            }
        }
        private Nullable<global::System.Decimal> _ConInsuranceLimit;
        partial void OnConInsuranceLimitChanging(Nullable<global::System.Decimal> value);
        partial void OnConInsuranceLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LossAmountACV
        {
            get
            {
                return _LossAmountACV;
            }
            set
            {
                OnLossAmountACVChanging(value);
                ReportPropertyChanging("LossAmountACV");
                _LossAmountACV = StructuralObject.SetValidValue(value, "LossAmountACV");
                ReportPropertyChanged("LossAmountACV");
                OnLossAmountACVChanged();
            }
        }
        private Nullable<global::System.Decimal> _LossAmountACV;
        partial void OnLossAmountACVChanging(Nullable<global::System.Decimal> value);
        partial void OnLossAmountACVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LossAmountRCV
        {
            get
            {
                return _LossAmountRCV;
            }
            set
            {
                OnLossAmountRCVChanging(value);
                ReportPropertyChanging("LossAmountRCV");
                _LossAmountRCV = StructuralObject.SetValidValue(value, "LossAmountRCV");
                ReportPropertyChanged("LossAmountRCV");
                OnLossAmountRCVChanged();
            }
        }
        private Nullable<global::System.Decimal> _LossAmountRCV;
        partial void OnLossAmountRCVChanging(Nullable<global::System.Decimal> value);
        partial void OnLossAmountRCVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Depreciation
        {
            get
            {
                return _Depreciation;
            }
            set
            {
                OnDepreciationChanging(value);
                ReportPropertyChanging("Depreciation");
                _Depreciation = StructuralObject.SetValidValue(value, "Depreciation");
                ReportPropertyChanged("Depreciation");
                OnDepreciationChanged();
            }
        }
        private Nullable<global::System.Decimal> _Depreciation;
        partial void OnDepreciationChanging(Nullable<global::System.Decimal> value);
        partial void OnDepreciationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OverageAmount
        {
            get
            {
                return _OverageAmount;
            }
            set
            {
                OnOverageAmountChanging(value);
                ReportPropertyChanging("OverageAmount");
                _OverageAmount = StructuralObject.SetValidValue(value, "OverageAmount");
                ReportPropertyChanged("OverageAmount");
                OnOverageAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _OverageAmount;
        partial void OnOverageAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnOverageAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimLimitID
        {
            get
            {
                return _ClaimLimitID;
            }
            set
            {
                if (_ClaimLimitID != value)
                {
                    OnClaimLimitIDChanging(value);
                    ReportPropertyChanging("ClaimLimitID");
                    _ClaimLimitID = StructuralObject.SetValidValue(value, "ClaimLimitID");
                    ReportPropertyChanged("ClaimLimitID");
                    OnClaimLimitIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimLimitID;
        partial void OnClaimLimitIDChanging(global::System.Int32 value);
        partial void OnClaimLimitIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_ClaimsClosedListing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_ClaimsClosedListing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_ClaimsClosedListing object.
        /// </summary>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="policyID">Initial value of the PolicyID property.</param>
        /// <param name="claim_num">Initial value of the Claim_num property.</param>
        /// <param name="clientClaimNumber">Initial value of the ClientClaimNumber property.</param>
        /// <param name="insured">Initial value of the Insured property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="statusName">Initial value of the StatusName property.</param>
        /// <param name="age">Initial value of the Age property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="adjusterID">Initial value of the AdjusterID property.</param>
        /// <param name="carrierID">Initial value of the CarrierID property.</param>
        public static vw_ClaimsClosedListing Createvw_ClaimsClosedListing(global::System.Int32 claimID, global::System.Int32 policyID, global::System.String claim_num, global::System.String clientClaimNumber, global::System.String insured, global::System.Boolean isActive, global::System.String statusName, global::System.Int32 age, global::System.Int32 userID, global::System.Int32 adjusterID, global::System.Int32 carrierID)
        {
            vw_ClaimsClosedListing vw_ClaimsClosedListing = new vw_ClaimsClosedListing();
            vw_ClaimsClosedListing.ClaimID = claimID;
            vw_ClaimsClosedListing.PolicyID = policyID;
            vw_ClaimsClosedListing.Claim_num = claim_num;
            vw_ClaimsClosedListing.ClientClaimNumber = clientClaimNumber;
            vw_ClaimsClosedListing.Insured = insured;
            vw_ClaimsClosedListing.IsActive = isActive;
            vw_ClaimsClosedListing.StatusName = statusName;
            vw_ClaimsClosedListing.Age = age;
            vw_ClaimsClosedListing.UserID = userID;
            vw_ClaimsClosedListing.AdjusterID = adjusterID;
            vw_ClaimsClosedListing.CarrierID = carrierID;
            return vw_ClaimsClosedListing;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                if (_ClaimID != value)
                {
                    OnClaimIDChanging(value);
                    ReportPropertyChanging("ClaimID");
                    _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                    ReportPropertyChanged("ClaimID");
                    OnClaimIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                if (_PolicyID != value)
                {
                    OnPolicyIDChanging(value);
                    ReportPropertyChanging("PolicyID");
                    _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                    ReportPropertyChanged("PolicyID");
                    OnPolicyIDChanged();
                }
            }
        }
        private global::System.Int32 _PolicyID;
        partial void OnPolicyIDChanging(global::System.Int32 value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Claim_num
        {
            get
            {
                return _Claim_num;
            }
            set
            {
                if (_Claim_num != value)
                {
                    OnClaim_numChanging(value);
                    ReportPropertyChanging("Claim_num");
                    _Claim_num = StructuralObject.SetValidValue(value, false, "Claim_num");
                    ReportPropertyChanged("Claim_num");
                    OnClaim_numChanged();
                }
            }
        }
        private global::System.String _Claim_num;
        partial void OnClaim_numChanging(global::System.String value);
        partial void OnClaim_numChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientClaimNumber
        {
            get
            {
                return _ClientClaimNumber;
            }
            set
            {
                if (_ClientClaimNumber != value)
                {
                    OnClientClaimNumberChanging(value);
                    ReportPropertyChanging("ClientClaimNumber");
                    _ClientClaimNumber = StructuralObject.SetValidValue(value, false, "ClientClaimNumber");
                    ReportPropertyChanged("ClientClaimNumber");
                    OnClientClaimNumberChanged();
                }
            }
        }
        private global::System.String _ClientClaimNumber;
        partial void OnClientClaimNumberChanging(global::System.String value);
        partial void OnClientClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                if (_Insured != value)
                {
                    OnInsuredChanging(value);
                    ReportPropertyChanging("Insured");
                    _Insured = StructuralObject.SetValidValue(value, false, "Insured");
                    ReportPropertyChanged("Insured");
                    OnInsuredChanged();
                }
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                if (_IsActive != value)
                {
                    OnIsActiveChanging(value);
                    ReportPropertyChanging("IsActive");
                    _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                    ReportPropertyChanged("IsActive");
                    OnIsActiveChanged();
                }
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                if (_StatusName != value)
                {
                    OnStatusNameChanging(value);
                    ReportPropertyChanging("StatusName");
                    _StatusName = StructuralObject.SetValidValue(value, false, "StatusName");
                    ReportPropertyChanged("StatusName");
                    OnStatusNameChanged();
                }
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClosed
        {
            get
            {
                return _DateClosed;
            }
            set
            {
                OnDateClosedChanging(value);
                ReportPropertyChanging("DateClosed");
                _DateClosed = StructuralObject.SetValidValue(value, "DateClosed");
                ReportPropertyChanged("DateClosed");
                OnDateClosedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClosed;
        partial void OnDateClosedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateClosedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOpenedReported
        {
            get
            {
                return _DateOpenedReported;
            }
            set
            {
                OnDateOpenedReportedChanging(value);
                ReportPropertyChanging("DateOpenedReported");
                _DateOpenedReported = StructuralObject.SetValidValue(value, "DateOpenedReported");
                ReportPropertyChanged("DateOpenedReported");
                OnDateOpenedReportedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOpenedReported;
        partial void OnDateOpenedReportedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOpenedReportedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Age
        {
            get
            {
                return _Age;
            }
            set
            {
                if (_Age != value)
                {
                    OnAgeChanging(value);
                    ReportPropertyChanging("Age");
                    _Age = StructuralObject.SetValidValue(value, "Age");
                    ReportPropertyChanged("Age");
                    OnAgeChanged();
                }
            }
        }
        private global::System.Int32 _Age;
        partial void OnAgeChanging(global::System.Int32 value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                if (_AdjusterID != value)
                {
                    OnAdjusterIDChanging(value);
                    ReportPropertyChanging("AdjusterID");
                    _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                    ReportPropertyChanged("AdjusterID");
                    OnAdjusterIDChanged();
                }
            }
        }
        private global::System.Int32 _AdjusterID;
        partial void OnAdjusterIDChanging(global::System.Int32 value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                if (_CarrierID != value)
                {
                    OnCarrierIDChanging(value);
                    ReportPropertyChanging("CarrierID");
                    _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                    ReportPropertyChanged("CarrierID");
                    OnCarrierIDChanged();
                }
            }
        }
        private global::System.Int32 _CarrierID;
        partial void OnCarrierIDChanging(global::System.Int32 value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_closeLeadClaim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_closeLeadClaim : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_closeLeadClaim object.
        /// </summary>
        /// <param name="clientid">Initial value of the clientid property.</param>
        /// <param name="itemcount">Initial value of the itemcount property.</param>
        public static vw_closeLeadClaim Createvw_closeLeadClaim(global::System.Int32 clientid, global::System.Int32 itemcount)
        {
            vw_closeLeadClaim vw_closeLeadClaim = new vw_closeLeadClaim();
            vw_closeLeadClaim.clientid = clientid;
            vw_closeLeadClaim.itemcount = itemcount;
            return vw_closeLeadClaim;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 clientid
        {
            get
            {
                return _clientid;
            }
            set
            {
                if (_clientid != value)
                {
                    OnclientidChanging(value);
                    ReportPropertyChanging("clientid");
                    _clientid = StructuralObject.SetValidValue(value, "clientid");
                    ReportPropertyChanged("clientid");
                    OnclientidChanged();
                }
            }
        }
        private global::System.Int32 _clientid;
        partial void OnclientidChanging(global::System.Int32 value);
        partial void OnclientidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String statusname
        {
            get
            {
                return _statusname;
            }
            set
            {
                OnstatusnameChanging(value);
                ReportPropertyChanging("statusname");
                _statusname = StructuralObject.SetValidValue(value, true, "statusname");
                ReportPropertyChanged("statusname");
                OnstatusnameChanged();
            }
        }
        private global::System.String _statusname;
        partial void OnstatusnameChanging(global::System.String value);
        partial void OnstatusnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itemcount
        {
            get
            {
                return _itemcount;
            }
            set
            {
                OnitemcountChanging(value);
                ReportPropertyChanging("itemcount");
                _itemcount = StructuralObject.SetValidValue(value, "itemcount");
                ReportPropertyChanged("itemcount");
                OnitemcountChanged();
            }
        }
        private global::System.Int32 _itemcount;
        partial void OnitemcountChanging(global::System.Int32 value);
        partial void OnitemcountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Contact object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static vw_Contact Createvw_Contact(global::System.Int32 contactID)
        {
            vw_Contact vw_Contact = new vw_Contact();
            vw_Contact.ContactID = contactID;
            return vw_Contact;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value, "ContactID");
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true, "CompanyName");
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactType
        {
            get
            {
                return _ContactType;
            }
            set
            {
                OnContactTypeChanging(value);
                ReportPropertyChanging("ContactType");
                _ContactType = StructuralObject.SetValidValue(value, true, "ContactType");
                ReportPropertyChanged("ContactType");
                OnContactTypeChanged();
            }
        }
        private global::System.String _ContactType;
        partial void OnContactTypeChanging(global::System.String value);
        partial void OnContactTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true, "ContactName");
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_FieldColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_FieldColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_FieldColumn object.
        /// </summary>
        /// <param name="columnID">Initial value of the ColumnID property.</param>
        /// <param name="isVisible">Initial value of the isVisible property.</param>
        public static vw_FieldColumn Createvw_FieldColumn(global::System.Int32 columnID, global::System.Boolean isVisible)
        {
            vw_FieldColumn vw_FieldColumn = new vw_FieldColumn();
            vw_FieldColumn.ColumnID = columnID;
            vw_FieldColumn.isVisible = isVisible;
            return vw_FieldColumn;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColumnID
        {
            get
            {
                return _ColumnID;
            }
            set
            {
                if (_ColumnID != value)
                {
                    OnColumnIDChanging(value);
                    ReportPropertyChanging("ColumnID");
                    _ColumnID = StructuralObject.SetValidValue(value, "ColumnID");
                    ReportPropertyChanged("ColumnID");
                    OnColumnIDChanged();
                }
            }
        }
        private global::System.Int32 _ColumnID;
        partial void OnColumnIDChanging(global::System.Int32 value);
        partial void OnColumnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, true, "ColumnName");
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isVisible
        {
            get
            {
                return _isVisible;
            }
            set
            {
                if (_isVisible != value)
                {
                    OnisVisibleChanging(value);
                    ReportPropertyChanging("isVisible");
                    _isVisible = StructuralObject.SetValidValue(value, "isVisible");
                    ReportPropertyChanged("isVisible");
                    OnisVisibleChanged();
                }
            }
        }
        private global::System.Boolean _isVisible;
        partial void OnisVisibleChanging(global::System.Boolean value);
        partial void OnisVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> clientid
        {
            get
            {
                return _clientid;
            }
            set
            {
                OnclientidChanging(value);
                ReportPropertyChanging("clientid");
                _clientid = StructuralObject.SetValidValue(value, "clientid");
                ReportPropertyChanged("clientid");
                OnclientidChanged();
            }
        }
        private Nullable<global::System.Int32> _clientid;
        partial void OnclientidChanging(Nullable<global::System.Int32> value);
        partial void OnclientidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_FormField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_FormField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_FormField object.
        /// </summary>
        /// <param name="fieldID">Initial value of the FieldID property.</param>
        /// <param name="templateID">Initial value of the TemplateID property.</param>
        /// <param name="isSelected">Initial value of the IsSelected property.</param>
        public static vw_FormField Createvw_FormField(global::System.Int32 fieldID, global::System.Int32 templateID, global::System.Boolean isSelected)
        {
            vw_FormField vw_FormField = new vw_FormField();
            vw_FormField.FieldID = fieldID;
            vw_FormField.TemplateID = templateID;
            vw_FormField.IsSelected = isSelected;
            return vw_FormField;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormID
        {
            get
            {
                return _FormID;
            }
            set
            {
                OnFormIDChanging(value);
                ReportPropertyChanging("FormID");
                _FormID = StructuralObject.SetValidValue(value, "FormID");
                ReportPropertyChanged("FormID");
                OnFormIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FormID;
        partial void OnFormIDChanging(Nullable<global::System.Int32> value);
        partial void OnFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormName
        {
            get
            {
                return _FormName;
            }
            set
            {
                OnFormNameChanging(value);
                ReportPropertyChanging("FormName");
                _FormName = StructuralObject.SetValidValue(value, true, "FormName");
                ReportPropertyChanged("FormName");
                OnFormNameChanged();
            }
        }
        private global::System.String _FormName;
        partial void OnFormNameChanging(global::System.String value);
        partial void OnFormNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldID
        {
            get
            {
                return _FieldID;
            }
            set
            {
                if (_FieldID != value)
                {
                    OnFieldIDChanging(value);
                    ReportPropertyChanging("FieldID");
                    _FieldID = StructuralObject.SetValidValue(value, "FieldID");
                    ReportPropertyChanged("FieldID");
                    OnFieldIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldID;
        partial void OnFieldIDChanging(global::System.Int32 value);
        partial void OnFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldPrompt
        {
            get
            {
                return _FieldPrompt;
            }
            set
            {
                OnFieldPromptChanging(value);
                ReportPropertyChanging("FieldPrompt");
                _FieldPrompt = StructuralObject.SetValidValue(value, true, "FieldPrompt");
                ReportPropertyChanged("FieldPrompt");
                OnFieldPromptChanged();
            }
        }
        private global::System.String _FieldPrompt;
        partial void OnFieldPromptChanging(global::System.String value);
        partial void OnFieldPromptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemplateID
        {
            get
            {
                return _TemplateID;
            }
            set
            {
                if (_TemplateID != value)
                {
                    OnTemplateIDChanging(value);
                    ReportPropertyChanging("TemplateID");
                    _TemplateID = StructuralObject.SetValidValue(value, "TemplateID");
                    ReportPropertyChanged("TemplateID");
                    OnTemplateIDChanged();
                }
            }
        }
        private global::System.Int32 _TemplateID;
        partial void OnTemplateIDChanging(global::System.Int32 value);
        partial void OnTemplateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                if (_IsSelected != value)
                {
                    OnIsSelectedChanging(value);
                    ReportPropertyChanging("IsSelected");
                    _IsSelected = StructuralObject.SetValidValue(value, "IsSelected");
                    ReportPropertyChanged("IsSelected");
                    OnIsSelectedChanged();
                }
            }
        }
        private global::System.Boolean _IsSelected;
        partial void OnIsSelectedChanging(global::System.Boolean value);
        partial void OnIsSelectedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_InvoiceApprovalQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_InvoiceApprovalQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_InvoiceApprovalQueue object.
        /// </summary>
        /// <param name="invoiceID">Initial value of the InvoiceID property.</param>
        /// <param name="claimID">Initial value of the ClaimID property.</param>
        /// <param name="isVoid">Initial value of the IsVoid property.</param>
        /// <param name="taxRate">Initial value of the TaxRate property.</param>
        public static vw_InvoiceApprovalQueue Createvw_InvoiceApprovalQueue(global::System.Int32 invoiceID, global::System.Int32 claimID, global::System.Boolean isVoid, global::System.Decimal taxRate)
        {
            vw_InvoiceApprovalQueue vw_InvoiceApprovalQueue = new vw_InvoiceApprovalQueue();
            vw_InvoiceApprovalQueue.InvoiceID = invoiceID;
            vw_InvoiceApprovalQueue.ClaimID = claimID;
            vw_InvoiceApprovalQueue.IsVoid = isVoid;
            vw_InvoiceApprovalQueue.TaxRate = taxRate;
            return vw_InvoiceApprovalQueue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                if (_InvoiceID != value)
                {
                    OnInvoiceIDChanging(value);
                    ReportPropertyChanging("InvoiceID");
                    _InvoiceID = StructuralObject.SetValidValue(value, "InvoiceID");
                    ReportPropertyChanged("InvoiceID");
                    OnInvoiceIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceID;
        partial void OnInvoiceIDChanging(global::System.Int32 value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimID
        {
            get
            {
                return _ClaimID;
            }
            set
            {
                if (_ClaimID != value)
                {
                    OnClaimIDChanging(value);
                    ReportPropertyChanging("ClaimID");
                    _ClaimID = StructuralObject.SetValidValue(value, "ClaimID");
                    ReportPropertyChanged("ClaimID");
                    OnClaimIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimID;
        partial void OnClaimIDChanging(global::System.Int32 value);
        partial void OnClaimIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoiceDate;
        partial void OnInvoiceDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TotalAmount
        {
            get
            {
                return _TotalAmount;
            }
            set
            {
                OnTotalAmountChanging(value);
                ReportPropertyChanging("TotalAmount");
                _TotalAmount = StructuralObject.SetValidValue(value, "TotalAmount");
                ReportPropertyChanged("TotalAmount");
                OnTotalAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _TotalAmount;
        partial void OnTotalAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnTotalAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToName
        {
            get
            {
                return _BillToName;
            }
            set
            {
                OnBillToNameChanging(value);
                ReportPropertyChanging("BillToName");
                _BillToName = StructuralObject.SetValidValue(value, true, "BillToName");
                ReportPropertyChanged("BillToName");
                OnBillToNameChanged();
            }
        }
        private global::System.String _BillToName;
        partial void OnBillToNameChanging(global::System.String value);
        partial void OnBillToNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress1
        {
            get
            {
                return _BillToAddress1;
            }
            set
            {
                OnBillToAddress1Changing(value);
                ReportPropertyChanging("BillToAddress1");
                _BillToAddress1 = StructuralObject.SetValidValue(value, true, "BillToAddress1");
                ReportPropertyChanged("BillToAddress1");
                OnBillToAddress1Changed();
            }
        }
        private global::System.String _BillToAddress1;
        partial void OnBillToAddress1Changing(global::System.String value);
        partial void OnBillToAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress2
        {
            get
            {
                return _BillToAddress2;
            }
            set
            {
                OnBillToAddress2Changing(value);
                ReportPropertyChanging("BillToAddress2");
                _BillToAddress2 = StructuralObject.SetValidValue(value, true, "BillToAddress2");
                ReportPropertyChanged("BillToAddress2");
                OnBillToAddress2Changed();
            }
        }
        private global::System.String _BillToAddress2;
        partial void OnBillToAddress2Changing(global::System.String value);
        partial void OnBillToAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BillToAddress3
        {
            get
            {
                return _BillToAddress3;
            }
            set
            {
                OnBillToAddress3Changing(value);
                ReportPropertyChanging("BillToAddress3");
                _BillToAddress3 = StructuralObject.SetValidValue(value, true, "BillToAddress3");
                ReportPropertyChanged("BillToAddress3");
                OnBillToAddress3Changed();
            }
        }
        private global::System.String _BillToAddress3;
        partial void OnBillToAddress3Changing(global::System.String value);
        partial void OnBillToAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value, "InvoiceNumber");
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceNumber;
        partial void OnInvoiceNumberChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, "DueDate");
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DueDate;
        partial void OnDueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvoiceTypeID
        {
            get
            {
                return _InvoiceTypeID;
            }
            set
            {
                OnInvoiceTypeIDChanging(value);
                ReportPropertyChanging("InvoiceTypeID");
                _InvoiceTypeID = StructuralObject.SetValidValue(value, "InvoiceTypeID");
                ReportPropertyChanged("InvoiceTypeID");
                OnInvoiceTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvoiceTypeID;
        partial void OnInvoiceTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvoiceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierInvoiceProfileID
        {
            get
            {
                return _CarrierInvoiceProfileID;
            }
            set
            {
                OnCarrierInvoiceProfileIDChanging(value);
                ReportPropertyChanging("CarrierInvoiceProfileID");
                _CarrierInvoiceProfileID = StructuralObject.SetValidValue(value, "CarrierInvoiceProfileID");
                ReportPropertyChanged("CarrierInvoiceProfileID");
                OnCarrierInvoiceProfileIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierInvoiceProfileID;
        partial void OnCarrierInvoiceProfileIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierInvoiceProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVoid
        {
            get
            {
                return _IsVoid;
            }
            set
            {
                if (_IsVoid != value)
                {
                    OnIsVoidChanging(value);
                    ReportPropertyChanging("IsVoid");
                    _IsVoid = StructuralObject.SetValidValue(value, "IsVoid");
                    ReportPropertyChanged("IsVoid");
                    OnIsVoidChanged();
                }
            }
        }
        private global::System.Boolean _IsVoid;
        partial void OnIsVoidChanging(global::System.Boolean value);
        partial void OnIsVoidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                if (_TaxRate != value)
                {
                    OnTaxRateChanging(value);
                    ReportPropertyChanging("TaxRate");
                    _TaxRate = StructuralObject.SetValidValue(value, "TaxRate");
                    ReportPropertyChanged("TaxRate");
                    OnTaxRateChanged();
                }
            }
        }
        private global::System.Decimal _TaxRate;
        partial void OnTaxRateChanging(global::System.Decimal value);
        partial void OnTaxRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsApprove
        {
            get
            {
                return _IsApprove;
            }
            set
            {
                OnIsApproveChanging(value);
                ReportPropertyChanging("IsApprove");
                _IsApprove = StructuralObject.SetValidValue(value, "IsApprove");
                ReportPropertyChanged("IsApprove");
                OnIsApproveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsApprove;
        partial void OnIsApproveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsApproveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true, "PolicyNumber");
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_Lead_Search")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Lead_Search : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Lead_Search object.
        /// </summary>
        /// <param name="leadId">Initial value of the LeadId property.</param>
        /// <param name="claimStatusID">Initial value of the ClaimStatusID property.</param>
        /// <param name="claimSubStatusID">Initial value of the ClaimSubStatusID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static vw_Lead_Search Createvw_Lead_Search(global::System.Int32 leadId, global::System.Int32 claimStatusID, global::System.Int32 claimSubStatusID, global::System.String userName, global::System.Int32 userID)
        {
            vw_Lead_Search vw_Lead_Search = new vw_Lead_Search();
            vw_Lead_Search.LeadId = leadId;
            vw_Lead_Search.ClaimStatusID = claimStatusID;
            vw_Lead_Search.ClaimSubStatusID = claimSubStatusID;
            vw_Lead_Search.UserName = userName;
            vw_Lead_Search.UserID = userID;
            return vw_Lead_Search;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value, "ClientId");
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Int32> value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeadId
        {
            get
            {
                return _LeadId;
            }
            set
            {
                if (_LeadId != value)
                {
                    OnLeadIdChanging(value);
                    ReportPropertyChanging("LeadId");
                    _LeadId = StructuralObject.SetValidValue(value, "LeadId");
                    ReportPropertyChanged("LeadId");
                    OnLeadIdChanged();
                }
            }
        }
        private global::System.Int32 _LeadId;
        partial void OnLeadIdChanging(global::System.Int32 value);
        partial void OnLeadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalLeadDate
        {
            get
            {
                return _OriginalLeadDate;
            }
            set
            {
                OnOriginalLeadDateChanging(value);
                ReportPropertyChanging("OriginalLeadDate");
                _OriginalLeadDate = StructuralObject.SetValidValue(value, "OriginalLeadDate");
                ReportPropertyChanged("OriginalLeadDate");
                OnOriginalLeadDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalLeadDate;
        partial void OnOriginalLeadDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalLeadDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuredName
        {
            get
            {
                return _InsuredName;
            }
            set
            {
                OnInsuredNameChanging(value);
                ReportPropertyChanging("InsuredName");
                _InsuredName = StructuralObject.SetValidValue(value, true, "InsuredName");
                ReportPropertyChanged("InsuredName");
                OnInsuredNameChanged();
            }
        }
        private global::System.String _InsuredName;
        partial void OnInsuredNameChanging(global::System.String value);
        partial void OnInsuredNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimantFirstName
        {
            get
            {
                return _ClaimantFirstName;
            }
            set
            {
                OnClaimantFirstNameChanging(value);
                ReportPropertyChanging("ClaimantFirstName");
                _ClaimantFirstName = StructuralObject.SetValidValue(value, true, "ClaimantFirstName");
                ReportPropertyChanged("ClaimantFirstName");
                OnClaimantFirstNameChanged();
            }
        }
        private global::System.String _ClaimantFirstName;
        partial void OnClaimantFirstNameChanging(global::System.String value);
        partial void OnClaimantFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimantLastName
        {
            get
            {
                return _ClaimantLastName;
            }
            set
            {
                OnClaimantLastNameChanging(value);
                ReportPropertyChanging("ClaimantLastName");
                _ClaimantLastName = StructuralObject.SetValidValue(value, true, "ClaimantLastName");
                ReportPropertyChanged("ClaimantLastName");
                OnClaimantLastNameChanged();
            }
        }
        private global::System.String _ClaimantLastName;
        partial void OnClaimantLastNameChanging(global::System.String value);
        partial void OnClaimantLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, true, "BusinessName");
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingAddress
        {
            get
            {
                return _MailingAddress;
            }
            set
            {
                OnMailingAddressChanging(value);
                ReportPropertyChanging("MailingAddress");
                _MailingAddress = StructuralObject.SetValidValue(value, true, "MailingAddress");
                ReportPropertyChanged("MailingAddress");
                OnMailingAddressChanged();
            }
        }
        private global::System.String _MailingAddress;
        partial void OnMailingAddressChanging(global::System.String value);
        partial void OnMailingAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _Status;
        partial void OnStatusChanging(Nullable<global::System.Int32> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, true, "StateName");
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true, "Zip");
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossAddress
        {
            get
            {
                return _LossAddress;
            }
            set
            {
                OnLossAddressChanging(value);
                ReportPropertyChanging("LossAddress");
                _LossAddress = StructuralObject.SetValidValue(value, true, "LossAddress");
                ReportPropertyChanged("LossAddress");
                OnLossAddressChanged();
            }
        }
        private global::System.String _LossAddress;
        partial void OnLossAddressChanging(global::System.String value);
        partial void OnLossAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LossAddress2
        {
            get
            {
                return _LossAddress2;
            }
            set
            {
                OnLossAddress2Changing(value);
                ReportPropertyChanging("LossAddress2");
                _LossAddress2 = StructuralObject.SetValidValue(value, true, "LossAddress2");
                ReportPropertyChanged("LossAddress2");
                OnLossAddress2Changed();
            }
        }
        private global::System.String _LossAddress2;
        partial void OnLossAddress2Changing(global::System.String value);
        partial void OnLossAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SiteSurveyDate
        {
            get
            {
                return _SiteSurveyDate;
            }
            set
            {
                OnSiteSurveyDateChanging(value);
                ReportPropertyChanging("SiteSurveyDate");
                _SiteSurveyDate = StructuralObject.SetValidValue(value, "SiteSurveyDate");
                ReportPropertyChanged("SiteSurveyDate");
                OnSiteSurveyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SiteSurveyDate;
        partial void OnSiteSurveyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSiteSurveyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value, "LastActivityDate");
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingCity
        {
            get
            {
                return _MailingCity;
            }
            set
            {
                OnMailingCityChanging(value);
                ReportPropertyChanging("MailingCity");
                _MailingCity = StructuralObject.SetValidValue(value, true, "MailingCity");
                ReportPropertyChanged("MailingCity");
                OnMailingCityChanged();
            }
        }
        private global::System.String _MailingCity;
        partial void OnMailingCityChanging(global::System.String value);
        partial void OnMailingCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingState
        {
            get
            {
                return _MailingState;
            }
            set
            {
                OnMailingStateChanging(value);
                ReportPropertyChanging("MailingState");
                _MailingState = StructuralObject.SetValidValue(value, true, "MailingState");
                ReportPropertyChanged("MailingState");
                OnMailingStateChanged();
            }
        }
        private global::System.String _MailingState;
        partial void OnMailingStateChanging(global::System.String value);
        partial void OnMailingStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailingZip
        {
            get
            {
                return _MailingZip;
            }
            set
            {
                OnMailingZipChanging(value);
                ReportPropertyChanging("MailingZip");
                _MailingZip = StructuralObject.SetValidValue(value, true, "MailingZip");
                ReportPropertyChanged("MailingZip");
                OnMailingZipChanged();
            }
        }
        private global::System.String _MailingZip;
        partial void OnMailingZipChanging(global::System.String value);
        partial void OnMailingZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeadSourceName
        {
            get
            {
                return _LeadSourceName;
            }
            set
            {
                OnLeadSourceNameChanging(value);
                ReportPropertyChanging("LeadSourceName");
                _LeadSourceName = StructuralObject.SetValidValue(value, true, "LeadSourceName");
                ReportPropertyChanged("LeadSourceName");
                OnLeadSourceNameChanged();
            }
        }
        private global::System.String _LeadSourceName;
        partial void OnLeadSourceNameChanging(global::System.String value);
        partial void OnLeadSourceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LossDate
        {
            get
            {
                return _LossDate;
            }
            set
            {
                OnLossDateChanging(value);
                ReportPropertyChanging("LossDate");
                _LossDate = StructuralObject.SetValidValue(value, "LossDate");
                ReportPropertyChanged("LossDate");
                OnLossDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LossDate;
        partial void OnLossDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLossDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterClaimNumber
        {
            get
            {
                return _AdjusterClaimNumber;
            }
            set
            {
                OnAdjusterClaimNumberChanging(value);
                ReportPropertyChanging("AdjusterClaimNumber");
                _AdjusterClaimNumber = StructuralObject.SetValidValue(value, true, "AdjusterClaimNumber");
                ReportPropertyChanged("AdjusterClaimNumber");
                OnAdjusterClaimNumberChanged();
            }
        }
        private global::System.String _AdjusterClaimNumber;
        partial void OnAdjusterClaimNumberChanging(global::System.String value);
        partial void OnAdjusterClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeverityNumber
        {
            get
            {
                return _SeverityNumber;
            }
            set
            {
                OnSeverityNumberChanging(value);
                ReportPropertyChanging("SeverityNumber");
                _SeverityNumber = StructuralObject.SetValidValue(value, "SeverityNumber");
                ReportPropertyChanged("SeverityNumber");
                OnSeverityNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _SeverityNumber;
        partial void OnSeverityNumberChanging(Nullable<global::System.Int32> value);
        partial void OnSeverityNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventType
        {
            get
            {
                return _EventType;
            }
            set
            {
                OnEventTypeChanging(value);
                ReportPropertyChanging("EventType");
                _EventType = StructuralObject.SetValidValue(value, true, "EventType");
                ReportPropertyChanged("EventType");
                OnEventTypeChanged();
            }
        }
        private global::System.String _EventType;
        partial void OnEventTypeChanging(global::System.String value);
        partial void OnEventTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventName
        {
            get
            {
                return _EventName;
            }
            set
            {
                OnEventNameChanging(value);
                ReportPropertyChanging("EventName");
                _EventName = StructuralObject.SetValidValue(value, true, "EventName");
                ReportPropertyChanged("EventName");
                OnEventNameChanged();
            }
        }
        private global::System.String _EventName;
        partial void OnEventNameChanging(global::System.String value);
        partial void OnEventNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimWorkflowType
        {
            get
            {
                return _ClaimWorkflowType;
            }
            set
            {
                OnClaimWorkflowTypeChanging(value);
                ReportPropertyChanging("ClaimWorkflowType");
                _ClaimWorkflowType = StructuralObject.SetValidValue(value, true, "ClaimWorkflowType");
                ReportPropertyChanged("ClaimWorkflowType");
                OnClaimWorkflowTypeChanged();
            }
        }
        private global::System.String _ClaimWorkflowType;
        partial void OnClaimWorkflowTypeChanging(global::System.String value);
        partial void OnClaimWorkflowTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CauseOfLoss
        {
            get
            {
                return _CauseOfLoss;
            }
            set
            {
                OnCauseOfLossChanging(value);
                ReportPropertyChanging("CauseOfLoss");
                _CauseOfLoss = StructuralObject.SetValidValue(value, true, "CauseOfLoss");
                ReportPropertyChanged("CauseOfLoss");
                OnCauseOfLossChanged();
            }
        }
        private global::System.String _CauseOfLoss;
        partial void OnCauseOfLossChanging(global::System.String value);
        partial void OnCauseOfLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimStatusID
        {
            get
            {
                return _ClaimStatusID;
            }
            set
            {
                if (_ClaimStatusID != value)
                {
                    OnClaimStatusIDChanging(value);
                    ReportPropertyChanging("ClaimStatusID");
                    _ClaimStatusID = StructuralObject.SetValidValue(value, "ClaimStatusID");
                    ReportPropertyChanged("ClaimStatusID");
                    OnClaimStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimStatusID;
        partial void OnClaimStatusIDChanging(global::System.Int32 value);
        partial void OnClaimStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClaimSubStatusID
        {
            get
            {
                return _ClaimSubStatusID;
            }
            set
            {
                if (_ClaimSubStatusID != value)
                {
                    OnClaimSubStatusIDChanging(value);
                    ReportPropertyChanging("ClaimSubStatusID");
                    _ClaimSubStatusID = StructuralObject.SetValidValue(value, "ClaimSubStatusID");
                    ReportPropertyChanged("ClaimSubStatusID");
                    OnClaimSubStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ClaimSubStatusID;
        partial void OnClaimSubStatusIDChanging(global::System.Int32 value);
        partial void OnClaimSubStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> policyID
        {
            get
            {
                return _policyID;
            }
            set
            {
                OnpolicyIDChanging(value);
                ReportPropertyChanging("policyID");
                _policyID = StructuralObject.SetValidValue(value, "policyID");
                ReportPropertyChanged("policyID");
                OnpolicyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _policyID;
        partial void OnpolicyIDChanging(Nullable<global::System.Int32> value);
        partial void OnpolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PolicyNumber
        {
            get
            {
                return _PolicyNumber;
            }
            set
            {
                OnPolicyNumberChanging(value);
                ReportPropertyChanging("PolicyNumber");
                _PolicyNumber = StructuralObject.SetValidValue(value, true, "PolicyNumber");
                ReportPropertyChanged("PolicyNumber");
                OnPolicyNumberChanged();
            }
        }
        private global::System.String _PolicyNumber;
        partial void OnPolicyNumberChanging(global::System.String value);
        partial void OnPolicyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> policyTypeID
        {
            get
            {
                return _policyTypeID;
            }
            set
            {
                OnpolicyTypeIDChanging(value);
                ReportPropertyChanging("policyTypeID");
                _policyTypeID = StructuralObject.SetValidValue(value, "policyTypeID");
                ReportPropertyChanged("policyTypeID");
                OnpolicyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _policyTypeID;
        partial void OnpolicyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnpolicyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Coverage
        {
            get
            {
                return _Coverage;
            }
            set
            {
                OnCoverageChanging(value);
                ReportPropertyChanging("Coverage");
                _Coverage = StructuralObject.SetValidValue(value, true, "Coverage");
                ReportPropertyChanged("Coverage");
                OnCoverageChanged();
            }
        }
        private global::System.String _Coverage;
        partial void OnCoverageChanging(global::System.String value);
        partial void OnCoverageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuranceCompanyName
        {
            get
            {
                return _InsuranceCompanyName;
            }
            set
            {
                OnInsuranceCompanyNameChanging(value);
                ReportPropertyChanging("InsuranceCompanyName");
                _InsuranceCompanyName = StructuralObject.SetValidValue(value, true, "InsuranceCompanyName");
                ReportPropertyChanged("InsuranceCompanyName");
                OnInsuranceCompanyNameChanged();
            }
        }
        private global::System.String _InsuranceCompanyName;
        partial void OnInsuranceCompanyNameChanging(global::System.String value);
        partial void OnInsuranceCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusName
        {
            get
            {
                return _StatusName;
            }
            set
            {
                OnStatusNameChanging(value);
                ReportPropertyChanging("StatusName");
                _StatusName = StructuralObject.SetValidValue(value, true, "StatusName");
                ReportPropertyChanged("StatusName");
                OnStatusNameChanged();
            }
        }
        private global::System.String _StatusName;
        partial void OnStatusNameChanging(global::System.String value);
        partial void OnStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubStatusName
        {
            get
            {
                return _SubStatusName;
            }
            set
            {
                OnSubStatusNameChanging(value);
                ReportPropertyChanging("SubStatusName");
                _SubStatusName = StructuralObject.SetValidValue(value, true, "SubStatusName");
                ReportPropertyChanged("SubStatusName");
                OnSubStatusNameChanged();
            }
        }
        private global::System.String _SubStatusName;
        partial void OnSubStatusNameChanging(global::System.String value);
        partial void OnSubStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterName
        {
            get
            {
                return _AdjusterName;
            }
            set
            {
                OnAdjusterNameChanging(value);
                ReportPropertyChanging("AdjusterName");
                _AdjusterName = StructuralObject.SetValidValue(value, true, "AdjusterName");
                ReportPropertyChanged("AdjusterName");
                OnAdjusterNameChanged();
            }
        }
        private global::System.String _AdjusterName;
        partial void OnAdjusterNameChanging(global::System.String value);
        partial void OnAdjusterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AdjusterID
        {
            get
            {
                return _AdjusterID;
            }
            set
            {
                OnAdjusterIDChanging(value);
                ReportPropertyChanging("AdjusterID");
                _AdjusterID = StructuralObject.SetValidValue(value, "AdjusterID");
                ReportPropertyChanged("AdjusterID");
                OnAdjusterIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AdjusterID;
        partial void OnAdjusterIDChanging(Nullable<global::System.Int32> value);
        partial void OnAdjusterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContractorId
        {
            get
            {
                return _ContractorId;
            }
            set
            {
                OnContractorIdChanging(value);
                ReportPropertyChanging("ContractorId");
                _ContractorId = StructuralObject.SetValidValue(value, "ContractorId");
                ReportPropertyChanged("ContractorId");
                OnContractorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ContractorId;
        partial void OnContractorIdChanging(Nullable<global::System.Int32> value);
        partial void OnContractorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractorName
        {
            get
            {
                return _ContractorName;
            }
            set
            {
                OnContractorNameChanging(value);
                ReportPropertyChanging("ContractorName");
                _ContractorName = StructuralObject.SetValidValue(value, true, "ContractorName");
                ReportPropertyChanged("ContractorName");
                OnContractorNameChanged();
            }
        }
        private global::System.String _ContractorName;
        partial void OnContractorNameChanging(global::System.String value);
        partial void OnContractorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AppraiserId
        {
            get
            {
                return _AppraiserId;
            }
            set
            {
                OnAppraiserIdChanging(value);
                ReportPropertyChanging("AppraiserId");
                _AppraiserId = StructuralObject.SetValidValue(value, "AppraiserId");
                ReportPropertyChanged("AppraiserId");
                OnAppraiserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AppraiserId;
        partial void OnAppraiserIdChanging(Nullable<global::System.Int32> value);
        partial void OnAppraiserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AppraiserName
        {
            get
            {
                return _AppraiserName;
            }
            set
            {
                OnAppraiserNameChanging(value);
                ReportPropertyChanging("AppraiserName");
                _AppraiserName = StructuralObject.SetValidValue(value, true, "AppraiserName");
                ReportPropertyChanged("AppraiserName");
                OnAppraiserNameChanged();
            }
        }
        private global::System.String _AppraiserName;
        partial void OnAppraiserNameChanging(global::System.String value);
        partial void OnAppraiserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UmpireName
        {
            get
            {
                return _UmpireName;
            }
            set
            {
                OnUmpireNameChanging(value);
                ReportPropertyChanging("UmpireName");
                _UmpireName = StructuralObject.SetValidValue(value, true, "UmpireName");
                ReportPropertyChanged("UmpireName");
                OnUmpireNameChanged();
            }
        }
        private global::System.String _UmpireName;
        partial void OnUmpireNameChanging(global::System.String value);
        partial void OnUmpireNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProducerId
        {
            get
            {
                return _ProducerId;
            }
            set
            {
                OnProducerIdChanging(value);
                ReportPropertyChanging("ProducerId");
                _ProducerId = StructuralObject.SetValidValue(value, "ProducerId");
                ReportPropertyChanged("ProducerId");
                OnProducerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProducerId;
        partial void OnProducerIdChanging(Nullable<global::System.Int32> value);
        partial void OnProducerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProducerName
        {
            get
            {
                return _ProducerName;
            }
            set
            {
                OnProducerNameChanging(value);
                ReportPropertyChanging("ProducerName");
                _ProducerName = StructuralObject.SetValidValue(value, true, "ProducerName");
                ReportPropertyChanged("ProducerName");
                OnProducerNameChanged();
            }
        }
        private global::System.String _ProducerName;
        partial void OnProducerNameChanging(global::System.String value);
        partial void OnProducerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, "UserID");
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_OpenClaimsListing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_OpenClaimsListing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_OpenClaimsListing object.
        /// </summary>
        /// <param name="insured">Initial value of the Insured property.</param>
        /// <param name="claimant">Initial value of the Claimant property.</param>
        public static vw_OpenClaimsListing Createvw_OpenClaimsListing(global::System.String insured, global::System.String claimant)
        {
            vw_OpenClaimsListing vw_OpenClaimsListing = new vw_OpenClaimsListing();
            vw_OpenClaimsListing.Insured = insured;
            vw_OpenClaimsListing.Claimant = claimant;
            return vw_OpenClaimsListing;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimNumber
        {
            get
            {
                return _ClaimNumber;
            }
            set
            {
                OnClaimNumberChanging(value);
                ReportPropertyChanging("ClaimNumber");
                _ClaimNumber = StructuralObject.SetValidValue(value, true, "ClaimNumber");
                ReportPropertyChanged("ClaimNumber");
                OnClaimNumberChanged();
            }
        }
        private global::System.String _ClaimNumber;
        partial void OnClaimNumberChanging(global::System.String value);
        partial void OnClaimNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true, "Company");
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdjusterName
        {
            get
            {
                return _AdjusterName;
            }
            set
            {
                OnAdjusterNameChanging(value);
                ReportPropertyChanging("AdjusterName");
                _AdjusterName = StructuralObject.SetValidValue(value, true, "AdjusterName");
                ReportPropertyChanged("AdjusterName");
                OnAdjusterNameChanged();
            }
        }
        private global::System.String _AdjusterName;
        partial void OnAdjusterNameChanging(global::System.String value);
        partial void OnAdjusterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileNumber
        {
            get
            {
                return _FileNumber;
            }
            set
            {
                OnFileNumberChanging(value);
                ReportPropertyChanging("FileNumber");
                _FileNumber = StructuralObject.SetValidValue(value, true, "FileNumber");
                ReportPropertyChanged("FileNumber");
                OnFileNumberChanged();
            }
        }
        private global::System.String _FileNumber;
        partial void OnFileNumberChanging(global::System.String value);
        partial void OnFileNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Diary
        {
            get
            {
                return _Diary;
            }
            set
            {
                OnDiaryChanging(value);
                ReportPropertyChanging("Diary");
                _Diary = StructuralObject.SetValidValue(value, "Diary");
                ReportPropertyChanged("Diary");
                OnDiaryChanged();
            }
        }
        private Nullable<global::System.DateTime> _Diary;
        partial void OnDiaryChanging(Nullable<global::System.DateTime> value);
        partial void OnDiaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Insured
        {
            get
            {
                return _Insured;
            }
            set
            {
                if (_Insured != value)
                {
                    OnInsuredChanging(value);
                    ReportPropertyChanging("Insured");
                    _Insured = StructuralObject.SetValidValue(value, false, "Insured");
                    ReportPropertyChanged("Insured");
                    OnInsuredChanged();
                }
            }
        }
        private global::System.String _Insured;
        partial void OnInsuredChanging(global::System.String value);
        partial void OnInsuredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Claimant
        {
            get
            {
                return _Claimant;
            }
            set
            {
                if (_Claimant != value)
                {
                    OnClaimantChanging(value);
                    ReportPropertyChanging("Claimant");
                    _Claimant = StructuralObject.SetValidValue(value, false, "Claimant");
                    ReportPropertyChanged("Claimant");
                    OnClaimantChanged();
                }
            }
        }
        private global::System.String _Claimant;
        partial void OnClaimantChanging(global::System.String value);
        partial void OnClaimantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateLoss
        {
            get
            {
                return _DateLoss;
            }
            set
            {
                OnDateLossChanging(value);
                ReportPropertyChanging("DateLoss");
                _DateLoss = StructuralObject.SetValidValue(value, "DateLoss");
                ReportPropertyChanged("DateLoss");
                OnDateLossChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateLoss;
        partial void OnDateLossChanging(Nullable<global::System.DateTime> value);
        partial void OnDateLossChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateReceived
        {
            get
            {
                return _DateReceived;
            }
            set
            {
                OnDateReceivedChanging(value);
                ReportPropertyChanging("DateReceived");
                _DateReceived = StructuralObject.SetValidValue(value, "DateReceived");
                ReportPropertyChanged("DateReceived");
                OnDateReceivedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateReceived;
        partial void OnDateReceivedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_openLeadClaim")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_openLeadClaim : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_openLeadClaim object.
        /// </summary>
        /// <param name="clientid">Initial value of the clientid property.</param>
        /// <param name="itemcount">Initial value of the itemcount property.</param>
        public static vw_openLeadClaim Createvw_openLeadClaim(global::System.Int32 clientid, global::System.Int32 itemcount)
        {
            vw_openLeadClaim vw_openLeadClaim = new vw_openLeadClaim();
            vw_openLeadClaim.clientid = clientid;
            vw_openLeadClaim.itemcount = itemcount;
            return vw_openLeadClaim;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 clientid
        {
            get
            {
                return _clientid;
            }
            set
            {
                if (_clientid != value)
                {
                    OnclientidChanging(value);
                    ReportPropertyChanging("clientid");
                    _clientid = StructuralObject.SetValidValue(value, "clientid");
                    ReportPropertyChanged("clientid");
                    OnclientidChanged();
                }
            }
        }
        private global::System.Int32 _clientid;
        partial void OnclientidChanging(global::System.Int32 value);
        partial void OnclientidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String statusname
        {
            get
            {
                return _statusname;
            }
            set
            {
                OnstatusnameChanging(value);
                ReportPropertyChanging("statusname");
                _statusname = StructuralObject.SetValidValue(value, true, "statusname");
                ReportPropertyChanged("statusname");
                OnstatusnameChanged();
            }
        }
        private global::System.String _statusname;
        partial void OnstatusnameChanging(global::System.String value);
        partial void OnstatusnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itemcount
        {
            get
            {
                return _itemcount;
            }
            set
            {
                OnitemcountChanging(value);
                ReportPropertyChanging("itemcount");
                _itemcount = StructuralObject.SetValidValue(value, "itemcount");
                ReportPropertyChanged("itemcount");
                OnitemcountChanged();
            }
        }
        private global::System.Int32 _itemcount;
        partial void OnitemcountChanging(global::System.Int32 value);
        partial void OnitemcountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_Reminder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Reminder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Reminder object.
        /// </summary>
        /// <param name="reminderID">Initial value of the ReminderID property.</param>
        public static vw_Reminder Createvw_Reminder(global::System.Int32 reminderID)
        {
            vw_Reminder vw_Reminder = new vw_Reminder();
            vw_Reminder.ReminderID = reminderID;
            return vw_Reminder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReminderID
        {
            get
            {
                return _ReminderID;
            }
            set
            {
                if (_ReminderID != value)
                {
                    OnReminderIDChanging(value);
                    ReportPropertyChanging("ReminderID");
                    _ReminderID = StructuralObject.SetValidValue(value, "ReminderID");
                    ReportPropertyChanged("ReminderID");
                    OnReminderIDChanged();
                }
            }
        }
        private global::System.Int32 _ReminderID;
        partial void OnReminderIDChanging(global::System.Int32 value);
        partial void OnReminderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DueIn
        {
            get
            {
                return _DueIn;
            }
            set
            {
                OnDueInChanging(value);
                ReportPropertyChanging("DueIn");
                _DueIn = StructuralObject.SetValidValue(value, "DueIn");
                ReportPropertyChanged("DueIn");
                OnDueInChanged();
            }
        }
        private Nullable<global::System.Int32> _DueIn;
        partial void OnDueInChanging(Nullable<global::System.Int32> value);
        partial void OnDueInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value, "id");
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private Nullable<global::System.Int32> _id;
        partial void OnidChanging(Nullable<global::System.Int32> value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> creator_id
        {
            get
            {
                return _creator_id;
            }
            set
            {
                Oncreator_idChanging(value);
                ReportPropertyChanging("creator_id");
                _creator_id = StructuralObject.SetValidValue(value, "creator_id");
                ReportPropertyChanged("creator_id");
                Oncreator_idChanged();
            }
        }
        private Nullable<global::System.Int32> _creator_id;
        partial void Oncreator_idChanging(Nullable<global::System.Int32> value);
        partial void Oncreator_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String text
        {
            get
            {
                return _text;
            }
            set
            {
                OntextChanging(value);
                ReportPropertyChanging("text");
                _text = StructuralObject.SetValidValue(value, true, "text");
                ReportPropertyChanged("text");
                OntextChanged();
            }
        }
        private global::System.String _text;
        partial void OntextChanging(global::System.String value);
        partial void OntextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String details
        {
            get
            {
                return _details;
            }
            set
            {
                OndetailsChanging(value);
                ReportPropertyChanging("details");
                _details = StructuralObject.SetValidValue(value, true, "details");
                ReportPropertyChanged("details");
                OndetailsChanged();
            }
        }
        private global::System.String _details;
        partial void OndetailsChanging(global::System.String value);
        partial void OndetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> start_date
        {
            get
            {
                return _start_date;
            }
            set
            {
                Onstart_dateChanging(value);
                ReportPropertyChanging("start_date");
                _start_date = StructuralObject.SetValidValue(value, "start_date");
                ReportPropertyChanged("start_date");
                Onstart_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _start_date;
        partial void Onstart_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onstart_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> end_date
        {
            get
            {
                return _end_date;
            }
            set
            {
                Onend_dateChanging(value);
                ReportPropertyChanging("end_date");
                _end_date = StructuralObject.SetValidValue(value, "end_date");
                ReportPropertyChanged("end_date");
                Onend_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _end_date;
        partial void Onend_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onend_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> status_id
        {
            get
            {
                return _status_id;
            }
            set
            {
                Onstatus_idChanging(value);
                ReportPropertyChanging("status_id");
                _status_id = StructuralObject.SetValidValue(value, "status_id");
                ReportPropertyChanged("status_id");
                Onstatus_idChanged();
            }
        }
        private Nullable<global::System.Int32> _status_id;
        partial void Onstatus_idChanging(Nullable<global::System.Int32> value);
        partial void Onstatus_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> owner_id
        {
            get
            {
                return _owner_id;
            }
            set
            {
                Onowner_idChanging(value);
                ReportPropertyChanging("owner_id");
                _owner_id = StructuralObject.SetValidValue(value, "owner_id");
                ReportPropertyChanged("owner_id");
                Onowner_idChanged();
            }
        }
        private Nullable<global::System.Int32> _owner_id;
        partial void Onowner_idChanging(Nullable<global::System.Int32> value);
        partial void Onowner_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> lead_id
        {
            get
            {
                return _lead_id;
            }
            set
            {
                Onlead_idChanging(value);
                ReportPropertyChanging("lead_id");
                _lead_id = StructuralObject.SetValidValue(value, "lead_id");
                ReportPropertyChanged("lead_id");
                Onlead_idChanged();
            }
        }
        private Nullable<global::System.Int32> _lead_id;
        partial void Onlead_idChanging(Nullable<global::System.Int32> value);
        partial void Onlead_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> master_status_id
        {
            get
            {
                return _master_status_id;
            }
            set
            {
                Onmaster_status_idChanging(value);
                ReportPropertyChanging("master_status_id");
                _master_status_id = StructuralObject.SetValidValue(value, "master_status_id");
                ReportPropertyChanged("master_status_id");
                Onmaster_status_idChanged();
            }
        }
        private Nullable<global::System.Int32> _master_status_id;
        partial void Onmaster_status_idChanging(Nullable<global::System.Int32> value);
        partial void Onmaster_status_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> lead_policy_id
        {
            get
            {
                return _lead_policy_id;
            }
            set
            {
                Onlead_policy_idChanging(value);
                ReportPropertyChanging("lead_policy_id");
                _lead_policy_id = StructuralObject.SetValidValue(value, "lead_policy_id");
                ReportPropertyChanged("lead_policy_id");
                Onlead_policy_idChanged();
            }
        }
        private Nullable<global::System.Int32> _lead_policy_id;
        partial void Onlead_policy_idChanging(Nullable<global::System.Int32> value);
        partial void Onlead_policy_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> policy_type
        {
            get
            {
                return _policy_type;
            }
            set
            {
                Onpolicy_typeChanging(value);
                ReportPropertyChanging("policy_type");
                _policy_type = StructuralObject.SetValidValue(value, "policy_type");
                ReportPropertyChanged("policy_type");
                Onpolicy_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _policy_type;
        partial void Onpolicy_typeChanging(Nullable<global::System.Int32> value);
        partial void Onpolicy_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                OnPriorityIDChanging(value);
                ReportPropertyChanging("PriorityID");
                _PriorityID = StructuralObject.SetValidValue(value, "PriorityID");
                ReportPropertyChanged("PriorityID");
                OnPriorityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PriorityID;
        partial void OnPriorityIDChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isAllDay
        {
            get
            {
                return _isAllDay;
            }
            set
            {
                OnisAllDayChanging(value);
                ReportPropertyChanging("isAllDay");
                _isAllDay = StructuralObject.SetValidValue(value, "isAllDay");
                ReportPropertyChanged("isAllDay");
                OnisAllDayChanged();
            }
        }
        private Nullable<global::System.Boolean> _isAllDay;
        partial void OnisAllDayChanging(Nullable<global::System.Boolean> value);
        partial void OnisAllDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReminderInterval
        {
            get
            {
                return _ReminderInterval;
            }
            set
            {
                OnReminderIntervalChanging(value);
                ReportPropertyChanging("ReminderInterval");
                _ReminderInterval = StructuralObject.SetValidValue(value, "ReminderInterval");
                ReportPropertyChanged("ReminderInterval");
                OnReminderIntervalChanged();
            }
        }
        private Nullable<global::System.Int32> _ReminderInterval;
        partial void OnReminderIntervalChanging(Nullable<global::System.Int32> value);
        partial void OnReminderIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReminder
        {
            get
            {
                return _IsReminder;
            }
            set
            {
                OnIsReminderChanging(value);
                ReportPropertyChanging("IsReminder");
                _IsReminder = StructuralObject.SetValidValue(value, "IsReminder");
                ReportPropertyChanged("IsReminder");
                OnIsReminderChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReminder;
        partial void OnIsReminderChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReminderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="vw_Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_Task object.
        /// </summary>
        /// <param name="taskID">Initial value of the TaskID property.</param>
        /// <param name="activity">Initial value of the Activity property.</param>
        public static vw_Task Createvw_Task(global::System.Int32 taskID, global::System.Int32 activity)
        {
            vw_Task vw_Task = new vw_Task();
            vw_Task.TaskID = taskID;
            vw_Task.Activity = activity;
            return vw_Task;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskID
        {
            get
            {
                return _TaskID;
            }
            set
            {
                if (_TaskID != value)
                {
                    OnTaskIDChanging(value);
                    ReportPropertyChanging("TaskID");
                    _TaskID = StructuralObject.SetValidValue(value, "TaskID");
                    ReportPropertyChanged("TaskID");
                    OnTaskIDChanged();
                }
            }
        }
        private global::System.Int32 _TaskID;
        partial void OnTaskIDChanging(global::System.Int32 value);
        partial void OnTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaskStatusID
        {
            get
            {
                return _TaskStatusID;
            }
            set
            {
                OnTaskStatusIDChanging(value);
                ReportPropertyChanging("TaskStatusID");
                _TaskStatusID = StructuralObject.SetValidValue(value, "TaskStatusID");
                ReportPropertyChanged("TaskStatusID");
                OnTaskStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaskStatusID;
        partial void OnTaskStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaskStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaskStatusName
        {
            get
            {
                return _TaskStatusName;
            }
            set
            {
                OnTaskStatusNameChanging(value);
                ReportPropertyChanging("TaskStatusName");
                _TaskStatusName = StructuralObject.SetValidValue(value, true, "TaskStatusName");
                ReportPropertyChanged("TaskStatusName");
                OnTaskStatusNameChanged();
            }
        }
        private global::System.String _TaskStatusName;
        partial void OnTaskStatusNameChanging(global::System.String value);
        partial void OnTaskStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value, "ClientID");
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientID;
        partial void OnClientIDChanging(Nullable<global::System.Int32> value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, true, "Detail");
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateDue
        {
            get
            {
                return _DateDue;
            }
            set
            {
                OnDateDueChanging(value);
                ReportPropertyChanging("DateDue");
                _DateDue = StructuralObject.SetValidValue(value, "DateDue");
                ReportPropertyChanged("DateDue");
                OnDateDueChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateDue;
        partial void OnDateDueChanging(Nullable<global::System.DateTime> value);
        partial void OnDateDueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> end_date
        {
            get
            {
                return _end_date;
            }
            set
            {
                Onend_dateChanging(value);
                ReportPropertyChanging("end_date");
                _end_date = StructuralObject.SetValidValue(value, "end_date");
                ReportPropertyChanged("end_date");
                Onend_dateChanged();
            }
        }
        private Nullable<global::System.DateTime> _end_date;
        partial void Onend_dateChanging(Nullable<global::System.DateTime> value);
        partial void Onend_dateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeadID
        {
            get
            {
                return _LeadID;
            }
            set
            {
                OnLeadIDChanging(value);
                ReportPropertyChanging("LeadID");
                _LeadID = StructuralObject.SetValidValue(value, "LeadID");
                ReportPropertyChanged("LeadID");
                OnLeadIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeadID;
        partial void OnLeadIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeadIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsuredName
        {
            get
            {
                return _InsuredName;
            }
            set
            {
                OnInsuredNameChanging(value);
                ReportPropertyChanging("InsuredName");
                _InsuredName = StructuralObject.SetValidValue(value, true, "InsuredName");
                ReportPropertyChanged("InsuredName");
                OnInsuredNameChanged();
            }
        }
        private global::System.String _InsuredName;
        partial void OnInsuredNameChanging(global::System.String value);
        partial void OnInsuredNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MasterStatusID
        {
            get
            {
                return _MasterStatusID;
            }
            set
            {
                OnMasterStatusIDChanging(value);
                ReportPropertyChanging("MasterStatusID");
                _MasterStatusID = StructuralObject.SetValidValue(value, "MasterStatusID");
                ReportPropertyChanged("MasterStatusID");
                OnMasterStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MasterStatusID;
        partial void OnMasterStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnMasterStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyID
        {
            get
            {
                return _PolicyID;
            }
            set
            {
                OnPolicyIDChanging(value);
                ReportPropertyChanging("PolicyID");
                _PolicyID = StructuralObject.SetValidValue(value, "PolicyID");
                ReportPropertyChanged("PolicyID");
                OnPolicyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyID;
        partial void OnPolicyIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PolicyTypeID
        {
            get
            {
                return _PolicyTypeID;
            }
            set
            {
                OnPolicyTypeIDChanging(value);
                ReportPropertyChanging("PolicyTypeID");
                _PolicyTypeID = StructuralObject.SetValidValue(value, "PolicyTypeID");
                ReportPropertyChanged("PolicyTypeID");
                OnPolicyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PolicyTypeID;
        partial void OnPolicyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPolicyTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PriorityID
        {
            get
            {
                return _PriorityID;
            }
            set
            {
                OnPriorityIDChanging(value);
                ReportPropertyChanging("PriorityID");
                _PriorityID = StructuralObject.SetValidValue(value, "PriorityID");
                ReportPropertyChanged("PriorityID");
                OnPriorityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PriorityID;
        partial void OnPriorityIDChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PriorityName
        {
            get
            {
                return _PriorityName;
            }
            set
            {
                OnPriorityNameChanging(value);
                ReportPropertyChanging("PriorityName");
                _PriorityName = StructuralObject.SetValidValue(value, true, "PriorityName");
                ReportPropertyChanged("PriorityName");
                OnPriorityNameChanged();
            }
        }
        private global::System.String _PriorityName;
        partial void OnPriorityNameChanging(global::System.String value);
        partial void OnPriorityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isAllDay
        {
            get
            {
                return _isAllDay;
            }
            set
            {
                OnisAllDayChanging(value);
                ReportPropertyChanging("isAllDay");
                _isAllDay = StructuralObject.SetValidValue(value, "isAllDay");
                ReportPropertyChanged("isAllDay");
                OnisAllDayChanged();
            }
        }
        private Nullable<global::System.Boolean> _isAllDay;
        partial void OnisAllDayChanging(Nullable<global::System.Boolean> value);
        partial void OnisAllDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReminderInterval
        {
            get
            {
                return _ReminderInterval;
            }
            set
            {
                OnReminderIntervalChanging(value);
                ReportPropertyChanging("ReminderInterval");
                _ReminderInterval = StructuralObject.SetValidValue(value, "ReminderInterval");
                ReportPropertyChanged("ReminderInterval");
                OnReminderIntervalChanged();
            }
        }
        private Nullable<global::System.Int32> _ReminderInterval;
        partial void OnReminderIntervalChanging(Nullable<global::System.Int32> value);
        partial void OnReminderIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReminder
        {
            get
            {
                return _IsReminder;
            }
            set
            {
                OnIsReminderChanging(value);
                ReportPropertyChanging("IsReminder");
                _IsReminder = StructuralObject.SetValidValue(value, "IsReminder");
                ReportPropertyChanged("IsReminder");
                OnIsReminderChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReminder;
        partial void OnIsReminderChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReminderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true, "Location");
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CarrierID
        {
            get
            {
                return _CarrierID;
            }
            set
            {
                OnCarrierIDChanging(value);
                ReportPropertyChanging("CarrierID");
                _CarrierID = StructuralObject.SetValidValue(value, "CarrierID");
                ReportPropertyChanged("CarrierID");
                OnCarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CarrierID;
        partial void OnCarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OnCarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Activity
        {
            get
            {
                return _Activity;
            }
            set
            {
                if (_Activity != value)
                {
                    OnActivityChanging(value);
                    ReportPropertyChanging("Activity");
                    _Activity = StructuralObject.SetValidValue(value, "Activity");
                    ReportPropertyChanged("Activity");
                    OnActivityChanged();
                }
            }
        }
        private global::System.Int32 _Activity;
        partial void OnActivityChanging(global::System.Int32 value);
        partial void OnActivityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CRMModel", Name="ZipCodeMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZipCodeMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZipCodeMaster object.
        /// </summary>
        /// <param name="zipCodeID">Initial value of the ZipCodeID property.</param>
        public static ZipCodeMaster CreateZipCodeMaster(global::System.Int32 zipCodeID)
        {
            ZipCodeMaster zipCodeMaster = new ZipCodeMaster();
            zipCodeMaster.ZipCodeID = zipCodeID;
            return zipCodeMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZipCodeID
        {
            get
            {
                return _ZipCodeID;
            }
            set
            {
                if (_ZipCodeID != value)
                {
                    OnZipCodeIDChanging(value);
                    ReportPropertyChanging("ZipCodeID");
                    _ZipCodeID = StructuralObject.SetValidValue(value, "ZipCodeID");
                    ReportPropertyChanged("ZipCodeID");
                    OnZipCodeIDChanged();
                }
            }
        }
        private global::System.Int32 _ZipCodeID;
        partial void OnZipCodeIDChanging(global::System.Int32 value);
        partial void OnZipCodeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                OnStateIDChanging(value);
                ReportPropertyChanging("StateID");
                _StateID = StructuralObject.SetValidValue(value, "StateID");
                ReportPropertyChanged("StateID");
                OnStateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StateID;
        partial void OnStateIDChanging(Nullable<global::System.Int32> value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, true, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Mortgagee_ZipCodeMaster", "Mortgagee")]
        public EntityCollection<Mortgagee> Mortgagees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Mortgagee>("CRMModel.fk_Mortgagee_ZipCodeMaster", "Mortgagee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Mortgagee>("CRMModel.fk_Mortgagee_ZipCodeMaster", "Mortgagee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CRMModel", "fk_Carrier_ZipCodeMaster", "Carrier")]
        public EntityCollection<Carrier> Carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carrier>("CRMModel.fk_Carrier_ZipCodeMaster", "Carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carrier>("CRMModel.fk_Carrier_ZipCodeMaster", "Carrier", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
